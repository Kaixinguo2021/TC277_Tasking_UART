	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\.IfxDsadc_Dsadc.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\2_CDrv\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.src ..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c'

	
$TC16X
	.sdecl	'.zrodata.IfxDsadc_Dsadc..3.cnt',data,rom
	.sect	'.zrodata.IfxDsadc_Dsadc..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	1259902592
	.sdecl	'.zrodata.IfxDsadc_Dsadc..4.cnt',data,rom
	.sect	'.zrodata.IfxDsadc_Dsadc..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	1176256512
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_calcDIVx',code,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_calcDIVx'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     2   * \file IfxDsadc_Dsadc.c
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     3   * \brief DSADC DSADC details
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     4   *
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     5   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     7   *
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     8   *
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    10   *
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    11   *
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    15   * products.
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    16   *
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    22   *
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    23   */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    24  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    25  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    26  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    27  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    28  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    29  #include "IfxDsadc_Dsadc.h"
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    30  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    31  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    32  /*-----------------------Private Function Prototypes--------------------------*/
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    33  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    34  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    35  /** \brief calculate division factor
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    36   * \param sourceFreq Source frequency
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    37   * \param targetFreq Target frequency
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    38   * \return division factor
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    39   */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    40  static sint32 IfxDsadc_Dsadc_calcDIVx(float32 sourceFreq, float32 *targetFreq);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    41  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    42  /** \brief Initialises the auxilary filter
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    43   * \param channel Pointer to the DSADC channel handle
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    44   * \param config pointer to the DSADC fir auxilary filter configuration
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    45   * \return None
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    46   */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    47  static void IfxDsadc_Dsadc_initAuxFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_AuxFilterConfig *config);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    48  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    49  /** \brief Initialises the comb filter
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    50   * \param channel Pointer to the DSADC channel handle
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    51   * \param config pointer to the DSADC comb filter configuration
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    52   * \return None
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    53   */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    54  static void IfxDsadc_Dsadc_initCombFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_CombFilterConfig *config);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    55  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    56  /** \brief Initialises the demodulator
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    57   * \param channel Pointer to the DSADC channel handle
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    58   * \param config pointer to the DSADC demodulator configuration
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    59   * \return None
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    60   */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    61  static void IfxDsadc_Dsadc_initDemodulator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_DemodulatorConfig *config);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    62  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    63  /** \brief Initialises the fir filter
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    64   * \param channel Pointer to the DSADC channel handle
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    65   * \param config pointer to the DSADC fir filter configuration
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    66   * \return None
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    67   */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    68  static void IfxDsadc_Dsadc_initFirFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_FirFilterConfig *config);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    69  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    70  /** \brief Initialises the integrator
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    71   * \param channel Pointer to the DSADC channel handle
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    72   * \param config pointer to the DSADC fir integrator configuration
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    73   * \return None
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    74   */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    75  static void IfxDsadc_Dsadc_initIntegrator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_IntegratorConfig *config);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    76  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    77  /** \brief Initialises the modulator
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    78   * \param channel Pointer to the DSADC channel handle
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    79   * \param config pointer to the DSADC modulator configuration
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    80   * \return None
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    81   */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    82  static void IfxDsadc_Dsadc_initModulator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_ModulatorConfig *config);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    83  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    84  /** \brief Initialises the rectifier
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    85   * \param channel Pointer to the DSADC channel handle
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    86   * \param config pointer to the DSADC fir rectifier configuration
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    87   * \return None
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    88   */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    89  static void IfxDsadc_Dsadc_initRectifier(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_RectifierConfig *config);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    90  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    91  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    92  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    93  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    94  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    95  static sint32 IfxDsadc_Dsadc_calcDIVx(float32 sourceFreq, float32 *targetFreq)
; Function IfxDsadc_Dsadc_calcDIVx
.L23:
IfxDsadc_Dsadc_calcDIVx:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    96  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    97      float32 bestError = 10e6;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    98      sint32  bestDiv   = 2, i;
	mov	d0,#2
	ld.w	d1,.3.cnt
.L339:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	    99  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   100      for (i = 2; i <= 32; i += 2)
	mov	d2,d0
	mov.a	a15,#15
.L289:
	mov	d3,#0
.L2:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   101      {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   102          float32 freq  = sourceFreq / i;
	itof	d15,d2
.L492:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   103          float32 error = __absf(freq - *targetFreq);
	div.f	d15,d4,d15
	ld.w	d5,[a4]
.L340:
	sub.f	d5,d15,d5
	cmp.f	d15,d5,d3
.L341:
	jz.t	d15:0,.L4
	insn.t	d5,d5:31,d5:31
.L4:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   104  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   105          if (__leqf(error, bestError))
	cmp.f	d15,d5,d1
.L342:
	jnz.t	d15:2,.L5
.L493:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   106          {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   107              bestError = error;
	mov	e0,d5,d2
.L494:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   108              bestDiv   = i;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   109  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   110              if (!__neqf(error, 0))
	cmp.f	d15,d5,d3
	jz.t	d15:2,.L6
.L5:
	add	d2,#2
	loop	a15,.L2

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   111              {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   112                  break;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   113              }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   114          }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   115      }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   116  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   117      *targetFreq = sourceFreq / bestDiv;
.L6:
	itof	d15,d0
.L343:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   118  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   119      return (bestDiv / 2) - 1;
	sha	d0,#-1
.L495:
	div.f	d15,d4,d15
	st.w	[a4],d15
.L496:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   120  }
	add	d2,d0,#-1
	ret
.L282:
	
__IfxDsadc_Dsadc_calcDIVx_function_end:
	.size	IfxDsadc_Dsadc_calcDIVx,__IfxDsadc_Dsadc_calcDIVx_function_end-IfxDsadc_Dsadc_calcDIVx
.L97:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_getAuxResult',code,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_getAuxResult'
	.align	2
	
	.global	IfxDsadc_Dsadc_getAuxResult

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   121  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   122  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   123  sint16 IfxDsadc_Dsadc_getAuxResult(IfxDsadc_Dsadc_Channel *channel)
; Function IfxDsadc_Dsadc_getAuxResult
.L25:
IfxDsadc_Dsadc_getAuxResult:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   124  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   125      return IfxDsadc_getAuxResult(channel->module, channel->channelId);
	ld.a	a15,[a4]
.L470:
	ld.bu	d15,[a4]8
.L272:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
	sha	d15,d15,#8
.L471:
	addsc.a	a15,a15,d15,#0
.L472:
	ld.hu	d15,[a15]320
.L473:
	extr	d2,d15,#0,#16

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   126  sadc_initAuxFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_AuxFilterConfig *config)
	ret
.L269:
	
__IfxDsadc_Dsadc_getAuxResult_function_end:
	.size	IfxDsadc_Dsadc_getAuxResult,__IfxDsadc_Dsadc_getAuxResult_function_end-IfxDsadc_Dsadc_getAuxResult
.L87:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initAuxFilter',code,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initAuxFilter'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   127  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   128      Ifx_DSADC_CH_FCFGA fcfga;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   129  
; Function IfxDsadc_Dsadc_initAuxFilter
.L27:
IfxDsadc_Dsadc_initAuxFilter:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   130      fcfga.U                   = 0;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   131  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   132      fcfga.B.CFADF             = config->decimationFactor - 1;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   133      fcfga.B.CFAC              = config->combFilterType;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   134  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   135      fcfga.B.SRGA              = config->serviceRequest;
	ld.bu	d15,[a5]6
.L501:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   136      fcfga.B.ESEL              = config->eventSelect;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   137      fcfga.B.EGT               = config->eventGate;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   138  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   139      fcfga.B.AFSC              = config->combFilterShift;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   140  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   141      (channel->channel)->FCFGA = fcfga;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   142  }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   143  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   144  
	mov	d0,#0
	ld.a	a15,[a4]4
.L344:
	add	d15,#-1
	extr.u	d15,d15,#0,#8
.L502:
	insert	d0,d0,d15,#0,#8
	ld.bu	d15,[a5]1
.L503:
	insert	d0,d0,d15,#8,#2
	ld.bu	d15,[a5]3
.L504:
	insert	d0,d0,d15,#10,#2
	ld.bu	d15,[a5]4
.L505:
	insert	d0,d0,d15,#12,#2
	ld.bu	d15,[a5]5
.L506:
	insert	d0,d0,d15,#14,#1
	ld.bu	d15,[a5]2
.L507:
	insert	d0,d0,d15,#16,#2
	st.w	[a15]24,d0
.L508:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   145  void IfxDsadc_Dsadc_initCarrierGen(IfxDsadc_Dsadc *dsadc, const IfxDsadc_Dsadc_CarrierGenConfig *config)
	ret
.L291:
	
__IfxDsadc_Dsadc_initAuxFilter_function_end:
	.size	IfxDsadc_Dsadc_initAuxFilter,__IfxDsadc_Dsadc_initAuxFilter_function_end-IfxDsadc_Dsadc_initAuxFilter
.L102:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCarrierGen',code,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCarrierGen'
	.align	2
	
	.global	IfxDsadc_Dsadc_initCarrierGen

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   146  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   147      Ifx_DSADC_CGCFG cgcfg;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   148  
; Function IfxDsadc_Dsadc_initCarrierGen
.L29:
IfxDsadc_Dsadc_initCarrierGen:	.type	func
	sub.a	a10,#8
.L345:
	mov.aa	a12,a4
.L352:
	mov.aa	a13,a5
.L351:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   149      cgcfg.U = 0;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   150  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   151      float32         sourceFreq = IfxDsadc_getModulatorInputClockFreq(dsadc->dsadc);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   152      float32         targetFreq = config->frequency;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   153      cgcfg.B.DIVCG       = IfxDsadc_Dsadc_calcDIVx(sourceFreq / (32 * 32), &targetFreq);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   154      cgcfg.B.SIGPOL      = (config->inverted == FALSE) ? 0 : 1;
	mov	d8,#0
	ld.a	a4,[a12]
.L145:
	call	IfxDsadc_getModulatorInputClockFreq
.L346:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   155      cgcfg.B.BREV        = (config->bitReversed == FALSE) ? 0 : 1;
	ld.w	d15,[a13]4
.L406:
	st.w	[a10],d15
.L407:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   156      cgcfg.B.CGMOD       = config->carrierWaveformMode;
	movh	d15,#14976
	mov.aa	a4,a10
.L408:
	mul.f	d4,d2,d15
	call	IfxDsadc_Dsadc_calcDIVx
.L347:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   157  
	insert	d8,d8,d2,#4,#4
	ld.bu	d15,[a13]1
.L409:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   158      dsadc->dsadc->CGCFG = cgcfg;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   159  
	ld.bu	d0,[a13]
.L410:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   160      const IfxDsadc_Cgpwm_Out *pinPos = config->pinPos;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   161  
	ne	d15,d15,#0
	ld.a	a2,[a12]
.L411:
	insert	d8,d8,d15,#3,#1
	ld.bu	d15,[a13]2
	ne	d15,d15,#0
.L412:
	insert	d15,d8,d15,#2,#1
.L413:
	insert	d15,d15,d0,#0,#2
.L414:
	insert	d8,d8,d15,#0,#8
	st.w	[a2]160,d8
.L150:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   162      if (pinPos != NULL_PTR)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   163      {                           /* Initialise positive carrier pin */
	ld.a	a15,[a13]8
.L349:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   164          IfxDsadc_initCgPwmPin(pinPos, config->pinMode, config->pinDriver);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   165      }
	jz.a	a15,.L9
.L415:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   166  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   167      const IfxDsadc_Cgpwm_Out *pinNeg = config->pinNeg;
	fcall	.cocofun_5
.L154:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	call	IfxPort_setPinMode
.L163:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   630      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
	ld.a	a4,[a15]4
.L416:
	ld.bu	d4,[a15]8
.L417:
	mov	d5,d8
	call	IfxPort_setPinPadDriver
.L9:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   168                     /* Initialise negative carrier pin */
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   169          IfxDsadc_initCgPwmPin(pinNeg, config->pinMode, config->pinDriver);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   170      }
	ld.a	a15,[a13]12
.L350:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   171  }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   172  
	jz.a	a15,.L10
.L418:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   173  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   174  void IfxDsadc_Dsadc_initChannel(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_ChannelConfig *config)
	fcall	.cocofun_5
.L174:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	call	IfxPort_setPinMode
.L175:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   630      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
	ld.a	a4,[a15]4
.L419:
	ld.bu	d4,[a15]8
.L420:
	mov	d5,d8
	j	IfxPort_setPinPadDriver
.L10:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   175  fx_DSADC *dsadc = config->module;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   176  
	ret
.L138:
	
__IfxDsadc_Dsadc_initCarrierGen_function_end:
	.size	IfxDsadc_Dsadc_initCarrierGen,__IfxDsadc_Dsadc_initCarrierGen_function_end-IfxDsadc_Dsadc_initCarrierGen
.L62:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.IfxDsadc_Dsadc..cocofun_5'
	.align	2
; Function .cocofun_5
.L31:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
	ld.bu	d15,[a15]12
.L607:
	ld.bu	d5,[a13]16
.L608:
	ld.bu	d8,[a13]17
.L348:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
	ld.a	a4,[a15]4
.L609:
	ld.bu	d4,[a15]8
.L610:
	fret
.L137:
	; End of function
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initChannel',code,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initChannel'
	.align	2
	
	.global	IfxDsadc_Dsadc_initChannel

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   177    channel->channelId = config->channelId;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   178      channel->module    = dsadc;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   179      channel->channel   = (Ifx_DSADC_CH *)&dsadc->CH[config->channelId];
; Function IfxDsadc_Dsadc_initChannel
.L33:
IfxDsadc_Dsadc_initChannel:	.type	func
	mov.aa	a13,a5
.L355:
	mov.aa	a12,a4
.L356:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   180  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   181      IfxDsadc_Dsadc_initModulator(channel, &config->modulator);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   182      IfxDsadc_Dsadc_initDemodulator(channel, &config->demodulator);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   183      IfxDsadc_Dsadc_initCombFilter(channel, &config->combFilter);
	ld.bu	d15,[a13]4
.L441:
	ld.a	a2,[a13]
.L358:
	st.b	[a12]8,d15
.L442:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   184      IfxDsadc_Dsadc_initFirFilter(channel, &config->firFilter);
	st.a	[a12],a2
.L443:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   185      IfxDsadc_Dsadc_initIntegrator(channel, &config->integrator);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   186      IfxDsadc_Dsadc_initAuxFilter(channel, &config->auxFilter);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   187      IfxDsadc_Dsadc_initRectifier(channel, &config->rectifier);
	lea	a5,[a13]8
.L354:
	ld.bu	d15,[a13]4
	sha	d15,d15,#8
.L444:
	addsc.a	a2,a2,d15,#0
.L359:
	lea	a15,[a2]256
.L445:
	st.a	[a12]4,a15
.L446:
	call	IfxDsadc_Dsadc_initModulator
.L353:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   188  
	lea	a5,[a13]20
	mov.aa	a4,a12
.L360:
	call	IfxDsadc_Dsadc_initDemodulator
.L361:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   189      const IfxDsadc_Dsadc_ChannelPins *pins = config->channelPins;
	lea	a5,[a13]28
	mov.aa	a4,a12
.L362:
	call	IfxDsadc_Dsadc_initCombFilter
.L363:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   190  
	lea	a5,[a13]36
	mov.aa	a4,a12
.L364:
	call	IfxDsadc_Dsadc_initFirFilter
.L365:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   191      if (pins != NULL_PTR)
	lea	a5,[a13]44
	mov.aa	a4,a12
.L366:
	call	IfxDsadc_Dsadc_initIntegrator
.L367:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   192      {
	lea	a5,[a13]52
	mov.aa	a4,a12
.L368:
	call	IfxDsadc_Dsadc_initAuxFilter
.L369:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   193          const IfxDsadc_Dsn_In *dsn = pins->dsn;
	lea	a5,[a13]60
	mov.aa	a4,a12
.L370:
	call	IfxDsadc_Dsadc_initRectifier
.L199:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   194  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   195          if (dsn != NULL_PTR)
	ld.a	a12,[a13]64
.L357:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   196          {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   197              IfxDsadc_initDsnPin(dsn, pins->dsnMode);
	jz.a	a12,.L11
.L202:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   198          }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   199  
	ld.a	a15,[a12]24
.L371:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   200          const IfxDsadc_Dsp_In *dsp = pins->dsp;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   201  
	jz.a	a15,.L12
.L206:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   630      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   634  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   636      IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   640  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   642      IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   643      IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   647  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   649      IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   650  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   652  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   653  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   654  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   655      if (dsn->pin.port != NULL_PTR)
	ld.a	a4,[a15]8
.L207:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   202  TR)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   203          {
	ld.b	d15,[a12]28
.L214:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   655      if (dsn->pin.port != NULL_PTR)      (inlined)
	jz.a	a4,.L13
.L216:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   630      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   634  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   636      IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   640  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   642      IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   643      IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   647  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   649      IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   650  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   652  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   653  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   654  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   655      if (dsn->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   656      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   657          IfxPort_setPinModeInput(dsn->pin.port, dsn->pin.pinIndex, pinMode);
	ld.bu	d4,[a15]12
.L447:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d15,#0,#8
	call	IfxPort_setPinMode

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   655      if (dsn->pin.port != NULL_PTR)      (inlined)
.L13:
.L12:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   204            IfxDsadc_initDspPin(dsp, pins->dspMode);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   205          }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   206  
	ld.a	a15,[a12]32
.L372:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   207          const IfxDsadc_Cin_In *cin = pins->cin;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   208  
	jz.a	a15,.L14
.L227:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   630      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   634  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   636      IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   640  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   642      IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   643      IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   647  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   649      IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   650  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   652  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   653  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   654  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   655      if (dsn->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   656      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   657          IfxPort_setPinModeInput(dsn->pin.port, dsn->pin.pinIndex, pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   658      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   659  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   660  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   662  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   663  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   664      if (dsp->pin.port != NULL_PTR)
	ld.a	a4,[a15]8
.L228:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   209     if (cin != NULL_PTR)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   210          {
	ld.b	d15,[a12]36
.L235:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   664      if (dsp->pin.port != NULL_PTR)      (inlined)
	jz.a	a4,.L15
.L236:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   630      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   634  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   636      IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   640  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   642      IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   643      IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   647  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   649      IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   650  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   652  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   653  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   654  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   655      if (dsn->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   656      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   657          IfxPort_setPinModeInput(dsn->pin.port, dsn->pin.pinIndex, pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   658      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   659  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   660  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   662  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   663  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   664      if (dsp->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   665      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   666          IfxPort_setPinModeInput(dsp->pin.port, dsp->pin.pinIndex, pinMode);
	ld.bu	d4,[a15]12
.L448:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d15,#0,#8
	call	IfxPort_setPinMode

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   664      if (dsp->pin.port != NULL_PTR)      (inlined)
.L15:
.L14:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   211            IfxDsadc_initCinPin(cin, pins->cinMode);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   212          }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   213  
	ld.a	a15,[a12]
.L373:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   214          const IfxDsadc_Din_In *din = pins->din;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   215  
	jz.a	a15,.L16
.L240:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   216          if (din != NULL_PTR)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   217          {
	ld.bu	d15,[a12]4
.L449:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   630      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   634  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   636      IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
	ld.a	a4,[a15]8
.L450:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d15,#0,#8
	ld.bu	d4,[a15]12
.L451:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	call	IfxPort_setPinMode
.L16:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   218       IfxDsadc_initDinPin(din, pins->dinMode);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   219          }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   220  
	ld.a	a15,[a12]8
.L374:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   221          const IfxDsadc_Itr_In *itr = pins->itr;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   222  
	jz.a	a15,.L17
.L249:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   223          if (itr != NULL_PTR)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   224          {
	ld.bu	d15,[a12]12
.L452:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   630      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   634  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   636      IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   640  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   642      IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   643      IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   647  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   649      IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
	ld.a	a4,[a15]8
.L453:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d15,#0,#8
	ld.bu	d4,[a15]12
.L454:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	call	IfxPort_setPinMode
.L17:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   225       IfxDsadc_initItrPin(itr, pins->itrMode);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   226          }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   227      }
	ld.a	a15,[a12]16
.L375:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   228  }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   229  
	jz.a	a15,.L18
.L258:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   230  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   231  void IfxDsadc_Dsadc_initChannelConfig(IfxDsadc_Dsadc_ChannelConfig *config, IfxDsadc_Dsadc *dsadc)
	ld.b	d15,[a12]20
.L455:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     2   * \file IfxDsadc.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     3   * \brief DSADC  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     4   * \ingroup IfxLld_Dsadc
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    24   * \defgroup IfxLld_Dsadc_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    25   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    26   * \defgroup IfxLld_Dsadc_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    27   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    28   * \defgroup IfxLld_Dsadc_Std_Support Support Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    29   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    30   * \defgroup IfxLld_Dsadc_Std_Interrupt Interrupt Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    31   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    32   * \defgroup IfxLld_Dsadc_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    33   * \ingroup IfxLld_Dsadc_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    36  #ifndef IFXDSADC_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    37  #define IFXDSADC_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    43  #include "_Impl/IfxDsadc_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    44  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    45  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    46  #include "_PinMap/IfxDsadc_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    47  #include "IfxDsadc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    51  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    53  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    54  /** \addtogroup IfxLld_Dsadc_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    56  /** \brief Comb Filter (auxiliary) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    57   * Definition in Ifx_DSADC.FCFGA.B.AFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    59  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    61      IfxDsadc_AuxCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    62      IfxDsadc_AuxCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    63      IfxDsadc_AuxCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    64      IfxDsadc_AuxCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    65  } IfxDsadc_AuxCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    67  /** \brief Comb Filter (auxiliary) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    68   * Definition in Ifx_DSADC.FCFGA.B.CFAC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    72      IfxDsadc_AuxCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    73      IfxDsadc_AuxCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    74      IfxDsadc_AuxCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    75      IfxDsadc_AuxCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    76  } IfxDsadc_AuxCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    78  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    79   * Definition in Ifx_DSADC.FCFGA.B.ESEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    83      IfxDsadc_AuxEvent_everyNewResult  = 0, /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    84      IfxDsadc_AuxEvent_insideBoundary  = 1, /**< \brief If result is inside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    85      IfxDsadc_AuxEvent_outsideBoundary = 2  /**< \brief If result is outside the boundary band */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    86  } IfxDsadc_AuxEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    88  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    89   * Definition in Ifx_DSADC.FCFGA.B.EGT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    93      IfxDsadc_AuxGate_definedByESEL       = 0, /**< \brief Separate: generate events according to ESEL */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    94      IfxDsadc_AuxGate_coupledToIntegrator = 1  /**< \brief Coupled: generate events only when the integrator is enabled and after the discard phase defined by bitfield NVALDIS */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    95  } IfxDsadc_AuxGate;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    97  /** \brief Service request generation (auxiliary)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    98   * Definition in Ifx_DSADC.FCFGA.B.SRGA
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   102      IfxDsadc_AuxServiceRequest_never     = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   103      IfxDsadc_AuxServiceRequest_auxFilter = 1,  /**< \brief Auxiliary filter: As selected by bitfield ESEL (\ref IfxDsadc_AuxEvent) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   104      IfxDsadc_AuxServiceRequest_altSource = 2   /**< \brief Alternate source: Capturing of a sign delay value to register CGSYNCx (x = 0 - 5) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   105  } IfxDsadc_AuxServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   107  /** \brief Carrier generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   108   * Definition in Ifx_DSADC.CGCFG.B.CGMOD
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   110  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   112      IfxDsadc_CarrierWaveformMode_stopped  = 0,  /**< \brief Carrier Generator stopped */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   113      IfxDsadc_CarrierWaveformMode_square   = 1,  /**< \brief Carrier Generator generates square wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   114      IfxDsadc_CarrierWaveformMode_triangle = 2,  /**< \brief Carrier Generator generates triangle wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   115      IfxDsadc_CarrierWaveformMode_sine     = 3   /**< \brief Carrier Generator generates sine wave */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   116  } IfxDsadc_CarrierWaveformMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   118  /** \brief Specifies the channel Index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   120  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   121  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   122      IfxDsadc_ChannelId_0 = 0,  /**< \brief Specifies the channel Index 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   123      IfxDsadc_ChannelId_1 = 1,  /**< \brief Specifies the channel Index 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   124      IfxDsadc_ChannelId_2 = 2,  /**< \brief Specifies the channel Index 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   125      IfxDsadc_ChannelId_3 = 3,  /**< \brief Specifies the channel Index 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   126      IfxDsadc_ChannelId_4 = 4,  /**< \brief Specifies the channel Index 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   127      IfxDsadc_ChannelId_5 = 5   /**< \brief Specifies the channel Index 5 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   128  } IfxDsadc_ChannelId;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   130  /** \brief Modulator common mode voltage selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   131   * Definition in Ifx_DSADC.MODCFGx.B.CMVS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   132   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   133  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   134  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   135      IfxDsadc_CommonModeVoltage_a = 0,  /**< \brief VCM = VAREF / 3.03 (1.65 V for VAREF = 5.0 V), recommended for VDDM = 3.3 V1.65V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   136      IfxDsadc_CommonModeVoltage_b = 1,  /**< \brief VCM = VAREF / 2.27 (2.2 V for VAREF = 5.0 V), recommended for low distortion of AC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   137      IfxDsadc_CommonModeVoltage_c = 2   /**< \brief VCM = VAREF / 2.0 (2.5 V for VAREF = 5.0 V), recommended for DC-coupled signals */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   138  } IfxDsadc_CommonModeVoltage;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   140  /** \brief FIR data shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   141   * Selects the displacement caused by the data shifter at the FIR filter output\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   142   * Definition in Ifx_DSADC.FCFGM.B.DSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   144  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   146      IfxDsadc_FirDataShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   147      IfxDsadc_FirDataShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   148      IfxDsadc_FirDataShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   149      IfxDsadc_FirDataShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   150  } IfxDsadc_FirDataShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   152  /** \brief FIR shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   153   * Selects the displacement caused by the data shifter inbetween the FIR filter blocks.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   154   * Definition in Ifx_DSADC.FCFGM.B.FSH
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   158      IfxDsadc_FirInternalShift_noShift  = 0, /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   159      IfxDsadc_FirInternalShift_shiftBy1 = 1  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   160  } IfxDsadc_FirInternalShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   162  /** \brief Modulator configuration of positive/negative input line\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   163   * Definition in Ifx_DSADC.MODCFGx.B.INCFGP and Ifx_DSADC.MODCFGx.B.INCFGN
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   167      IfxDsadc_InputConfig_inputPin          = 0,  /**< \brief Modulator input connected to external pin */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   168      IfxDsadc_InputConfig_supplyVoltage     = 1,  /**< \brief Modulator input connected to supply voltage V_ddm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   169      IfxDsadc_InputConfig_commonModeVoltage = 2,  /**< \brief Modulator input connected to common mode voltage V_cm */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   170      IfxDsadc_InputConfig_referenceGround   = 3   /**< \brief Modulator input connected to reference ground V_ref */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   171  } IfxDsadc_InputConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   173  /** \brief Demodulator input data source selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   174   * Definition in Ifx_DSADC.DICFG.B.DSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   178      IfxDsadc_InputDataSource_onChipStandAlone = 0,  /**< \brief On-chip modulator, standalone (3rd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   179      IfxDsadc_InputDataSource_onChipCombined   = 1,  /**< \brief On-chip modulator, yield (2nd order) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   180      IfxDsadc_InputDataSource_directInputA     = 2,  /**< \brief External, from input A, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   181      IfxDsadc_InputDataSource_invertedInputA   = 3,  /**< \brief External, from input A, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   182      IfxDsadc_InputDataSource_directInputB     = 4,  /**< \brief External, from input B, direct */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   183      IfxDsadc_InputDataSource_invertedInputB   = 5   /**< \brief External, from input B, inverted */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   184  } IfxDsadc_InputDataSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   186  /** \brief Modulator gain select of analog input path\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   187   * Definition in Ifx_DSADC.MODCFGx.B.GAINSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   188   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   189  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   190  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   191      IfxDsadc_InputGain_factor1  = 0, /**< \brief Input gain factor: 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   192      IfxDsadc_InputGain_factor2  = 1, /**< \brief Input gain factor: 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   193      IfxDsadc_InputGain_factor4  = 2, /**< \brief Input gain factor: 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   194      IfxDsadc_InputGain_factor8  = 3, /**< \brief Input gain factor: 8 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   195      IfxDsadc_InputGain_factor16 = 4  /**< \brief Input gain factor: 16 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   196  } IfxDsadc_InputGain;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   198  /** \brief Modulator input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   199   * Definition in Ifx_DSADC.MODCFGx.B.INMUX
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   203      IfxDsadc_InputPin_a = 0,  /**< \brief Pin A connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   204      IfxDsadc_InputPin_b = 1,  /**< \brief Pin B connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   205      IfxDsadc_InputPin_c = 2,  /**< \brief Pin C connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   206      IfxDsadc_InputPin_d = 3   /**< \brief Pin D connected to modulator input */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   207  } IfxDsadc_InputPin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   209  /** \brief Integrator window size\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   210   * Definition in Ifx_DSADC.IWCTR.B.IWS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   212  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   214      IfxDsadc_IntegrationWindowSize_internalControl = 0,  /**< \brief Internal control: stop integrator after REPVAL+1 integration cycles */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   215      IfxDsadc_IntegrationWindowSize_externalControl = 1   /**< \brief External control: stop integrator when bit INTEN becomes 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   216  } IfxDsadc_IntegrationWindowSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   218  /** \brief Integrator trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   219   * NOTE: switch-first to bypassed before using other mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   220   * Definition in Ifx_DSADC.DICFG.B.ITRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   221   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   222  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   223  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   224      IfxDsadc_IntegratorTrigger_bypassed     = 0, /**< \brief No integration trigger, integrator bypassed */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   225      IfxDsadc_IntegratorTrigger_fallingEdge  = 1, /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   226      IfxDsadc_IntegratorTrigger_risingEdge   = 2, /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   227      IfxDsadc_IntegratorTrigger_alwaysActive = 3  /**< \brief No trigger, integrator active all the time */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   228  } IfxDsadc_IntegratorTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   230  /** \brief Low power supply voltage select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   231   * Definition in Ifx_DSADC.GLOBCFG.B.LOSUP
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   235      IfxDsadc_LowPowerSupply_5V   = 0, /**< \brief Supply Voltage for Analog Circuitry set to 5V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   236      IfxDsadc_LowPowerSupply_3_3V = 1  /**< \brief Supply Voltage for Analog Circuitry set to 3.3V */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   237  } IfxDsadc_LowPowerSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   239  /** \brief Comb Filter (Main Chain) shift control\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   240   * Definition in Ifx_DSADC.FCFGC.B.MFSC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   242  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   244      IfxDsadc_MainCombFilterShift_noShift  = 0,  /**< \brief no shift, use full range */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   245      IfxDsadc_MainCombFilterShift_shiftBy1 = 1,  /**< \brief Shift by 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   246      IfxDsadc_MainCombFilterShift_shiftBy2 = 2,  /**< \brief Shift by 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   247      IfxDsadc_MainCombFilterShift_shiftBy3 = 3   /**< \brief Shift by 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   248  } IfxDsadc_MainCombFilterShift;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   250  /** \brief Comb Filter (Main Chain) configuration/type\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   251   * Definition in Ifx_DSADC.FCFGC.B.CFMC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   252   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   253  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   254  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   255      IfxDsadc_MainCombFilterType_comb1 = 0,  /**< \brief CIC1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   256      IfxDsadc_MainCombFilterType_comb2 = 1,  /**< \brief CIC2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   257      IfxDsadc_MainCombFilterType_comb3 = 2,  /**< \brief CIC3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   258      IfxDsadc_MainCombFilterType_combF = 3   /**< \brief CICF */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   259  } IfxDsadc_MainCombFilterType;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   261  /** \brief Service request generation (main chain)\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   262   * Definition in Ifx_DSADC.FCFGC.B.SRGM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   264  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   266      IfxDsadc_MainServiceRequest_never          = 0,  /**< \brief Never, service requests disabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   267      IfxDsadc_MainServiceRequest_highGateSignal = 1,  /**< \brief While gate (selected trigger signal) is high */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   268      IfxDsadc_MainServiceRequest_lowGateSignal  = 2,  /**< \brief While gate (selected trigger signal) is low */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   269      IfxDsadc_MainServiceRequest_everyNewResult = 3   /**< \brief Always, for each new result value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   270  } IfxDsadc_MainServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   272  /** \brief Modulator clock select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   273   * Definition in Ifx_DSADC.GLOBCFG.B.MCSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   275  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   277      IfxDsadc_ModulatorClock_off   = 0,  /**< \brief Internal clock off, no source selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   278      IfxDsadc_ModulatorClock_fDSD  = 1,  /**< \brief f_dsd clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   279      IfxDsadc_ModulatorClock_fERAY = 2,  /**< \brief f_eray clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   280      IfxDsadc_ModulatorClock_fOSC0 = 3   /**< \brief f_osc0 clock selected */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   281  } IfxDsadc_ModulatorClock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   283  /** \brief Modulator divider factor for modulator clock\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   284   * Definition in Ifx_DSADC.MODCFGx.B.DIVM
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   286  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   287  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   288      IfxDsadc_ModulatorClockDivider_div2 = 0,      /**< \brief f_mod = f_clk / 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   289      IfxDsadc_ModulatorClockDivider_div4,          /**< \brief f_mod = f_clk / 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   290      IfxDsadc_ModulatorClockDivider_div6,          /**< \brief f_mod = f_clk / 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   291      IfxDsadc_ModulatorClockDivider_div8,          /**< \brief f_mod = f_clk / 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   292      IfxDsadc_ModulatorClockDivider_div10,         /**< \brief f_mod = f_clk / 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   293      IfxDsadc_ModulatorClockDivider_div12,         /**< \brief f_mod = f_clk / 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   294      IfxDsadc_ModulatorClockDivider_div14,         /**< \brief f_mod = f_clk / 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   295      IfxDsadc_ModulatorClockDivider_div16,         /**< \brief f_mod = f_clk / 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   296      IfxDsadc_ModulatorClockDivider_div18,         /**< \brief f_mod = f_clk / 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   297      IfxDsadc_ModulatorClockDivider_div20,         /**< \brief f_mod = f_clk / 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   298      IfxDsadc_ModulatorClockDivider_div22,         /**< \brief f_mod = f_clk / 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   299      IfxDsadc_ModulatorClockDivider_div24,         /**< \brief f_mod = f_clk / 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   300      IfxDsadc_ModulatorClockDivider_div26,         /**< \brief f_mod = f_clk / 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   301      IfxDsadc_ModulatorClockDivider_div28,         /**< \brief f_mod = f_clk / 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   302      IfxDsadc_ModulatorClockDivider_div30,         /**< \brief f_mod = f_clk / 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   303      IfxDsadc_ModulatorClockDivider_div32          /**< \brief f_mod = f_clk / 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   304  } IfxDsadc_ModulatorClockDivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   306  /** \brief Rectifier sign source\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   307   * Selects the sign signal that is to be delayed.\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   308   * Definition in Ifx_DSADC.RECT.B.SSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   310  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   311  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   312      IfxDsadc_RectifierSignSource_onChipGenerator = 0,  /**< \brief On-chip carrier generator */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   313      IfxDsadc_RectifierSignSource_nextChannel     = 1,  /**< \brief Sign of result of next channel */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   314      IfxDsadc_RectifierSignSource_externalA       = 2,  /**< \brief External sign signal A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   315      IfxDsadc_RectifierSignSource_externalB       = 3   /**< \brief External sign signal B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   316  } IfxDsadc_RectifierSignSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   318  /** \brief Demodulator sample clock source select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   319   * Definition in Ifx_DSADC.DICFG.B.CSRC
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   321  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   323      IfxDsadc_SampleClockSource_internal = 0,  /**< \brief Internal clock */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   324      IfxDsadc_SampleClockSource_inputA   = 1,  /**< \brief External clock, from Input A */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   325      IfxDsadc_SampleClockSource_inputB   = 2,  /**< \brief External clock, from Input B */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   326      IfxDsadc_SampleClockSource_inputC   = 3   /**< \brief External clock, from Input C */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   327  } IfxDsadc_SampleClockSource;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   329  /** \brief Demodulator data strobe generation mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   330   * Definition in Ifx_DSADC.DICFG.B.STROBE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   331   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   332  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   333  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   334      IfxDsadc_SampleStrobe_noDataStrobe            = 0, /**< \brief No data strobe */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   335      IfxDsadc_SampleStrobe_sampleOnRisingEdge      = 1, /**< \brief Direct clock, a sample trigger is generated at each rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   336      IfxDsadc_SampleStrobe_sampleOnFallingEdge     = 2, /**< \brief Direct clock, a sample trigger is generated at each falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   337      IfxDsadc_SampleStrobe_sampleOnBothEdges       = 3, /**< \brief Double data, a sample trigger is generated at each rising and falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   338      IfxDsadc_SampleStrobe_reserved                = 4, /**< \brief don't use */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   339      IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges  = 5, /**< \brief Double clock, a sample trigger is generated at every 2nd rising clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   340      IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges = 6  /**< \brief Double clock, a sample trigger is generated at every 2nd falling clock edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   341  } IfxDsadc_SampleStrobe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   343  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   344   * Definition in Ifx_DSADC.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   346  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   347  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   348      IfxDsadc_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   349      IfxDsadc_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   350  } IfxDsadc_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   352  /** \brief Timestamp trigger mode\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   353   * Definition in Ifx_DSADC.DICFG.B.TSTRMODE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   355  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   356  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   357      IfxDsadc_TimestampTrigger_noTrigger   = 0,  /**< \brief No timestamp trigger */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   358      IfxDsadc_TimestampTrigger_fallingEdge = 1,  /**< \brief Trigger event upon a falling edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   359      IfxDsadc_TimestampTrigger_risingEdge  = 2,  /**< \brief Trigger event upon a rising edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   360      IfxDsadc_TimestampTrigger_eachEdge    = 3   /**< \brief Trigger event upon each edge */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   361  } IfxDsadc_TimestampTrigger;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   363  /** \brief Trigger select\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   364   * Definition in Ifx_DSADC.DICFG.B.TRSEL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   366  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   368      IfxDsadc_TriggerInput_a = 0,  /**< \brief dsadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   369      IfxDsadc_TriggerInput_b = 1,  /**< \brief dsadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   370      IfxDsadc_TriggerInput_c = 2,  /**< \brief vadc trig 0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   371      IfxDsadc_TriggerInput_d = 3,  /**< \brief vadc trig 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   372      IfxDsadc_TriggerInput_e = 4,  /**< \brief external pin e */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   373      IfxDsadc_TriggerInput_f = 5,  /**< \brief external pin f */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   374      IfxDsadc_TriggerInput_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   375      IfxDsadc_TriggerInput_h = 7
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   376  } IfxDsadc_TriggerInput;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   378  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   380  /** \addtogroup IfxLld_Dsadc_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   381   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   383  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   384  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   385  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   387  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   388   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   389   * \param mode mode selection (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   390   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   392  IFX_INLINE void IfxDsadc_setSleepMode(Ifx_DSADC *dsadc, IfxDsadc_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   394  /** \brief Enables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   395   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   396   * \param modulatorMask the modulator which should be running (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   397   * \param channelMask the channels which should be scanned (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   400   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   401   *     // enable the conversion of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   402   *     IfxDsadc_startScan(&MODULE_DSADC, 0x3FU, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   403   *     // results are now available in IFXDSADC(ds).CH[x].RESM.B.RESULT (x=0..5)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   404   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   407  IFX_INLINE void IfxDsadc_startScan(Ifx_DSADC *dsadc, uint32 modulatorMask, uint32 channelMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   409  /** \brief Disables the conversion of multiple channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   410   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   411   * \param modulatorMask the modulator which should be disabled (bitwise selection)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   412   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   413   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   415   *     // disable the modulators of all 6 DSADC channels
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   416   *     IfxDsadc_stopScan(&MODULE_DSADC, 0x3FU);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   417   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   418   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   419   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   420  IFX_INLINE void IfxDsadc_stopScan(Ifx_DSADC *dsadc, uint32 modulatorMask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   422  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   423  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   424  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   426  /** \brief resets the DSADC kernel
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   427   * \param dsadc pointer to DSADC registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   429   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   430  IFX_EXTERN void IfxDsadc_resetModule(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   432  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   434  /** \addtogroup IfxLld_Dsadc_Std_Support
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   435   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   437  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   438  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   439  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   441  /** \brief Get result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   442   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   443   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   444   * \return result from the auxiliary chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   446  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   448  /** \brief Get the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   449   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   450   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   451   * \return the main comb decimation factor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   452   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   453  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   455  /** \brief Get result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   456   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   457   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   458   * \return result from the main chain
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   459   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   460  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   462  /** \brief Return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   463   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   464   * \return TRUE if DSADC module is enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   466  IFX_INLINE boolean IfxDsadc_isModuleEnabled(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   468  /** \brief Set the carrier waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   469   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   470   * \param waveformMode the waveform mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   473  IFX_INLINE void IfxDsadc_setCarrierMode(Ifx_DSADC *dsadc, IfxDsadc_CarrierWaveformMode waveformMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   476  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   477  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   479  /** \brief Get the sample frequency of the integrator output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   480   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   481   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   482   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   484  IFX_EXTERN float32 IfxDsadc_getIntegratorOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   486  /** \brief Get the sample frequency of the main COMB filter output in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   487   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   488   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   489   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   490   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   491  IFX_EXTERN float32 IfxDsadc_getMainCombOutFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   492  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   493  /** \brief Estimate the group delay of main-chain filters in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   494   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   495   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   496   * \return delay in seconds
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   497   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   498  IFX_EXTERN float32 IfxDsadc_getMainGroupDelay(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   499  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   500  /** \brief Get the modulator clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   501   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   502   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   503   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   505  IFX_EXTERN float32 IfxDsadc_getModulatorClockFreq(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   507  /** \brief Get the input frequency of DSADC in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   508   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   509   * \return frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   511  IFX_EXTERN float32 IfxDsadc_getModulatorInputClockFreq(Ifx_DSADC *dsadc);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   513  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   514  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   515  /** \addtogroup IfxLld_Dsadc_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   516   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   517  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   518  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   519  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   522  /** \brief Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   523   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   524   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   525   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   526   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   527  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getAuxSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   529  /** \brief Get the interrupt source register for a Main event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   530   * \param dsadc Pointer to the DSADC register space
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   531   * \param channel Channel Id
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   532   * \return Address/pointer to the interrupt source register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   534  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxDsadc_getMainSrc(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   536  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   538  /** \addtogroup IfxLld_Dsadc_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   539   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   541  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   542  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   543  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   545  /** \brief Initializes a CGPWM output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   546   * \param cgPwm the CGPWM Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   547   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   548   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   549   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   550   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   551  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   553  /** \brief Initializes a CIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   554   * \param cIn the CIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   555   * \param cInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   556   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   557   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   558  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   560  /** \brief Initializes a COUT output
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   561   * \param cout the COUT Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   562   * \param pinMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   563   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   564   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   565   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   566  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   567  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   568  /** \brief Initializes a DIN input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   569   * \param dIn the DIN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   570   * \param dInMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   571   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   572   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   573  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   574  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   575  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   576   * \param dsn the DSN Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   577   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   580  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   582  /** \brief Initializes a DS input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   583   * \param dsp the DSP Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   584   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   585   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   587  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   589  /** \brief Initializes a ITR input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   590   * \param itr the ITR Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   591   * \param itrMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   594  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   596  /** \brief Initializes a SG input
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   597   * \param sg the SG Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   598   * \param pinMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   599   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   600   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   601  IFX_INLINE void IfxDsadc_initSgPin(const IfxDsadc_Sg_In *sg, IfxPort_InputMode pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   603  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   605  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   606  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   607  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   609  IFX_INLINE sint16 IfxDsadc_getAuxResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   610  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   611      return (sint16)(dsadc->CH[channel].RESA.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   612  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   615  IFX_INLINE uint16 IfxDsadc_getMainCombDecimation(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   616  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   617      return (uint16)(1U + dsadc->CH[channel].FCFGC.B.CFMDF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   618  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   621  IFX_INLINE sint16 IfxDsadc_getMainResult(Ifx_DSADC *dsadc, IfxDsadc_ChannelId channel)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   622  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   623      return (sint16)(dsadc->CH[channel].RESM.B.RESULT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   624  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   627  IFX_INLINE void IfxDsadc_initCgPwmPin(const IfxDsadc_Cgpwm_Out *cgPwm, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   628  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   629      IfxPort_setPinModeOutput(cgPwm->pin.port, cgPwm->pin.pinIndex, pinMode, cgPwm->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   630      IfxPort_setPinPadDriver(cgPwm->pin.port, cgPwm->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   634  IFX_INLINE void IfxDsadc_initCinPin(const IfxDsadc_Cin_In *cIn, IfxPort_InputMode cInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   636      IfxPort_setPinModeInput(cIn->pin.port, cIn->pin.pinIndex, cInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   640  IFX_INLINE void IfxDsadc_initCoutPin(const IfxDsadc_Cout_Out *cout, IfxPort_OutputMode pinMode, IfxPort_PadDriver padDriver)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   642      IfxPort_setPinModeOutput(cout->pin.port, cout->pin.pinIndex, pinMode, cout->select);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   643      IfxPort_setPinPadDriver(cout->pin.port, cout->pin.pinIndex, padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   647  IFX_INLINE void IfxDsadc_initDinPin(const IfxDsadc_Din_In *dIn, IfxPort_InputMode dInMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   649      IfxPort_setPinModeInput(dIn->pin.port, dIn->pin.pinIndex, dInMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   650  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   652  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   653  IFX_INLINE void IfxDsadc_initDsnPin(const IfxDsadc_Dsn_In *dsn, IfxPort_InputMode pinMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   654  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   655      if (dsn->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   656      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   657          IfxPort_setPinModeInput(dsn->pin.port, dsn->pin.pinIndex, pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   658      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   659  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   660  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   662  IFX_INLINE void IfxDsadc_initDspPin(const IfxDsadc_Dsp_In *dsp, IfxPort_InputMode pinMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   663  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   664      if (dsp->pin.port != NULL_PTR)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   665      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   666          IfxPort_setPinModeInput(dsp->pin.port, dsp->pin.pinIndex, pinMode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   667      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   668  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   671  IFX_INLINE void IfxDsadc_initItrPin(const IfxDsadc_Itr_In *itr, IfxPort_InputMode itrMode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   672  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Dsadc\Std\IfxDsadc.h	   673      IfxPort_setPinModeInput(itr->pin.port, itr->pin.pinIndex, itrMode);
	ld.a	a4,[a15]8
.L456:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d15,#0,#8
	ld.bu	d4,[a15]12
.L457:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	j	IfxPort_setPinMode
.L18:
.L11:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   232  onst IfxDsadc_Dsadc_ChannelConfig IfxDsadc_Dsadc_defaultChannelConfig = {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   233          .modulator              = {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   234              .positiveInput      = IfxDsadc_InputConfig_inputPin,
	ret
.L193:
	
__IfxDsadc_Dsadc_initChannel_function_end:
	.size	IfxDsadc_Dsadc_initChannel,__IfxDsadc_Dsadc_initChannel_function_end-IfxDsadc_Dsadc_initChannel
.L77:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initChannelConfig',code,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initChannelConfig'
	.align	2
	
	.global	IfxDsadc_Dsadc_initChannelConfig

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   235              .negativeInput      = IfxDsadc_InputConfig_referenceGround,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   236              .inputGain          = IfxDsadc_InputGain_factor1,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   237              .inputPin           = IfxDsadc_InputPin_a,
; Function IfxDsadc_Dsadc_initChannelConfig
.L35:
IfxDsadc_Dsadc_initChannelConfig:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   238              .modulatorClockFreq = 10.0e6,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   239              .commonModeVoltage  = IfxDsadc_CommonModeVoltage_c,
	movh.a	a15,#@his(.1.ini)
	lea	a15,[a15]@los(.1.ini)
.L462:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   240          },
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   241          .demodulator            = {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   242              .inputDataSource    = IfxDsadc_InputDataSource_onChipStandAlone,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   243              .triggerInput       = IfxDsadc_TriggerInput_a,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   244              .integrationTrigger = IfxDsadc_IntegratorTrigger_bypassed,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   245              .timestampTrigger   = IfxDsadc_TimestampTrigger_noTrigger,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   246              .sampleClockSource  = IfxDsadc_SampleClockSource_internal,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   247              .sampleStrobe       = IfxDsadc_SampleStrobe_sampleOnRisingEdge,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   248          },
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   249          .combFilter             = {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   250              .bypassed         = FALSE,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   251              .combFilterType   = IfxDsadc_MainCombFilterType_comb3,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   252              .combFilterShift  = IfxDsadc_MainCombFilterShift_noShift,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   253              .serviceRequest   = IfxDsadc_MainServiceRequest_everyNewResult,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   254              .decimationFactor = 50,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   255              .startValue       = 0,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   256          },
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   257          .firFilter              = {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   258              .fir0Enabled        = FALSE,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   259              .fir1Enabled        = FALSE,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   260              .offsetCompensation = FALSE,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   261              .dataShift          = IfxDsadc_FirDataShift_noShift,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   262              .internalShift      = IfxDsadc_FirInternalShift_noShift,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   263          },
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   264          .integrator             = {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   265              .windowSize        = IfxDsadc_IntegrationWindowSize_internalControl,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   266              .discardCount      = 0,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   267              .integrationCount  = 20,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   268              .integrationCycles = 1,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   269          },
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   270          .auxFilter              = {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   271              .bypassed         = TRUE,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   272              .combFilterType   = IfxDsadc_AuxCombFilterType_comb1,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   273              .combFilterShift  = IfxDsadc_AuxCombFilterShift_noShift,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   274              .serviceRequest   = IfxDsadc_AuxServiceRequest_never,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   275              .eventSelect      = IfxDsadc_AuxEvent_everyNewResult,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   276              .eventGate        = IfxDsadc_AuxGate_definedByESEL,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   277              .decimationFactor = 4,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   278          },
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   279          .channelPins            = NULL_PTR
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   280      };
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   281  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   282      *config = IfxDsadc_Dsadc_defaultChannelConfig;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   283  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   284      if (dsadc != NULL_PTR)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   285      {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   286          config->module = dsadc->dsadc;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   287      }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   288      else
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   289      {
	mov.aa	a2,a4
.L376:
	lea	a6,16
.L19:
	ld.w	d15,[a15+]
	st.w	[a2+],d15
	loop	a6,.L19
.L463:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   290          config->module = NULL_PTR;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   291      }
	jz.a	a5,.L20
.L464:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   292  }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   293  
	ld.a	a15,[a5]
.L465:
	j	.L21
.L20:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   294  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   295  static void IfxDsadc_Dsadc_initCombFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_CombFilterConfig *config)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   296  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   297      Ifx_DSADC_CH_FCFGC fcfgc;
	mov.a	a15,#0
.L21:
	st.a	[a4],a15
.L377:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   298  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   299      fcfgc.U                   = 0;
	ret
.L264:
	
__IfxDsadc_Dsadc_initChannelConfig_function_end:
	.size	IfxDsadc_Dsadc_initChannelConfig,__IfxDsadc_Dsadc_initChannelConfig_function_end-IfxDsadc_Dsadc_initChannelConfig
.L82:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCombFilter',code,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCombFilter'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   300  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   301      fcfgc.B.CFMDF             = config->decimationFactor - 1;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   302      fcfgc.B.CFMC              = config->combFilterType;
; Function IfxDsadc_Dsadc_initCombFilter
.L37:
IfxDsadc_Dsadc_initCombFilter:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   303      fcfgc.B.CFEN              = (config->bypassed == FALSE) ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   304  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   305      fcfgc.B.MFSC              = config->combFilterShift;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   306  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   307      fcfgc.B.SRGM              = config->serviceRequest;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   308      fcfgc.B.CFMSV             = config->startValue - 1;
	ld.hu	d15,[a5]4
.L513:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   309  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   310      (channel->channel)->FCFGC = fcfgc;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   311  }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   312  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   313  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   314  static void IfxDsadc_Dsadc_initDemodulator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_DemodulatorConfig *config)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   315  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   316      Ifx_DSADC_CH_DICFG dicfg;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   317  
	mov	d0,#0
	ld.a	a15,[a4]4
.L378:
	add	d15,#-1
	extr.u	d15,d15,#0,#8
.L514:
	insert	d0,d0,d15,#0,#8
	ld.bu	d15,[a5]1
.L515:
	extr.u	d1,d0,#8,#8
.L516:
	insert	d1,d1,d15,#0,#2
	ld.bu	d15,[a5]
.L517:
	eq	d15,d15,#0
.L518:
	insert	d15,d1,d15,#2,#1
.L519:
	insert	d0,d0,d15,#8,#8
	ld.bu	d15,[a5]2
.L520:
	insert	d0,d0,d15,#12,#2
	ld.bu	d15,[a5]3
.L521:
	insert	d0,d0,d15,#14,#2
	ld.hu	d15,[a5]6
.L522:
	add	d15,#-1
.L523:
	insert	d0,d0,d15,#16,#8
	st.w	[a15]20,d0
.L524:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   318      dicfg.U                   = 0;
	ret
.L297:
	
__IfxDsadc_Dsadc_initCombFilter_function_end:
	.size	IfxDsadc_Dsadc_initCombFilter,__IfxDsadc_Dsadc_initCombFilter_function_end-IfxDsadc_Dsadc_initCombFilter
.L107:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initDemodulator',code,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initDemodulator'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   319  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   320      dicfg.B.DSRC              = config->inputDataSource;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   321      dicfg.B.DSWC              = 1; // enable write access for this bitfield
; Function IfxDsadc_Dsadc_initDemodulator
.L39:
IfxDsadc_Dsadc_initDemodulator:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   322  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   323      dicfg.B.ITRMODE           = config->integrationTrigger;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   324      dicfg.B.TSTRMODE          = config->timestampTrigger;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   325      dicfg.B.TRSEL             = config->triggerInput;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   326      dicfg.B.TRWC              = 1; // enable write access for these bitfields
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   327  
	mov	d0,#0
	ld.bu	d15,[a5]
.L379:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   328      dicfg.B.CSRC              = config->sampleClockSource;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   329      dicfg.B.STROBE            = config->sampleStrobe;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   330      dicfg.B.SCWC              = 1; // enable write access for these bitfields
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   331  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   332      (channel->channel)->DICFG = dicfg;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   333  }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   334  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   335  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   336  static void IfxDsadc_Dsadc_initFirFilter(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_FirFilterConfig *config)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   337  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   338      Ifx_DSADC_CH_FCFGM fcfgm;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   339  
	ld.a	a15,[a4]4
.L529:
	insert	d15,d0,d15,#0,#4
.L530:
	or	d15,#128
.L531:
	insert	d0,d0,d15,#0,#8
	ld.bu	d15,[a5]2
.L532:
	insert	d0,d0,d15,#8,#2
	ld.bu	d15,[a5]3
.L533:
	insert	d0,d0,d15,#10,#2
	ld.bu	d15,[a5]1
.L534:
	extr.u	d1,d0,#8,#8
.L535:
	insert	d15,d1,d15,#4,#3
.L536:
	or	d15,#128
.L537:
	insert	d0,d0,d15,#8,#8
	ld.bu	d15,[a5]4
.L538:
	insert	d0,d0,d15,#16,#4
	ld.bu	d15,[a5]5
.L539:
	insert	d0,d0,d15,#20,#4
.L540:
	insert	d0,d0,#1,#31,#1
	st.w	[a15]8,d0
.L541:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   340      fcfgm.U                   = 0;
	ret
.L303:
	
__IfxDsadc_Dsadc_initDemodulator_function_end:
	.size	IfxDsadc_Dsadc_initDemodulator,__IfxDsadc_Dsadc_initDemodulator_function_end-IfxDsadc_Dsadc_initDemodulator
.L112:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initFirFilter',code,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initFirFilter'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   341  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   342      fcfgm.B.FIR0EN            = (config->fir0Enabled != FALSE) ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   343      fcfgm.B.FIR1EN            = (config->fir1Enabled != FALSE) ? 1 : 0;
; Function IfxDsadc_Dsadc_initFirFilter
.L41:
IfxDsadc_Dsadc_initFirFilter:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   344      fcfgm.B.OCEN              = (config->offsetCompensation != FALSE) ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   345      fcfgm.B.DSH               = config->dataShift;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   346      fcfgm.B.FSH               = config->internalShift;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   347  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   348      (channel->channel)->FCFGM = fcfgm;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   349  }
	mov	d0,#0
	ld.bu	d15,[a5]
.L380:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   350  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   351  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   352  static void IfxDsadc_Dsadc_initIntegrator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_IntegratorConfig *config)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   353  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   354      Ifx_DSADC_CH_IWCTR iwctr;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   355  
	ld.a	a15,[a4]4
.L546:
	ne	d15,d15,#0
.L547:
	insert	d0,d0,d15,#0,#1
	ld.bu	d15,[a5]1
.L548:
	ne	d15,d15,#0
.L549:
	insert	d0,d0,d15,#1,#1
	ld.bu	d15,[a5]2
.L550:
	ne	d15,d15,#0
.L551:
	insert	d0,d0,d15,#2,#1
	ld.bu	d15,[a5]3
.L552:
	insert	d0,d0,d15,#3,#2
	ld.bu	d15,[a5]4
.L553:
	insert	d0,d0,d15,#5,#1
	st.w	[a15]16,d0
.L554:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   356      iwctr.U                   = 0;
	ret
.L309:
	
__IfxDsadc_Dsadc_initFirFilter_function_end:
	.size	IfxDsadc_Dsadc_initFirFilter,__IfxDsadc_Dsadc_initFirFilter_function_end-IfxDsadc_Dsadc_initFirFilter
.L117:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initIntegrator',code,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initIntegrator'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   357  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   358      iwctr.B.REPVAL            = config->integrationCycles - 1;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   359      iwctr.B.NVALDIS           = config->discardCount;
; Function IfxDsadc_Dsadc_initIntegrator
.L43:
IfxDsadc_Dsadc_initIntegrator:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   360      iwctr.B.IWS               = config->windowSize;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   361      iwctr.B.NVALINT           = config->integrationCount - 1;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   362  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   363      (channel->channel)->IWCTR = iwctr;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   364  }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   365  
	ld.hu	d0,[a5]6
.L559:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   366  
	mov	d15,#0
	ld.hu	d1,[a5]2
.L381:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   367  static void IfxDsadc_Dsadc_initModulator(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_ModulatorConfig *config)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   368  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   369      Ifx_DSADC_CH_MODCFG modcfg;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   370  
	add	d0,#-1
	ld.a	a15,[a4]4
.L560:
	extr.u	d0,d0,#0,#8
.L561:
	insert	d15,d15,d0,#12,#4
.L562:
	extr.u	d0,d15,#16,#8
.L563:
	insert	d0,d0,d1,#0,#6
	ld.bu	d1,[a5]
.L564:
	insert	d0,d0,d1,#7,#1
.L565:
	insert	d15,d15,d0,#16,#8
	ld.hu	d0,[a5]4
.L566:
	add	d0,#-1
.L567:
	insert	d15,d15,d0,#24,#6
	st.w	[a15]32,d15
.L568:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   371      modcfg.U         = 0;
	ret
.L315:
	
__IfxDsadc_Dsadc_initIntegrator_function_end:
	.size	IfxDsadc_Dsadc_initIntegrator,__IfxDsadc_Dsadc_initIntegrator_function_end-IfxDsadc_Dsadc_initIntegrator
.L122:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModulator',code,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModulator'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   372  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   373      modcfg.B.INCFGP  = config->positiveInput;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   374      modcfg.B.INCFGN  = config->negativeInput;
; Function IfxDsadc_Dsadc_initModulator
.L45:
IfxDsadc_Dsadc_initModulator:	.type	func
	mov.aa	a15,a5
.L384:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   375      modcfg.B.GAINSEL = config->inputGain;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   376      modcfg.B.INSEL   = config->inputPin;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   377      modcfg.B.INCWC   = 1;       // enable write access for these bitfields
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   378  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   379      float32 targetFreq = config->modulatorClockFreq;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   380      float32 sourceFreq = IfxDsadc_getModulatorInputClockFreq(channel->module);
	mov	d8,#0
	ld.bu	d15,[a15]
.L386:
	sub.a	a10,#8
.L382:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   381      modcfg.B.DIVM              = IfxDsadc_Dsadc_calcDIVx(sourceFreq, &targetFreq);
	insert	d8,d8,d15,#0,#2
	ld.bu	d15,[a15]1
.L573:
	mov.aa	a12,a4
.L328:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   382      modcfg.B.DWC               = 1; // enable write access for this bitfield
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   383  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   384      modcfg.B.CMVS              = config->commonModeVoltage;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   385      modcfg.B.GCEN              = 0; // normal operation (calibration mode disabled)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   386      modcfg.B.MWC               = 1; // enable write access for these bitfields
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   387  
	ld.a	a4,[a12]
.L329:
	insert	d8,d8,d15,#2,#2
	ld.bu	d15,[a15]2
.L574:
	insert	d8,d8,d15,#4,#4
	ld.bu	d15,[a15]3
.L575:
	extr.u	d0,d8,#8,#8
.L576:
	insert	d15,d0,d15,#0,#2
.L577:
	or	d15,#128
.L578:
	insert	d8,d8,d15,#8,#8
	ld.w	d15,[a15]4
.L330:
	st.w	[a10],d15
.L579:
	call	IfxDsadc_getModulatorInputClockFreq
.L383:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   388      (channel->channel)->MODCFG = modcfg;
	mov.aa	a4,a10
	mov	d4,d2
	call	IfxDsadc_Dsadc_calcDIVx
.L387:
	extr.u	d15,d8,#16,#8
.L580:
	insert	d15,d15,d2,#0,#4
.L581:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   389  }
	or	d15,#128
.L582:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   390  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   391  
	insert	d8,d8,d15,#16,#8
	ld.bu	d15,[a15]8
.L583:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   392  void IfxDsadc_Dsadc_initModule(IfxDsadc_Dsadc *dsadc, const IfxDsadc_Dsadc_Config *config)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   393  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   394      Ifx_DSADC *dsadcSFR = config->dsadc;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   395  
	ld.a	a15,[a12]4
.L385:
	extr.u	d0,d8,#24,#8
.L584:
	insert	d15,d0,d15,#0,#2
.L585:
	insert	d15,d15,#0,#4,#1
.L586:
	or	d15,#128
.L587:
	insert	d8,d8,d15,#24,#8
	st.w	[a15],d8
.L588:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   396      dsadc->dsadc = dsadcSFR;
	ret
.L321:
	
__IfxDsadc_Dsadc_initModulator_function_end:
	.size	IfxDsadc_Dsadc_initModulator,__IfxDsadc_Dsadc_initModulator_function_end-IfxDsadc_Dsadc_initModulator
.L127:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModule',code,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModule'
	.align	2
	
	.global	IfxDsadc_Dsadc_initModule

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   397  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   398      {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   399          uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; Function IfxDsadc_Dsadc_initModule
.L47:
IfxDsadc_Dsadc_initModule:	.type	func
	mov.aa	a15,a5
.L389:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   400          IfxScuWdt_clearCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   401          dsadcSFR->CLC.U = 0x00000000;
	ld.a	a12,[a15]
.L390:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   402  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   403          if (dsadcSFR->CLC.U)
	st.a	[a4],a12
.L182:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   404          {}                       // sync access
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   405  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   406          IfxScuWdt_setCpuEndinit(passwd);
	call	IfxScuWdt_getCpuWatchdogPassword
.L388:
	mov	d15,d2
.L392:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   407  
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L391:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   408          {
	mov	d0,#0
	st.w	[a12],d0
.L425:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   409              Ifx_DSADC_GLOBCFG globcfg;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   410              globcfg.U           = dsadcSFR->GLOBCFG.U;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   411  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   412              globcfg.B.MCSEL     = config->modulatorClockSelect;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   413              globcfg.B.LOSUP     = config->lowPowerSupply;
	mov	d4,d15
.L394:
	ld.w	d0,[a12]
.L426:
	call	IfxScuWdt_setCpuEndinit
.L186:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   414              globcfg.B.PSWC      = 1;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   415  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   416              dsadcSFR->GLOBCFG.U = globcfg.U;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   417          }
	ld.w	d0,[a12]128
.L395:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   418      }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   419  }
	ld.bu	d15,[a15]4
.L393:
	insert	d0,d0,d15,#0,#3
.L427:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   420  
	extr.u	d1,d0,#16,#8
	ld.bu	d15,[a15]5
.L428:
	insert	d15,d1,d15,#4,#1
.L429:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   421  
	or	d15,#128
.L430:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   422  void IfxDsadc_Dsadc_initModuleConfig(IfxDsadc_Dsadc_Config *config, Ifx_DSADC *dsadc)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   423  {
	insert	d0,d0,d15,#16,#8
	st.w	[a12]128,d0
.L183:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   424      const IfxDsadc_Dsadc_Config IfxDsadc_Dsadc_defaultConfig = {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   425          .modulatorClockSelect = IfxDsadc_ModulatorClock_fDSD,
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   426          .lowPowerSupply       = IfxDsadc_LowPowerSupply_5V
	ret
.L176:
	
__IfxDsadc_Dsadc_initModule_function_end:
	.size	IfxDsadc_Dsadc_initModule,__IfxDsadc_Dsadc_initModule_function_end-IfxDsadc_Dsadc_initModule
.L67:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModuleConfig',code,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initModuleConfig'
	.align	2
	
	.global	IfxDsadc_Dsadc_initModuleConfig

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   427      };
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   428  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   429      *config       = IfxDsadc_Dsadc_defaultConfig;
; Function IfxDsadc_Dsadc_initModuleConfig
.L49:
IfxDsadc_Dsadc_initModuleConfig:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   430      config->dsadc = dsadc;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   431  }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   432  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   433  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   434  static void IfxDsadc_Dsadc_initRectifier(IfxDsadc_Dsadc_Channel *channel, const IfxDsadc_Dsadc_RectifierConfig *config)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   435  {
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   436      Ifx_DSADC_CH_RECTCFG rect;
	mov	d15,#1
	st.b	[a4]4,d15
.L435:
	mov	d15,#0
	st.b	[a4]5,d15
.L436:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   437  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   438      rect.U                             = 0;
	st.a	[a4],a5
	ret
.L189:
	
__IfxDsadc_Dsadc_initModuleConfig_function_end:
	.size	IfxDsadc_Dsadc_initModuleConfig,__IfxDsadc_Dsadc_initModuleConfig_function_end-IfxDsadc_Dsadc_initModuleConfig
.L72:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initRectifier',code,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initRectifier'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   439      rect.B.RFEN                        = config->enabled;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   440      rect.B.SSRC                        = config->signSource;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   441      (channel->channel)->RECTCFG        = rect;
; Function IfxDsadc_Dsadc_initRectifier
.L51:
IfxDsadc_Dsadc_initRectifier:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   442      (channel->channel)->CGSYNC.B.SDPOS = config->signDelay;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   443      (channel->channel)->CGSYNC.B.SDNEG = config->signDelay + (config->signPeriod / 2);
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   444  }
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   445  
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   446  
	mov	d0,#0
	ld.bu	d15,[a5]
.L396:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   447  void IfxDsadc_Dsadc_initCarrierGenConfig(IfxDsadc_Dsadc_CarrierGenConfig *config)
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   448  {
	ld.a	a15,[a4]4
.L593:
	insert	d0,d0,d15,#0,#1
	ld.bu	d15,[a5]1
.L594:
	insert	d0,d0,d15,#4,#2
	st.w	[a15]168,d0
.L595:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   449      config->bitReversed         = FALSE;
	ld.a	a15,[a4]4
.L596:
	ld.bu	d15,[a5]2
.L597:
	st.b	[a15]162,d15
.L598:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   450      config->carrierWaveformMode = IfxDsadc_CarrierWaveformMode_sine;
	ld.a	a15,[a4]4
.L599:
	ld.bu	d0,[a5]3
.L397:
	ld.bu	d15,[a5]2
.L600:
	sha	d0,#-1
.L601:
	add	d15,d0
	st.b	[a15]163,d15
.L602:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   451      config->frequency           = 10000;
	ret
.L333:
	
__IfxDsadc_Dsadc_initRectifier_function_end:
	.size	IfxDsadc_Dsadc_initRectifier,__IfxDsadc_Dsadc_initRectifier_function_end-IfxDsadc_Dsadc_initRectifier
.L132:
	; End of function
	
	.sdecl	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCarrierGenConfig',code,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.text.IfxDsadc_Dsadc.IfxDsadc_Dsadc_initCarrierGenConfig'
	.align	2
	
	.global	IfxDsadc_Dsadc_initCarrierGenConfig

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   452      config->inverted            = FALSE;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   453      config->pinDriver           = IfxPort_PadDriver_cmosAutomotiveSpeed1;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   454      config->pinMode             = IfxPort_OutputMode_pushPull;
; Function IfxDsadc_Dsadc_initCarrierGenConfig
.L53:
IfxDsadc_Dsadc_initCarrierGenConfig:	.type	func

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   455      config->pinNeg              = NULL_PTR;
; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   456      config->pinPos              = NULL_PTR;
	mov	d15,#0
	st.b	[a4]2,d15
.L478:

; ..\0_Src\4_McHal\Tricore\Dsadc\Dsadc\IfxDsadc_Dsadc.c	   457  }
	mov	d0,#3
	st.b	[a4],d0
.L479:


	mov.a	a15,#0
.L480:


	ld.w	d0,.4.cnt
.L481:


	st.w	[a4]4,d0
.L482:


	st.b	[a4]1,d15
.L483:


	st.b	[a4]17,d15
.L484:


	mov	d15,#128


	st.b	[a4]16,d15
.L485:


	st.a	[a4]12,a15
.L486:


	st.a	[a4]8,a15
.L487:


	ret
.L278:
	
__IfxDsadc_Dsadc_initCarrierGenConfig_function_end:
	.size	IfxDsadc_Dsadc_initCarrierGenConfig,__IfxDsadc_Dsadc_initCarrierGenConfig_function_end-IfxDsadc_Dsadc_initCarrierGenConfig
.L92:
	; End of function
	
	.sdecl	'.rodata.IfxDsadc_Dsadc..1.ini',data,rom
	.sect	'.rodata.IfxDsadc_Dsadc..1.ini'
	.align	4
.1.ini:	.type	object
	.size	.1.ini,68
	.space	9
	.byte	3
	.space	2
	.word	1259902592
	.byte	2
	.space	8
	.byte	1
	.space	3
	.byte	2
	.space	1
	.byte	3
	.half	50
	.space	14
	.half	20,1
	.byte	1
	.space	5
	.byte	4
	.space	9
	.calls	'IfxDsadc_Dsadc_initCarrierGen','IfxDsadc_getModulatorInputClockFreq'
	.calls	'IfxDsadc_Dsadc_initCarrierGen','IfxDsadc_Dsadc_calcDIVx'
	.calls	'IfxDsadc_Dsadc_initCarrierGen','IfxPort_setPinMode'
	.calls	'IfxDsadc_Dsadc_initCarrierGen','IfxPort_setPinPadDriver'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initModulator'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initDemodulator'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initCombFilter'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initFirFilter'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initIntegrator'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initAuxFilter'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxDsadc_Dsadc_initRectifier'
	.calls	'IfxDsadc_Dsadc_initChannel','IfxPort_setPinMode'
	.calls	'IfxDsadc_Dsadc_initModulator','IfxDsadc_getModulatorInputClockFreq'
	.calls	'IfxDsadc_Dsadc_initModulator','IfxDsadc_Dsadc_calcDIVx'
	.calls	'IfxDsadc_Dsadc_initModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxDsadc_Dsadc_initModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxDsadc_Dsadc_initModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxDsadc_Dsadc_initCarrierGen','.cocofun_5'
	.calls	'IfxDsadc_Dsadc_calcDIVx','',0
	.calls	'IfxDsadc_Dsadc_getAuxResult','',0
	.calls	'IfxDsadc_Dsadc_initAuxFilter','',0
	.calls	'IfxDsadc_Dsadc_initCarrierGen','',8
	.calls	'.cocofun_5','',0
	.calls	'IfxDsadc_Dsadc_initChannel','',0
	.calls	'IfxDsadc_Dsadc_initChannelConfig','',0
	.calls	'IfxDsadc_Dsadc_initCombFilter','',0
	.calls	'IfxDsadc_Dsadc_initDemodulator','',0
	.calls	'IfxDsadc_Dsadc_initFirFilter','',0
	.calls	'IfxDsadc_Dsadc_initIntegrator','',0
	.calls	'IfxDsadc_Dsadc_initModulator','',8
	.calls	'IfxDsadc_Dsadc_initModule','',0
	.calls	'IfxDsadc_Dsadc_initModuleConfig','',0
	.calls	'IfxDsadc_Dsadc_initRectifier','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxPort_setPinMode
	.extern	IfxPort_setPinPadDriver
	.extern	IfxDsadc_getModulatorInputClockFreq
	.calls	'IfxDsadc_Dsadc_initCarrierGenConfig','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L55:
	.word	96464
	.half	3
	.word	.L56
	.byte	4
.L54:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L57
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	217
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	191
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	223
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	223
	.byte	8
	.byte	'value',0,2,118,43
	.word	191
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,4
	.byte	'int',0,4,5,4
	.byte	'unsigned char',0,1,8,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,10
	.byte	'SRPN',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	327
	.byte	2,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	327
	.byte	3,0,2,35,1,10
	.byte	'ECC',0,1
	.word	327
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	327
	.byte	2,0,2,35,2,10
	.byte	'SRR',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,4,70,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	344
	.byte	4,2,35,0,0,13
	.word	634
	.byte	6
	.word	673
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,3,230,1,17,1,1,8
	.byte	'src',0,3,230,1,60
	.word	678
	.byte	3,0
.L184:
	.byte	4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,239,8,16,4,10
	.byte	'ENDINIT',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	726
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,6,130,17,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	748
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,248,8,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	327
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,6,141,17,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	884
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,135,9,16,4,10
	.byte	'AE',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	327
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,6,152,17,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1128
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,6,204,17,25,12,12
	.byte	'CON0',0
	.word	844
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	1088
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	1319
	.byte	4,2,35,8,0,13
	.word	1359
	.byte	6
	.word	1422
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,130,3,17,1,1,8
	.byte	'watchdog',0,5,130,3,65
	.word	1427
	.byte	8
	.byte	'password',0,5,130,3,82
	.word	726
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,222,3,17,1,1,8
	.byte	'watchdog',0,5,222,3,63
	.word	1427
	.byte	8
	.byte	'password',0,5,222,3,80
	.word	726
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,187,3,19
	.word	726
	.byte	1,1,8
	.byte	'watchdog',0,5,187,3,74
	.word	1427
	.byte	3,0,14,8,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_1',0,1,15
	.byte	'IfxCpu_ResourceCpu_2',0,2,15
	.byte	'IfxCpu_ResourceCpu_none',0,3,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,7,170,5,31
	.word	1657
	.byte	1,1,3,0,7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,185,4,20
	.word	327
	.byte	1,1,3,0,4
	.byte	'unsigned long int',0,4,7,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,190,5,19
	.word	1834
	.byte	1,1,8
	.byte	'address',0,7,190,5,55
	.word	1834
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,198,5,20
	.word	327
	.byte	1,1,8
	.byte	'address',0,7,198,5,70
	.word	1834
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,153,7,17,1,1,8
	.byte	'address',0,7,153,7,56
	.word	1834
	.byte	8
	.byte	'count',0,7,153,7,72
	.word	1834
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,10,143,3,16,4,10
	.byte	'P0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,10,250,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2063
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,10,169,2,16,4,10
	.byte	'PS0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,10,184,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2379
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,10,110,16,4,10
	.byte	'MODREV',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,10,156,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2950
	.byte	4,2,35,0,0,16,4
	.word	327
	.byte	17,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,10,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	327
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	327
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	327
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	327
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	327
	.byte	5,0,2,35,3,0,11,10,178,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3078
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,10,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	327
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	327
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	327
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	327
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	327
	.byte	5,0,2,35,3,0,11,10,200,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3293
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,10,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	327
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	327
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	327
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	327
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	327
	.byte	5,0,2,35,3,0,11,10,211,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3508
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,10,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	327
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	327
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	327
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	327
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	327
	.byte	5,0,2,35,3,0,11,10,189,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3725
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,10,118,16,4,10
	.byte	'P0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,10,167,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3945
	.byte	4,2,35,0,0,16,24
	.word	327
	.byte	17,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,10,204,3,16,4,10
	.byte	'PD0',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	327
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	327
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	327
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	327
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	327
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	327
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	327
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,10,155,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4268
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,10,225,3,16,4,10
	.byte	'PD8',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	327
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	327
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	327
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	327
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	327
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	327
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	327
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,10,166,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4572
	.byte	4,2,35,0,0,16,8
	.word	327
	.byte	17,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,10,88,16,4,10
	.byte	'EN0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,10,145,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4897
	.byte	4,2,35,0,0,16,12
	.word	327
	.byte	17,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,10,182,3,16,4,10
	.byte	'PDIS0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,10,144,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5237
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,10,165,3,16,4,10
	.byte	'SEL0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'SEL3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'SEL4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'SEL5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'SEL6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	726
	.byte	3,6,2,35,0,10
	.byte	'SEL10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'SEL11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	304
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,10,133,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5603
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,10,206,2,16,4,10
	.byte	'PS0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	28,0,2,35,0,0,11,10,206,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5873
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,10,227,2,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	304
	.byte	24,0,2,35,0,0,11,10,228,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6020
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,10,238,2,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	304
	.byte	20,0,2,35,0,0,11,10,239,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6189
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,10,216,2,16,4,10
	.byte	'reserved_0',0,2
	.word	726
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,10,217,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6361
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,10,232,1,16,4,10
	.byte	'reserved_0',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	726
	.byte	12,0,2,35,2,0,11,10,140,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6536
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,10,253,1,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	8,0,2,35,3,0,11,10,162,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6710
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,10,136,2,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	327
	.byte	4,0,2,35,3,0,11,10,173,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6884
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,10,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,10,151,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7060
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,10,249,2,16,4,10
	.byte	'PS0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,10,195,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7216
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,10,147,2,16,4,10
	.byte	'reserved_0',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,10,129,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7549
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR0_Bits',0,10,192,1,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,11,10,222,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7897
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_Bits',0,10,200,1,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,10,208,1,16,4,10
	.byte	'RDIS_CTRL',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'RX_DIS',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'TERM',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'LRXTERM',0,1
	.word	327
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	304
	.byte	24,0,2,35,0,0,11,10,233,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8021
	.byte	4,2,35,0,12
	.byte	'B_P21',0
	.word	8105
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR2_Bits',0,10,218,1,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'LVDSR',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'LVDSRL',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	327
	.byte	2,4,2,35,1,10
	.byte	'TDIS_CTRL',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'TX_DIS',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'TX_PD',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'TX_PWDPD',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,10,246,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8285
	.byte	4,2,35,0,0,16,76
	.word	327
	.byte	17,75,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,82,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	32,0,2,35,0,0,11,10,134,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8538
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,45,16,4,10
	.byte	'EN0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,10,251,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8625
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,10,185,6,25,128,2,12
	.byte	'OUT',0
	.word	2339
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2910
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	3029
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3069
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	3253
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3468
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3685
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3905
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	3069
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	4219
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	4259
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4532
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4848
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4888
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	5188
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	5228
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5563
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5833
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	4888
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5980
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	6149
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	6321
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6496
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6670
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6844
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	7020
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	7176
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7509
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7857
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	4888
	.byte	8,3,35,152,1,12
	.byte	'LPCR0',0
	.word	7981
	.byte	4,3,35,160,1,12
	.byte	'LPCR1',0
	.word	8230
	.byte	4,3,35,164,1,12
	.byte	'LPCR2',0
	.word	8489
	.byte	4,3,35,168,1,12
	.byte	'reserved_A4',0
	.word	8529
	.byte	76,3,35,172,1,12
	.byte	'ACCEN1',0
	.word	8585
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	9152
	.byte	4,3,35,252,1,0,13
	.word	9192
	.byte	6
	.word	9795
	.byte	14,9,63,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L215:
	.byte	2
	.byte	'IfxPort_setPinModeInput',0,3,9,170,4,17,1,1
.L217:
	.byte	8
	.byte	'port',0,9,170,4,48
	.word	9800
.L219:
	.byte	8
	.byte	'pinIndex',0,9,170,4,60
	.word	327
.L221:
	.byte	8
	.byte	'mode',0,9,170,4,88
	.word	9805
.L223:
	.byte	3,0,14,9,114,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,14,9,100,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L162:
	.byte	2
	.byte	'IfxPort_setPinModeOutput',0,3,9,176,4,17,1,1
.L164:
	.byte	8
	.byte	'port',0,9,176,4,49
	.word	9800
.L166:
	.byte	8
	.byte	'pinIndex',0,9,176,4,61
	.word	327
.L168:
	.byte	8
	.byte	'mode',0,9,176,4,90
	.word	10010
.L170:
	.byte	8
	.byte	'index',0,9,176,4,114
	.word	10079
.L172:
	.byte	3,0,14,9,152,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,9,182,4,17,1,1,8
	.byte	'port',0,9,182,4,44
	.word	9800
	.byte	8
	.byte	'pinIndex',0,9,182,4,56
	.word	327
	.byte	8
	.byte	'action',0,9,182,4,80
	.word	10392
	.byte	3,0,9
	.byte	'_Ifx_DSADC_CLC_Bits',0,12,142,2,16,4,10
	.byte	'DISR',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	28,0,2,35,0,0,11,12,239,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10573
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_ID_Bits',0,12,146,3,16,4,10
	.byte	'MOD_REV',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'MOD_TYPE',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,12,199,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10732
	.byte	4,2,35,0,0,16,28
	.word	327
	.byte	17,27,0,9
	.byte	'_Ifx_DSADC_OCS_Bits',0,12,176,3,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	327
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	327
	.byte	2,0,2,35,3,0,11,12,243,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10867
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_KRSTCLR_Bits',0,12,169,3,16,4,10
	.byte	'CLR',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	304
	.byte	31,0,2,35,0,0,11,12,232,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11029
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_KRST1_Bits',0,12,162,3,16,4,10
	.byte	'RST',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	304
	.byte	31,0,2,35,0,0,11,12,221,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11137
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_KRST0_Bits',0,12,154,3,16,4,10
	.byte	'RST',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,11,12,210,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11243
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_ACCEN0_Bits',0,12,45,16,4,10
	.byte	'EN0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,12,191,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11368
	.byte	4,2,35,0,0,16,64
	.word	327
	.byte	17,63,0,9
	.byte	'_Ifx_DSADC_GLOBCFG_Bits',0,12,190,2,16,4,10
	.byte	'MCSEL',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	726
	.byte	8,5,2,35,0,10
	.byte	'IRM0',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'IRM2',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'IRM4',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'IBSEL',0,1
	.word	327
	.byte	4,4,2,35,2,10
	.byte	'LOSUP',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'ICT',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'PSWC',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	8,0,2,35,3,0
.L187:
	.byte	11,12,144,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11948
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_GLOBRC_Bits',0,12,207,2,16,4,10
	.byte	'CH0RUN',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'CH1RUN',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'CH2RUN',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'CH3RUN',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'CH4RUN',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'CH5RUN',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	726
	.byte	10,0,2,35,0,10
	.byte	'M0RUN',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'M1RUN',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'M2RUN',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'M3RUN',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'M4RUN',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'M5RUN',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	726
	.byte	10,0,2,35,2,0,11,12,155,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12240
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_ACCPROT_Bits',0,12,82,16,4,10
	.byte	'RG00',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'RG01',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'RG02',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'RG03',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'RG04',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	726
	.byte	9,2,2,35,0,10
	.byte	'RG10',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'RG11',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'RG40',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'RG41',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'RG42',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'RG43',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'RG44',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,2
	.word	726
	.byte	11,0,2,35,2,0,11,12,202,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12565
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CGCFG_Bits',0,12,101,16,4,10
	.byte	'CGMOD',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'BREV',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'SIGPOL',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'DIVCG',0,1
	.word	327
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	7,1,2,35,1,10
	.byte	'RUN',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'BITCOUNT',0,1
	.word	327
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	327
	.byte	3,0,2,35,2,10
	.byte	'STEPCOUNT',0,1
	.word	327
	.byte	4,4,2,35,3,10
	.byte	'STEPS',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'STEPD',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'SGNCG',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	327
	.byte	1,0,2,35,3,0
.L143:
	.byte	11,12,213,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12872
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_GLOBVCMH0_Bits',0,12,226,2,16,4,10
	.byte	'IN0PVC0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	327
	.byte	3,4,2,35,0,10
	.byte	'IN0NVC0',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	327
	.byte	3,0,2,35,0,10
	.byte	'IN1PVC0',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	327
	.byte	3,4,2,35,1,10
	.byte	'IN1NVC0',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	327
	.byte	3,0,2,35,1,10
	.byte	'IN2PVC0',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'IN2PVC1',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	327
	.byte	2,4,2,35,2,10
	.byte	'IN2NVC0',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'IN2NVC1',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	327
	.byte	2,0,2,35,2,10
	.byte	'IN3PVC0',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'IN3PVC1',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'IN3PVC2',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'IN3PVC3',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'IN3NVC0',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'IN3NVC1',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'IN3NVC2',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'IN3NVC3',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,12,166,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13183
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_GLOBVCMH1_Bits',0,12,253,2,16,4,10
	.byte	'IN4PVC0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	327
	.byte	3,4,2,35,0,10
	.byte	'IN4NVC0',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	327
	.byte	3,0,2,35,0,10
	.byte	'IN5PVC0',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	327
	.byte	3,4,2,35,1,10
	.byte	'IN5NVC0',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	304
	.byte	19,0,2,35,0,0,11,12,177,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13695
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_GLOBVCMH2_Bits',0,12,138,3,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	29,3,2,35,0,10
	.byte	'VHON',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'VCMHS',0,1
	.word	327
	.byte	2,0,2,35,3,0,11,12,188,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13933
	.byte	4,2,35,0,0,16,36
	.word	327
	.byte	17,35,0,9
	.byte	'_Ifx_DSADC_EVFLAG_Bits',0,12,152,2,16,4,10
	.byte	'RESEV0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'RESEV1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'RESEV2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'RESEV3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'RESEV4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'RESEV5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	726
	.byte	10,0,2,35,0,10
	.byte	'ALEV0',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'ALEV1',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'ALEV2',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'ALEV3',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'ALEV4',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'ALEV5',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	726
	.byte	10,0,2,35,2,0,11,12,250,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14070
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_EVFLAGCLR_Bits',0,12,171,2,16,4,10
	.byte	'RESEC0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'RESEC1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'RESEC2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'RESEC3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'RESEC4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'RESEC5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	726
	.byte	10,0,2,35,0,10
	.byte	'ALEC0',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'ALEC1',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'ALEC2',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'ALEC3',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'ALEC4',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'ALEC5',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	726
	.byte	10,0,2,35,2,0,11,12,133,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14395
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_MODCFG_Bits',0,12,204,1,16,4,10
	.byte	'INCFGP',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'INCFGN',0,1
	.word	327
	.byte	2,4,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	327
	.byte	4,0,2,35,0,10
	.byte	'INSEL',0,1
	.word	327
	.byte	2,6,2,35,1,10
	.byte	'INMUX',0,1
	.word	327
	.byte	2,4,2,35,1,10
	.byte	'INMODE',0,1
	.word	327
	.byte	2,2,2,35,1,10
	.byte	'INMAC',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'INCWC',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'DIVM',0,1
	.word	327
	.byte	4,4,2,35,2,10
	.byte	'reserved_20',0,1
	.word	327
	.byte	3,1,2,35,2,10
	.byte	'DWC',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'CMVS',0,1
	.word	327
	.byte	2,6,2,35,3,10
	.byte	'MCFG',0,1
	.word	327
	.byte	2,4,2,35,3,10
	.byte	'GCEN',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'APC',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'MWC',0,1
	.word	327
	.byte	1,0,2,35,3,0
.L325:
	.byte	11,12,173,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14723
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_DICFG_Bits',0,12,135,1,16,4,10
	.byte	'DSRC',0,1
	.word	327
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	327
	.byte	3,1,2,35,0,10
	.byte	'DSWC',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'ITRMODE',0,1
	.word	327
	.byte	2,6,2,35,1,10
	.byte	'TSTRMODE',0,1
	.word	327
	.byte	2,4,2,35,1,10
	.byte	'TRSEL',0,1
	.word	327
	.byte	3,1,2,35,1,10
	.byte	'TRWC',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'CSRC',0,1
	.word	327
	.byte	4,4,2,35,2,10
	.byte	'STROBE',0,1
	.word	327
	.byte	4,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'SCWC',0,1
	.word	327
	.byte	1,0,2,35,3,0
.L307:
	.byte	11,12,246,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15092
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_FCFGM_Bits',0,12,178,1,16,4,10
	.byte	'FIR0EN',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'FIR1EN',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'OCEN',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'DSH',0,1
	.word	327
	.byte	2,3,2,35,0,10
	.byte	'FSH',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	304
	.byte	26,0,2,35,0,0
.L313:
	.byte	11,12,151,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15363
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_FCFGC_Bits',0,12,165,1,16,4,10
	.byte	'CFMDF',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'CFMC',0,1
	.word	327
	.byte	2,6,2,35,1,10
	.byte	'CFEN',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'MFSC',0,1
	.word	327
	.byte	2,2,2,35,1,10
	.byte	'SRGM',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'CFMSV',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'CFMDCNT',0,1
	.word	327
	.byte	8,0,2,35,3,0
.L301:
	.byte	11,12,140,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15539
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_FCFGA_Bits',0,12,151,1,16,4,10
	.byte	'CFADF',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'CFAC',0,1
	.word	327
	.byte	2,6,2,35,1,10
	.byte	'SRGA',0,1
	.word	327
	.byte	2,4,2,35,1,10
	.byte	'ESEL',0,1
	.word	327
	.byte	2,2,2,35,1,10
	.byte	'EGT',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'AFSC',0,1
	.word	327
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	327
	.byte	6,0,2,35,2,10
	.byte	'CFADCNT',0,1
	.word	327
	.byte	8,0,2,35,3,0
.L295:
	.byte	11,12,129,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15751
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_IWCTR_Bits',0,12,189,1,16,4,10
	.byte	'NVALCNT',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'INTEN',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'REPCNT',0,1
	.word	327
	.byte	4,4,2,35,1,10
	.byte	'REPVAL',0,1
	.word	327
	.byte	4,0,2,35,1,10
	.byte	'NVALDIS',0,1
	.word	327
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'IWS',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'NVALINT',0,1
	.word	327
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	327
	.byte	2,0,2,35,3,0
.L319:
	.byte	11,12,162,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15984
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_BOUNDSEL_Bits',0,12,119,16,4,10
	.byte	'BOUNDARYL',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'BOUNDARYU',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,12,224,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16249
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_RESM_Bits',0,12,253,1,16,4,10
	.byte	'RESULT',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,12,217,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16365
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_OFFM_Bits',0,12,226,1,16,4,10
	.byte	'OFFSET',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,12,184,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16477
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_RESA_Bits',0,12,246,1,16,4,10
	.byte	'RESULT',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,11,12,206,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16589
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_TSTMP_Bits',0,12,132,2,16,4,10
	.byte	'RESULT',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'CFMDCNT',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'NVALCNT',0,1
	.word	327
	.byte	6,2,2,35,3,10
	.byte	'TSVAL',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'TSSR',0,1
	.word	327
	.byte	1,0,2,35,3,0,11,12,228,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16701
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_CGSYNC_Bits',0,12,126,16,4,10
	.byte	'SDCOUNT',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'SDCAP',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'SDPOS',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'SDNEG',0,1
	.word	327
	.byte	8,0,2,35,3,0,11,12,235,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16862
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_DSADC_CH_RECTCFG_Bits',0,12,233,1,16,4,10
	.byte	'RFEN',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	327
	.byte	3,4,2,35,0,10
	.byte	'SSRC',0,1
	.word	327
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	726
	.byte	9,1,2,35,0,10
	.byte	'SDCVAL',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	14,2,2,35,2,10
	.byte	'SGNCS',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'SGND',0,1
	.word	327
	.byte	1,0,2,35,3,0
.L337:
	.byte	11,12,195,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17004
	.byte	4,2,35,0,0,16,84
	.word	327
	.byte	17,83,0,9
	.byte	'_Ifx_DSADC_CH',0,12,134,6,25,128,2,12
	.byte	'MODCFG',0
	.word	15052
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	3069
	.byte	4,2,35,4,12
	.byte	'DICFG',0
	.word	15323
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3069
	.byte	4,2,35,12,12
	.byte	'FCFGM',0
	.word	15499
	.byte	4,2,35,16,12
	.byte	'FCFGC',0
	.word	15711
	.byte	4,2,35,20,12
	.byte	'FCFGA',0
	.word	15944
	.byte	4,2,35,24,12
	.byte	'reserved_1C',0
	.word	3069
	.byte	4,2,35,28,12
	.byte	'IWCTR',0
	.word	16209
	.byte	4,2,35,32,12
	.byte	'reserved_24',0
	.word	3069
	.byte	4,2,35,36,12
	.byte	'BOUNDSEL',0
	.word	16325
	.byte	4,2,35,40,12
	.byte	'reserved_2C',0
	.word	3069
	.byte	4,2,35,44,12
	.byte	'RESM',0
	.word	16437
	.byte	4,2,35,48,12
	.byte	'reserved_34',0
	.word	3069
	.byte	4,2,35,52,12
	.byte	'OFFM',0
	.word	16549
	.byte	4,2,35,56,12
	.byte	'reserved_3C',0
	.word	3069
	.byte	4,2,35,60,12
	.byte	'RESA',0
	.word	16661
	.byte	4,2,35,64,12
	.byte	'reserved_44',0
	.word	5228
	.byte	12,2,35,68,12
	.byte	'TSTMP',0
	.word	16822
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	8529
	.byte	76,2,35,84,12
	.byte	'CGSYNC',0
	.word	16964
	.byte	4,3,35,160,1,12
	.byte	'reserved_A4',0
	.word	3069
	.byte	4,3,35,164,1,12
	.byte	'RECTCFG',0
	.word	17188
	.byte	4,3,35,168,1,12
	.byte	'reserved_AC',0
	.word	17228
	.byte	84,3,35,172,1,0,16,128,12
	.word	17237
	.byte	17,5,0,13
	.word	17691
	.byte	16,128,18
	.word	327
	.byte	17,255,17,0,9
	.byte	'_Ifx_DSADC',0,12,173,6,25,128,32,12
	.byte	'CLC',0
	.word	10692
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	3069
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	10818
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	10858
	.byte	28,2,35,12,12
	.byte	'OCS',0
	.word	10989
	.byte	4,2,35,40,12
	.byte	'KRSTCLR',0
	.word	11097
	.byte	4,2,35,44,12
	.byte	'KRST1',0
	.word	11203
	.byte	4,2,35,48,12
	.byte	'KRST0',0
	.word	11328
	.byte	4,2,35,52,12
	.byte	'reserved_38',0
	.word	3069
	.byte	4,2,35,56,12
	.byte	'ACCEN0',0
	.word	11899
	.byte	4,2,35,60,12
	.byte	'reserved_40',0
	.word	11939
	.byte	64,2,35,64,12
	.byte	'GLOBCFG',0
	.word	12200
	.byte	4,3,35,128,1,12
	.byte	'reserved_84',0
	.word	3069
	.byte	4,3,35,132,1,12
	.byte	'GLOBRC',0
	.word	12525
	.byte	4,3,35,136,1,12
	.byte	'reserved_8C',0
	.word	3069
	.byte	4,3,35,140,1,12
	.byte	'ACCPROT',0
	.word	12832
	.byte	4,3,35,144,1,12
	.byte	'reserved_94',0
	.word	5228
	.byte	12,3,35,148,1,12
	.byte	'CGCFG',0
	.word	13143
	.byte	4,3,35,160,1,12
	.byte	'reserved_A4',0
	.word	5228
	.byte	12,3,35,164,1,12
	.byte	'GLOBVCMH0',0
	.word	13655
	.byte	4,3,35,176,1,12
	.byte	'GLOBVCMH1',0
	.word	13893
	.byte	4,3,35,180,1,12
	.byte	'GLOBVCMH2',0
	.word	14021
	.byte	4,3,35,184,1,12
	.byte	'reserved_BC',0
	.word	14061
	.byte	36,3,35,188,1,12
	.byte	'EVFLAG',0
	.word	14355
	.byte	4,3,35,224,1,12
	.byte	'EVFLAGCLR',0
	.word	14683
	.byte	4,3,35,228,1,12
	.byte	'reserved_E8',0
	.word	4259
	.byte	24,3,35,232,1,12
	.byte	'CH',0
	.word	17701
	.byte	128,12,3,35,128,2,12
	.byte	'reserved_700',0
	.word	17706
	.byte	128,18,3,35,128,14,0,13
	.word	17717
.L180:
	.byte	6
	.word	18255
	.byte	2
	.byte	'IfxDsadc_startScan',0,3,11,192,5,17,1,1,8
	.byte	'dsadc',0,11,192,5,47
	.word	18260
	.byte	8
	.byte	'modulatorMask',0,11,192,5,61
	.word	1834
	.byte	8
	.byte	'channelMask',0,11,192,5,83
	.word	1834
	.byte	3,0,2
	.byte	'IfxDsadc_stopScan',0,3,11,198,5,17,1,1,8
	.byte	'dsadc',0,11,198,5,46
	.word	18260
	.byte	8
	.byte	'modulatorMask',0,11,198,5,60
	.word	1834
	.byte	3,0
.L268:
	.byte	4
	.byte	'short int',0,2,5,14,11,120,9,1,15
	.byte	'IfxDsadc_ChannelId_0',0,0,15
	.byte	'IfxDsadc_ChannelId_1',0,1,15
	.byte	'IfxDsadc_ChannelId_2',0,2,15
	.byte	'IfxDsadc_ChannelId_3',0,3,15
	.byte	'IfxDsadc_ChannelId_4',0,4,15
	.byte	'IfxDsadc_ChannelId_5',0,5,0
.L271:
	.byte	7
	.byte	'IfxDsadc_getAuxResult',0,3,11,225,4,19
	.word	18419
	.byte	1,1
.L273:
	.byte	8
	.byte	'dsadc',0,11,225,4,52
	.word	18260
.L275:
	.byte	8
	.byte	'channel',0,11,225,4,78
	.word	18432
.L277:
	.byte	3,0,7
	.byte	'IfxDsadc_getMainResult',0,3,11,237,4,19
	.word	18419
	.byte	1,1,8
	.byte	'dsadc',0,11,237,4,53
	.word	18260
	.byte	8
	.byte	'channel',0,11,237,4,79
	.word	18432
	.byte	3,0,18,9,170,1,9,8,12
	.byte	'port',0
	.word	9800
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	327
	.byte	1,2,35,4,0,18,13,84,15,16,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	18713
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	10079
	.byte	1,2,35,12,0,19
	.word	18752
.L151:
	.byte	6
	.word	18803
	.byte	14,9,124,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,15
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,15
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,15
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0
.L153:
	.byte	2
	.byte	'IfxDsadc_initCgPwmPin',0,3,11,243,4,17,1,1
.L155:
	.byte	8
	.byte	'cgPwm',0,11,243,4,65
	.word	18808
.L157:
	.byte	8
	.byte	'pinMode',0,11,243,4,91
	.word	10010
.L159:
	.byte	8
	.byte	'padDriver',0,11,243,4,118
	.word	18813
.L161:
	.byte	20,3,0,0,14,14,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,18,13,57,15,20,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'channel',0
	.word	327
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	18713
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	19312
	.byte	1,2,35,16,0,19
	.word	19430
.L237:
	.byte	6
	.word	19498
.L239:
	.byte	2
	.byte	'IfxDsadc_initCinPin',0,3,11,250,4,17,1,1
.L241:
	.byte	8
	.byte	'cIn',0,11,250,4,60
	.word	19503
.L243:
	.byte	8
	.byte	'cInMode',0,11,250,4,83
	.word	9805
.L245:
	.byte	20,3,0,0,18,13,66,15,20,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'channel',0
	.word	327
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	18713
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	19312
	.byte	1,2,35,16,0,19
	.word	19570
.L246:
	.byte	6
	.word	19638
.L248:
	.byte	2
	.byte	'IfxDsadc_initDinPin',0,3,11,135,5,17,1,1
.L250:
	.byte	8
	.byte	'dIn',0,11,135,5,60
	.word	19643
.L252:
	.byte	8
	.byte	'dInMode',0,11,135,5,83
	.word	9805
.L254:
	.byte	20,3,0,0,18,13,39,15,20,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'channel',0
	.word	327
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	18713
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	19312
	.byte	1,2,35,16,0,19
	.word	19710
.L203:
	.byte	6
	.word	19778
.L205:
	.byte	2
	.byte	'IfxDsadc_initDsnPin',0,3,11,141,5,17,1,1
.L208:
	.byte	8
	.byte	'dsn',0,11,141,5,60
	.word	19783
.L210:
	.byte	8
	.byte	'pinMode',0,11,141,5,83
	.word	9805
.L212:
	.byte	20,3,0,0,18,13,48,15,20,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'channel',0
	.word	327
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	18713
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	19312
	.byte	1,2,35,16,0,19
	.word	19850
.L224:
	.byte	6
	.word	19918
.L226:
	.byte	2
	.byte	'IfxDsadc_initDspPin',0,3,11,150,5,17,1,1
.L229:
	.byte	8
	.byte	'dsp',0,11,150,5,60
	.word	19923
.L231:
	.byte	8
	.byte	'pinMode',0,11,150,5,83
	.word	9805
.L233:
	.byte	20,3,0,0,18,13,75,15,20,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'channel',0
	.word	327
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	18713
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	19312
	.byte	1,2,35,16,0,19
	.word	19990
.L255:
	.byte	6
	.word	20058
.L257:
	.byte	2
	.byte	'IfxDsadc_initItrPin',0,3,11,159,5,17,1,1
.L259:
	.byte	8
	.byte	'itr',0,11,159,5,60
	.word	20063
.L261:
	.byte	8
	.byte	'itrMode',0,11,159,5,83
	.word	9805
.L263:
	.byte	20,3,0,0,19
	.word	320
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	20130
	.byte	0,13
	.word	304
	.byte	6
	.word	304
	.byte	23
	.byte	'__cmpswapw',0
	.word	20172
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	20177
	.byte	24
	.byte	'value',0
	.word	304
	.byte	24
	.byte	'compare',0
	.word	304
	.byte	0,25
	.word	162
	.byte	3,0,25
	.word	228
	.byte	26
	.word	246
	.byte	3,0,25
	.word	261
	.byte	26
	.word	275
	.byte	26
	.word	288
	.byte	3,0,25
	.word	683
	.byte	26
	.word	711
	.byte	3,0,25
	.word	1432
	.byte	26
	.word	1472
	.byte	26
	.word	1490
	.byte	3,0,25
	.word	1510
	.byte	26
	.word	1548
	.byte	26
	.word	1566
	.byte	3,0,27
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,187,1,17,1,1,1,1,8
	.byte	'password',0,5,187,1,50
	.word	726
	.byte	0,27
	.byte	'IfxScuWdt_setCpuEndinit',0,5,209,1,17,1,1,1,1,8
	.byte	'password',0,5,209,1,48
	.word	726
	.byte	0,25
	.word	1586
	.byte	26
	.word	1637
	.byte	3,0,28
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,221,2,19
	.word	726
	.byte	1,1,1,1,25
	.word	1758
	.byte	3,0,25
	.word	1792
	.byte	3,0,25
	.word	1855
	.byte	26
	.word	1896
	.byte	3,0,25
	.word	1915
	.byte	26
	.word	1970
	.byte	3,0,25
	.word	1989
	.byte	26
	.word	2029
	.byte	26
	.word	2046
	.byte	3,0,25
	.word	9930
	.byte	26
	.word	9962
	.byte	26
	.word	9976
	.byte	26
	.word	9994
	.byte	3,0,25
	.word	10296
	.byte	26
	.word	10329
	.byte	26
	.word	10343
	.byte	26
	.word	10361
	.byte	26
	.word	10375
	.byte	3,0,25
	.word	10495
	.byte	26
	.word	10523
	.byte	26
	.word	10537
	.byte	26
	.word	10555
	.byte	3,0,14,9,75,9,1,15
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,15
	.byte	'IfxPort_Mode_inputPullDown',0,8,15
	.byte	'IfxPort_Mode_inputPullUp',0,16,15
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,15
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,27
	.byte	'IfxPort_setPinMode',0,9,227,2,17,1,1,1,1,8
	.byte	'port',0,9,227,2,43
	.word	9800
	.byte	8
	.byte	'pinIndex',0,9,227,2,55
	.word	327
	.byte	8
	.byte	'mode',0,9,227,2,78
	.word	20606
	.byte	0,27
	.byte	'IfxPort_setPinPadDriver',0,9,242,2,17,1,1,1,1,8
	.byte	'port',0,9,242,2,48
	.word	9800
	.byte	8
	.byte	'pinIndex',0,9,242,2,60
	.word	327
	.byte	8
	.byte	'padDriver',0,9,242,2,88
	.word	18813
	.byte	0,25
	.word	18265
	.byte	26
	.word	18292
	.byte	26
	.word	18307
	.byte	26
	.word	18330
	.byte	3,0,25
	.word	18353
	.byte	26
	.word	18379
	.byte	26
	.word	18394
	.byte	3,0,25
	.word	18576
	.byte	26
	.word	18610
	.byte	26
	.word	18625
	.byte	3,0,25
	.word	18644
	.byte	26
	.word	18679
	.byte	26
	.word	18694
	.byte	3,0
.L146:
	.byte	4
	.byte	'float',0,4,4,29
	.byte	'IfxDsadc_getModulatorInputClockFreq',0,11,255,3,20
	.word	21508
	.byte	1,1,1,1,8
	.byte	'dsadc',0,11,255,3,67
	.word	18260
	.byte	0,25
	.word	19227
	.byte	26
	.word	19257
	.byte	26
	.word	19272
	.byte	26
	.word	19289
	.byte	20,30
	.word	10296
	.byte	26
	.word	10329
	.byte	26
	.word	10343
	.byte	26
	.word	10361
	.byte	26
	.word	10375
	.byte	31
	.word	10390
	.byte	0,3,0,0,25
	.word	19508
	.byte	26
	.word	19536
	.byte	26
	.word	19549
	.byte	20,30
	.word	9930
	.byte	26
	.word	9962
	.byte	26
	.word	9976
	.byte	26
	.word	9994
	.byte	31
	.word	10008
	.byte	0,3,0,0,25
	.word	19648
	.byte	26
	.word	19676
	.byte	26
	.word	19689
	.byte	20,30
	.word	9930
	.byte	26
	.word	9962
	.byte	26
	.word	9976
	.byte	26
	.word	9994
	.byte	31
	.word	10008
	.byte	0,3,0,0,25
	.word	19788
	.byte	26
	.word	19816
	.byte	26
	.word	19829
	.byte	20,30
	.word	9930
	.byte	26
	.word	9962
	.byte	26
	.word	9976
	.byte	26
	.word	9994
	.byte	31
	.word	10008
	.byte	0,3,0,0,25
	.word	19928
	.byte	26
	.word	19956
	.byte	26
	.word	19969
	.byte	20,30
	.word	9930
	.byte	26
	.word	9962
	.byte	26
	.word	9976
	.byte	26
	.word	9994
	.byte	31
	.word	10008
	.byte	0,3,0,0,25
	.word	20068
	.byte	26
	.word	20096
	.byte	26
	.word	20109
	.byte	20,30
	.word	9930
	.byte	26
	.word	9962
	.byte	26
	.word	9976
	.byte	26
	.word	9994
	.byte	31
	.word	10008
	.byte	0,3,0,0,18,15,147,2,9,4,12
	.byte	'dsadc',0
	.word	18260
	.byte	4,2,35,0,0
.L139:
	.byte	6
	.word	21862
	.byte	14,11,110,9,1,15
	.byte	'IfxDsadc_CarrierWaveformMode_stopped',0,0,15
	.byte	'IfxDsadc_CarrierWaveformMode_square',0,1,15
	.byte	'IfxDsadc_CarrierWaveformMode_triangle',0,2,15
	.byte	'IfxDsadc_CarrierWaveformMode_sine',0,3,0,18,15,154,2,9,20,12
	.byte	'carrierWaveformMode',0
	.word	21889
	.byte	1,2,35,0,12
	.byte	'inverted',0
	.word	327
	.byte	1,2,35,1,12
	.byte	'bitReversed',0
	.word	327
	.byte	1,2,35,2,12
	.byte	'frequency',0
	.word	21508
	.byte	4,2,35,4,12
	.byte	'pinPos',0
	.word	18808
	.byte	4,2,35,8,12
	.byte	'pinNeg',0
	.word	18808
	.byte	4,2,35,12,12
	.byte	'pinMode',0
	.word	10010
	.byte	1,2,35,16,12
	.byte	'pinDriver',0
	.word	18813
	.byte	1,2,35,17,0,19
	.word	22048
.L141:
	.byte	6
	.word	22210
	.byte	14,11,147,2,9,1,15
	.byte	'IfxDsadc_ModulatorClock_off',0,0,15
	.byte	'IfxDsadc_ModulatorClock_fDSD',0,1,15
	.byte	'IfxDsadc_ModulatorClock_fERAY',0,2,15
	.byte	'IfxDsadc_ModulatorClock_fOSC0',0,3,0,14,11,233,1,9,1,15
	.byte	'IfxDsadc_LowPowerSupply_5V',0,0,15
	.byte	'IfxDsadc_LowPowerSupply_3_3V',0,1,0,18,15,193,2,9,8,12
	.byte	'dsadc',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'modulatorClockSelect',0
	.word	22220
	.byte	1,2,35,4,12
	.byte	'lowPowerSupply',0
	.word	22352
	.byte	1,2,35,5,0,19
	.word	22419
.L178:
	.byte	6
	.word	22495
.L190:
	.byte	6
	.word	22419
	.byte	13
	.word	17237
	.byte	6
	.word	22510
	.byte	18,15,168,2,9,12,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'channel',0
	.word	22515
	.byte	4,2,35,4,12
	.byte	'channelId',0
	.word	18432
	.byte	1,2,35,8,0
.L194:
	.byte	6
	.word	22520
	.byte	14,11,165,1,9,1,15
	.byte	'IfxDsadc_InputConfig_inputPin',0,0,15
	.byte	'IfxDsadc_InputConfig_supplyVoltage',0,1,15
	.byte	'IfxDsadc_InputConfig_commonModeVoltage',0,2,15
	.byte	'IfxDsadc_InputConfig_referenceGround',0,3,0,14,11,189,1,9,1,15
	.byte	'IfxDsadc_InputGain_factor1',0,0,15
	.byte	'IfxDsadc_InputGain_factor2',0,1,15
	.byte	'IfxDsadc_InputGain_factor4',0,2,15
	.byte	'IfxDsadc_InputGain_factor8',0,3,15
	.byte	'IfxDsadc_InputGain_factor16',0,4,0,14,11,201,1,9,1,15
	.byte	'IfxDsadc_InputPin_a',0,0,15
	.byte	'IfxDsadc_InputPin_b',0,1,15
	.byte	'IfxDsadc_InputPin_c',0,2,15
	.byte	'IfxDsadc_InputPin_d',0,3,0,14,11,133,1,9,1,15
	.byte	'IfxDsadc_CommonModeVoltage_a',0,0,15
	.byte	'IfxDsadc_CommonModeVoltage_b',0,1,15
	.byte	'IfxDsadc_CommonModeVoltage_c',0,2,0,18,15,249,1,9,12,12
	.byte	'positiveInput',0
	.word	22584
	.byte	1,2,35,0,12
	.byte	'negativeInput',0
	.word	22584
	.byte	1,2,35,1,12
	.byte	'inputGain',0
	.word	22740
	.byte	1,2,35,2,12
	.byte	'inputPin',0
	.word	22893
	.byte	1,2,35,3,12
	.byte	'modulatorClockFreq',0
	.word	21508
	.byte	4,2,35,4,12
	.byte	'commonModeVoltage',0
	.word	22988
	.byte	1,2,35,8,0,14,11,176,1,9,1,15
	.byte	'IfxDsadc_InputDataSource_onChipStandAlone',0,0,15
	.byte	'IfxDsadc_InputDataSource_onChipCombined',0,1,15
	.byte	'IfxDsadc_InputDataSource_directInputA',0,2,15
	.byte	'IfxDsadc_InputDataSource_invertedInputA',0,3,15
	.byte	'IfxDsadc_InputDataSource_directInputB',0,4,15
	.byte	'IfxDsadc_InputDataSource_invertedInputB',0,5,0,14,11,238,2,9,1,15
	.byte	'IfxDsadc_TriggerInput_a',0,0,15
	.byte	'IfxDsadc_TriggerInput_b',0,1,15
	.byte	'IfxDsadc_TriggerInput_c',0,2,15
	.byte	'IfxDsadc_TriggerInput_d',0,3,15
	.byte	'IfxDsadc_TriggerInput_e',0,4,15
	.byte	'IfxDsadc_TriggerInput_f',0,5,15
	.byte	'IfxDsadc_TriggerInput_g',0,6,15
	.byte	'IfxDsadc_TriggerInput_h',0,7,0,14,11,222,1,9,1,15
	.byte	'IfxDsadc_IntegratorTrigger_bypassed',0,0,15
	.byte	'IfxDsadc_IntegratorTrigger_fallingEdge',0,1,15
	.byte	'IfxDsadc_IntegratorTrigger_risingEdge',0,2,15
	.byte	'IfxDsadc_IntegratorTrigger_alwaysActive',0,3,0,14,11,227,2,9,1,15
	.byte	'IfxDsadc_TimestampTrigger_noTrigger',0,0,15
	.byte	'IfxDsadc_TimestampTrigger_fallingEdge',0,1,15
	.byte	'IfxDsadc_TimestampTrigger_risingEdge',0,2,15
	.byte	'IfxDsadc_TimestampTrigger_eachEdge',0,3,0,14,11,193,2,9,1,15
	.byte	'IfxDsadc_SampleClockSource_internal',0,0,15
	.byte	'IfxDsadc_SampleClockSource_inputA',0,1,15
	.byte	'IfxDsadc_SampleClockSource_inputB',0,2,15
	.byte	'IfxDsadc_SampleClockSource_inputC',0,3,0,14,11,204,2,9,1,15
	.byte	'IfxDsadc_SampleStrobe_noDataStrobe',0,0,15
	.byte	'IfxDsadc_SampleStrobe_sampleOnRisingEdge',0,1,15
	.byte	'IfxDsadc_SampleStrobe_sampleOnFallingEdge',0,2,15
	.byte	'IfxDsadc_SampleStrobe_sampleOnBothEdges',0,3,15
	.byte	'IfxDsadc_SampleStrobe_reserved',0,4,15
	.byte	'IfxDsadc_SampleStrobe_sampleOnTwoRisingEdges',0,5,15
	.byte	'IfxDsadc_SampleStrobe_sampleOnTwoFallingEdges',0,6,0,18,15,216,1,9,6,12
	.byte	'inputDataSource',0
	.word	23233
	.byte	1,2,35,0,12
	.byte	'triggerInput',0
	.word	23490
	.byte	1,2,35,1,12
	.byte	'integrationTrigger',0
	.word	23705
	.byte	1,2,35,2,12
	.byte	'timestampTrigger',0
	.word	23873
	.byte	1,2,35,3,12
	.byte	'sampleClockSource',0
	.word	24034
	.byte	1,2,35,4,12
	.byte	'sampleStrobe',0
	.word	24187
	.byte	1,2,35,5,0,14,11,253,1,9,1,15
	.byte	'IfxDsadc_MainCombFilterType_comb1',0,0,15
	.byte	'IfxDsadc_MainCombFilterType_comb2',0,1,15
	.byte	'IfxDsadc_MainCombFilterType_comb3',0,2,15
	.byte	'IfxDsadc_MainCombFilterType_combF',0,3,0,14,11,242,1,9,1,15
	.byte	'IfxDsadc_MainCombFilterShift_noShift',0,0,15
	.byte	'IfxDsadc_MainCombFilterShift_shiftBy1',0,1,15
	.byte	'IfxDsadc_MainCombFilterShift_shiftBy2',0,2,15
	.byte	'IfxDsadc_MainCombFilterShift_shiftBy3',0,3,0,14,11,136,2,9,1,15
	.byte	'IfxDsadc_MainServiceRequest_never',0,0,15
	.byte	'IfxDsadc_MainServiceRequest_highGateSignal',0,1,15
	.byte	'IfxDsadc_MainServiceRequest_lowGateSignal',0,2,15
	.byte	'IfxDsadc_MainServiceRequest_everyNewResult',0,3,0,18,15,204,1,9,8,12
	.byte	'bypassed',0
	.word	327
	.byte	1,2,35,0,12
	.byte	'combFilterType',0
	.word	24645
	.byte	1,2,35,1,12
	.byte	'combFilterShift',0
	.word	24796
	.byte	1,2,35,2,12
	.byte	'serviceRequest',0
	.word	24962
	.byte	1,2,35,3,12
	.byte	'decimationFactor',0
	.word	726
	.byte	2,2,35,4,12
	.byte	'startValue',0
	.word	726
	.byte	2,2,35,6,0,14,11,144,1,9,1,15
	.byte	'IfxDsadc_FirDataShift_noShift',0,0,15
	.byte	'IfxDsadc_FirDataShift_shiftBy1',0,1,15
	.byte	'IfxDsadc_FirDataShift_shiftBy2',0,2,15
	.byte	'IfxDsadc_FirDataShift_shiftBy3',0,3,0,14,11,156,1,9,1,15
	.byte	'IfxDsadc_FirInternalShift_noShift',0,0,15
	.byte	'IfxDsadc_FirInternalShift_shiftBy1',0,1,0,18,15,228,1,9,6,12
	.byte	'fir0Enabled',0
	.word	327
	.byte	1,2,35,0,12
	.byte	'fir1Enabled',0
	.word	327
	.byte	1,2,35,1,12
	.byte	'offsetCompensation',0
	.word	327
	.byte	1,2,35,2,12
	.byte	'dataShift',0
	.word	25283
	.byte	1,2,35,3,12
	.byte	'internalShift',0
	.word	25421
	.byte	1,2,35,4,0,14,11,212,1,9,1,15
	.byte	'IfxDsadc_IntegrationWindowSize_internalControl',0,0,15
	.byte	'IfxDsadc_IntegrationWindowSize_externalControl',0,1,0,18,15,239,1,9,8,12
	.byte	'windowSize',0
	.word	25620
	.byte	1,2,35,0,12
	.byte	'discardCount',0
	.word	726
	.byte	2,2,35,2,12
	.byte	'integrationCount',0
	.word	726
	.byte	2,2,35,4,12
	.byte	'integrationCycles',0
	.word	726
	.byte	2,2,35,6,0,14,11,70,9,1,15
	.byte	'IfxDsadc_AuxCombFilterType_comb1',0,0,15
	.byte	'IfxDsadc_AuxCombFilterType_comb2',0,1,15
	.byte	'IfxDsadc_AuxCombFilterType_comb3',0,2,15
	.byte	'IfxDsadc_AuxCombFilterType_combF',0,3,0,14,11,59,9,1,15
	.byte	'IfxDsadc_AuxCombFilterShift_noShift',0,0,15
	.byte	'IfxDsadc_AuxCombFilterShift_shiftBy1',0,1,15
	.byte	'IfxDsadc_AuxCombFilterShift_shiftBy2',0,2,15
	.byte	'IfxDsadc_AuxCombFilterShift_shiftBy3',0,3,0,14,11,100,9,1,15
	.byte	'IfxDsadc_AuxServiceRequest_never',0,0,15
	.byte	'IfxDsadc_AuxServiceRequest_auxFilter',0,1,15
	.byte	'IfxDsadc_AuxServiceRequest_altSource',0,2,0,14,11,81,9,1,15
	.byte	'IfxDsadc_AuxEvent_everyNewResult',0,0,15
	.byte	'IfxDsadc_AuxEvent_insideBoundary',0,1,15
	.byte	'IfxDsadc_AuxEvent_outsideBoundary',0,2,0,14,11,91,9,1,15
	.byte	'IfxDsadc_AuxGate_definedByESEL',0,0,15
	.byte	'IfxDsadc_AuxGate_coupledToIntegrator',0,1,0,18,15,175,1,9,8,12
	.byte	'bypassed',0
	.word	327
	.byte	1,2,35,0,12
	.byte	'combFilterType',0
	.word	25827
	.byte	1,2,35,1,12
	.byte	'combFilterShift',0
	.word	25973
	.byte	1,2,35,2,12
	.byte	'serviceRequest',0
	.word	26134
	.byte	1,2,35,3,12
	.byte	'eventSelect',0
	.word	26253
	.byte	1,2,35,4,12
	.byte	'eventGate',0
	.word	26365
	.byte	1,2,35,5,12
	.byte	'decimationFactor',0
	.word	327
	.byte	1,2,35,6,0,14,11,182,2,9,1,15
	.byte	'IfxDsadc_RectifierSignSource_onChipGenerator',0,0,15
	.byte	'IfxDsadc_RectifierSignSource_nextChannel',0,1,15
	.byte	'IfxDsadc_RectifierSignSource_externalA',0,2,15
	.byte	'IfxDsadc_RectifierSignSource_externalB',0,3,0,18,15,133,2,9,4,12
	.byte	'enabled',0
	.word	327
	.byte	1,2,35,0,12
	.byte	'signSource',0
	.word	26607
	.byte	1,2,35,1,12
	.byte	'signDelay',0
	.word	327
	.byte	1,2,35,2,12
	.byte	'signPeriod',0
	.word	327
	.byte	1,2,35,3,0,18,15,188,1,9,40,12
	.byte	'cin',0
	.word	19503
	.byte	4,2,35,0,12
	.byte	'cinMode',0
	.word	9805
	.byte	1,2,35,4,12
	.byte	'din',0
	.word	19643
	.byte	4,2,35,8,12
	.byte	'dinMode',0
	.word	9805
	.byte	1,2,35,12,12
	.byte	'itr',0
	.word	20063
	.byte	4,2,35,16,12
	.byte	'itrMode',0
	.word	9805
	.byte	1,2,35,20,12
	.byte	'dsn',0
	.word	19783
	.byte	4,2,35,24,12
	.byte	'dsnMode',0
	.word	9805
	.byte	1,2,35,28,12
	.byte	'dsp',0
	.word	19923
	.byte	4,2,35,32,12
	.byte	'dspMode',0
	.word	9805
	.byte	1,2,35,36,0,19
	.word	26869
.L200:
	.byte	6
	.word	27026
	.byte	18,15,177,2,9,68,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'channelId',0
	.word	18432
	.byte	1,2,35,4,12
	.byte	'modulator',0
	.word	23088
	.byte	12,2,35,8,12
	.byte	'demodulator',0
	.word	24488
	.byte	6,2,35,20,12
	.byte	'combFilter',0
	.word	25139
	.byte	8,2,35,28,12
	.byte	'firFilter',0
	.word	25501
	.byte	6,2,35,36,12
	.byte	'integrator',0
	.word	25725
	.byte	8,2,35,44,12
	.byte	'auxFilter',0
	.word	26443
	.byte	8,2,35,52,12
	.byte	'rectifier',0
	.word	26786
	.byte	4,2,35,60,12
	.byte	'channelPins',0
	.word	27031
	.byte	4,2,35,64,0,19
	.word	27036
.L196:
	.byte	6
	.word	27236
.L265:
	.byte	6
	.word	27036
.L279:
	.byte	6
	.word	22048
.L281:
	.byte	4
	.byte	'long int',0,4,5
.L284:
	.byte	6
	.word	21508
	.byte	19
	.word	26443
.L293:
	.byte	6
	.word	27273
	.byte	19
	.word	25139
.L299:
	.byte	6
	.word	27283
	.byte	19
	.word	24488
.L305:
	.byte	6
	.word	27293
	.byte	19
	.word	25501
.L311:
	.byte	6
	.word	27303
	.byte	19
	.word	25725
.L317:
	.byte	6
	.word	27313
	.byte	19
	.word	23088
.L323:
	.byte	6
	.word	27323
	.byte	19
	.word	26786
.L335:
	.byte	6
	.word	27333
	.byte	32
	.byte	'__wchar_t',0,16,1,1
	.word	18419
	.byte	32
	.byte	'__size_t',0,16,1,1
	.word	304
	.byte	32
	.byte	'__ptrdiff_t',0,16,1,1
	.word	320
	.byte	33,1,6
	.word	27398
	.byte	32
	.byte	'__codeptr',0,16,1,1
	.word	27400
	.byte	14,17,49,9,1,15
	.byte	'IfxSrc_Tos_cpu0',0,0,15
	.byte	'IfxSrc_Tos_cpu1',0,1,15
	.byte	'IfxSrc_Tos_cpu2',0,2,15
	.byte	'IfxSrc_Tos_dma',0,3,0,32
	.byte	'IfxSrc_Tos',0,17,55,3
	.word	27423
	.byte	32
	.byte	'uint8',0,18,89,24
	.word	327
	.byte	32
	.byte	'sint16',0,18,90,24
	.word	18419
	.byte	32
	.byte	'uint16',0,18,91,24
	.word	726
	.byte	32
	.byte	'sint32',0,18,92,24
	.word	27256
	.byte	32
	.byte	'uint32',0,18,93,24
	.word	1834
	.byte	32
	.byte	'float32',0,18,94,24
	.word	21508
	.byte	32
	.byte	'boolean',0,18,104,24
	.word	327
	.byte	4
	.byte	'long long int',0,8,5,32
	.byte	'sint64',0,14,36,28
	.word	27625
	.byte	32
	.byte	'uint64',0,14,37,28
	.word	191
	.byte	32
	.byte	'pvoid',0,14,40,28
	.word	223
	.byte	32
	.byte	'Ifx_TickTime',0,14,43,28
	.word	27625
	.byte	32
	.byte	'Ifx_Priority',0,14,67,16
	.word	726
	.byte	32
	.byte	'Ifx_RxSel',0,14,104,3
	.word	19312
	.byte	32
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	344
	.byte	32
	.byte	'Ifx_SRC_SRCR',0,4,78,3
	.word	634
	.byte	9
	.byte	'_Ifx_SRC_AGBT',0,4,89,25,4,12
	.byte	'SR',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	27793
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,4,92,3
	.word	27825
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,4,95,25,12,12
	.byte	'TX',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	634
	.byte	4,2,35,8,0,13
	.word	27851
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,4,100,3
	.word	27910
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,4,103,25,4,12
	.byte	'SBSRC',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	27938
	.byte	32
	.byte	'Ifx_SRC_BCUSPB',0,4,106,3
	.word	27975
	.byte	16,64
	.word	634
	.byte	17,15,0,9
	.byte	'_Ifx_SRC_CAN',0,4,109,25,64,12
	.byte	'INT',0
	.word	28003
	.byte	64,2,35,0,0,13
	.word	28012
	.byte	32
	.byte	'Ifx_SRC_CAN',0,4,112,3
	.word	28044
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,4,115,25,16,12
	.byte	'SR0',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	634
	.byte	4,2,35,12,0,13
	.word	28069
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,4,121,3
	.word	28141
	.byte	16,8
	.word	634
	.byte	17,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,4,124,25,8,12
	.byte	'SR',0
	.word	28167
	.byte	8,2,35,0,0,13
	.word	28176
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,4,127,3
	.word	28212
	.byte	9
	.byte	'_Ifx_SRC_CIF',0,4,130,1,25,16,12
	.byte	'MI',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'MIEP',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'ISP',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'MJPEG',0
	.word	634
	.byte	4,2,35,12,0,13
	.word	28242
	.byte	32
	.byte	'Ifx_SRC_CIF',0,4,136,1,3
	.word	28316
	.byte	9
	.byte	'_Ifx_SRC_CPU',0,4,139,1,25,4,12
	.byte	'SBSRC',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	28342
	.byte	32
	.byte	'Ifx_SRC_CPU',0,4,142,1,3
	.word	28377
	.byte	16,24
	.word	634
	.byte	17,5,0,9
	.byte	'_Ifx_SRC_DAM',0,4,145,1,25,24,12
	.byte	'SR',0
	.word	28403
	.byte	24,2,35,0,0,13
	.word	28412
	.byte	32
	.byte	'Ifx_SRC_DAM',0,4,148,1,3
	.word	28444
	.byte	16,128,2
	.word	634
	.byte	17,63,0,9
	.byte	'_Ifx_SRC_DMA',0,4,151,1,25,144,2,12
	.byte	'ERR',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	5228
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	28470
	.byte	128,2,2,35,16,0,13
	.word	28480
	.byte	32
	.byte	'Ifx_SRC_DMA',0,4,156,1,3
	.word	28547
	.byte	9
	.byte	'_Ifx_SRC_DSADC',0,4,159,1,25,8,12
	.byte	'SRM',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'SRA',0
	.word	634
	.byte	4,2,35,4,0,13
	.word	28573
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,4,163,1,3
	.word	28621
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,4,166,1,25,4,12
	.byte	'SR',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	28649
	.byte	32
	.byte	'Ifx_SRC_EMEM',0,4,169,1,3
	.word	28682
	.byte	16,40
	.word	327
	.byte	17,39,0,9
	.byte	'_Ifx_SRC_ERAY',0,4,172,1,25,80,12
	.byte	'INT',0
	.word	28167
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	28167
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	28167
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	28167
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	634
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	634
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	28709
	.byte	40,2,35,40,0,13
	.word	28718
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,4,181,1,3
	.word	28845
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,4,184,1,25,4,12
	.byte	'SR',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	28872
	.byte	32
	.byte	'Ifx_SRC_ETH',0,4,187,1,3
	.word	28904
	.byte	9
	.byte	'_Ifx_SRC_FCE',0,4,190,1,25,4,12
	.byte	'SR',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	28930
	.byte	32
	.byte	'Ifx_SRC_FCE',0,4,193,1,3
	.word	28962
	.byte	16,16
	.word	327
	.byte	17,15,0,9
	.byte	'_Ifx_SRC_GPSR',0,4,196,1,25,32,12
	.byte	'SR0',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	634
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	28988
	.byte	16,2,35,16,0,13
	.word	28997
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,4,203,1,3
	.word	29091
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,4,206,1,25,48,12
	.byte	'CIRQ',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	634
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	634
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	634
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	4259
	.byte	24,2,35,24,0,13
	.word	29118
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,4,215,1,3
	.word	29235
	.byte	16,12
	.word	634
	.byte	17,2,0,16,32
	.word	634
	.byte	17,7,0,16,32
	.word	29272
	.byte	17,0,0,16,88
	.word	327
	.byte	17,87,0,16,108
	.word	634
	.byte	17,26,0,16,96
	.word	327
	.byte	17,95,0,16,128,1
	.word	29272
	.byte	17,3,0,16,128,3
	.word	327
	.byte	17,255,2,0,16,96
	.word	29272
	.byte	17,2,0,16,160,3
	.word	327
	.byte	17,159,3,0,16,16
	.word	634
	.byte	17,3,0,16,80
	.word	29358
	.byte	17,4,0,16,176,2
	.word	327
	.byte	17,175,2,0,16,48
	.word	327
	.byte	17,47,0,9
	.byte	'_Ifx_SRC_GTM',0,4,218,1,25,208,18,12
	.byte	'AEIIRQ',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'ARUIRQ',0
	.word	29263
	.byte	12,2,35,4,12
	.byte	'reserved_10',0
	.word	3069
	.byte	4,2,35,16,12
	.byte	'BRCIRQ',0
	.word	634
	.byte	4,2,35,20,12
	.byte	'CMPIRQ',0
	.word	634
	.byte	4,2,35,24,12
	.byte	'SPEIRQ',0
	.word	28167
	.byte	8,2,35,28,12
	.byte	'reserved_24',0
	.word	4888
	.byte	8,2,35,36,12
	.byte	'PSM',0
	.word	29281
	.byte	32,2,35,44,12
	.byte	'reserved_4C',0
	.word	29290
	.byte	88,2,35,76,12
	.byte	'DPLL',0
	.word	29299
	.byte	108,3,35,164,1,12
	.byte	'reserved_110',0
	.word	29308
	.byte	96,3,35,144,2,12
	.byte	'ERR',0
	.word	634
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	5228
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	29317
	.byte	128,1,3,35,128,3,12
	.byte	'reserved_200',0
	.word	29327
	.byte	128,3,3,35,128,4,12
	.byte	'MCS',0
	.word	29317
	.byte	128,1,3,35,128,7,12
	.byte	'reserved_400',0
	.word	29327
	.byte	128,3,3,35,128,8,12
	.byte	'TOM',0
	.word	29338
	.byte	96,3,35,128,11,12
	.byte	'reserved_5E0',0
	.word	29347
	.byte	160,3,3,35,224,11,12
	.byte	'ATOM',0
	.word	29367
	.byte	80,3,35,128,15,12
	.byte	'reserved_7D0',0
	.word	29376
	.byte	176,2,3,35,208,15,12
	.byte	'MCSW0',0
	.word	29358
	.byte	16,3,35,128,18,12
	.byte	'reserved_910',0
	.word	29387
	.byte	48,3,35,144,18,12
	.byte	'MCSW1',0
	.word	29358
	.byte	16,3,35,192,18,0,13
	.word	29396
	.byte	32
	.byte	'Ifx_SRC_GTM',0,4,244,1,3
	.word	29858
	.byte	9
	.byte	'_Ifx_SRC_HSCT',0,4,247,1,25,4,12
	.byte	'SR',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	29884
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,4,250,1,3
	.word	29917
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,4,253,1,25,8,12
	.byte	'HSM',0
	.word	28167
	.byte	8,2,35,0,0,13
	.word	29944
	.byte	32
	.byte	'Ifx_SRC_HSM',0,4,128,2,3
	.word	29977
	.byte	9
	.byte	'_Ifx_SRC_HSSL',0,4,131,2,25,16,12
	.byte	'COK',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'RDI',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'TRG',0
	.word	634
	.byte	4,2,35,12,0,13
	.word	30003
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,4,137,2,3
	.word	30076
	.byte	16,56
	.word	327
	.byte	17,55,0,9
	.byte	'_Ifx_SRC_I2C',0,4,140,2,25,80,12
	.byte	'BREQ',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'LBREQ',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'SREQ',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'LSREQ',0
	.word	634
	.byte	4,2,35,12,12
	.byte	'ERR',0
	.word	634
	.byte	4,2,35,16,12
	.byte	'P',0
	.word	634
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	30103
	.byte	56,2,35,24,0,13
	.word	30112
	.byte	32
	.byte	'Ifx_SRC_I2C',0,4,149,2,3
	.word	30235
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,4,152,2,25,4,12
	.byte	'SR',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	30261
	.byte	32
	.byte	'Ifx_SRC_LMU',0,4,155,2,3
	.word	30293
	.byte	9
	.byte	'_Ifx_SRC_MSC',0,4,158,2,25,20,12
	.byte	'SR0',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	634
	.byte	4,2,35,12,12
	.byte	'SR4',0
	.word	634
	.byte	4,2,35,16,0,13
	.word	30319
	.byte	32
	.byte	'Ifx_SRC_MSC',0,4,165,2,3
	.word	30404
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,4,168,2,25,4,12
	.byte	'SR',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	30430
	.byte	32
	.byte	'Ifx_SRC_PMU',0,4,171,2,3
	.word	30462
	.byte	9
	.byte	'_Ifx_SRC_PSI5',0,4,174,2,25,32,12
	.byte	'SR',0
	.word	29272
	.byte	32,2,35,0,0,13
	.word	30488
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,4,177,2,3
	.word	30521
	.byte	9
	.byte	'_Ifx_SRC_PSI5S',0,4,180,2,25,32,12
	.byte	'SR',0
	.word	29272
	.byte	32,2,35,0,0,13
	.word	30548
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,4,183,2,3
	.word	30582
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,4,186,2,25,24,12
	.byte	'TX',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	634
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	3069
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	634
	.byte	4,2,35,20,0,13
	.word	30610
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,4,194,2,3
	.word	30712
	.byte	9
	.byte	'_Ifx_SRC_SCU',0,4,197,2,25,20,12
	.byte	'DTS',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	29358
	.byte	16,2,35,4,0,13
	.word	30739
	.byte	32
	.byte	'Ifx_SRC_SCU',0,4,201,2,3
	.word	30785
	.byte	16,40
	.word	634
	.byte	17,9,0,9
	.byte	'_Ifx_SRC_SENT',0,4,204,2,25,40,12
	.byte	'SR',0
	.word	30811
	.byte	40,2,35,0,0,13
	.word	30820
	.byte	32
	.byte	'Ifx_SRC_SENT',0,4,207,2,3
	.word	30853
	.byte	9
	.byte	'_Ifx_SRC_SMU',0,4,210,2,25,12,12
	.byte	'SR',0
	.word	29263
	.byte	12,2,35,0,0,13
	.word	30880
	.byte	32
	.byte	'Ifx_SRC_SMU',0,4,213,2,3
	.word	30912
	.byte	9
	.byte	'_Ifx_SRC_STM',0,4,216,2,25,8,12
	.byte	'SR0',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	634
	.byte	4,2,35,4,0,13
	.word	30938
	.byte	32
	.byte	'Ifx_SRC_STM',0,4,220,2,3
	.word	30984
	.byte	9
	.byte	'_Ifx_SRC_VADCCG',0,4,223,2,25,16,12
	.byte	'SR0',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	634
	.byte	4,2,35,12,0,13
	.word	31010
	.byte	32
	.byte	'Ifx_SRC_VADCCG',0,4,229,2,3
	.word	31085
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,4,232,2,25,16,12
	.byte	'SR0',0
	.word	634
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	634
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	634
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	634
	.byte	4,2,35,12,0,13
	.word	31114
	.byte	32
	.byte	'Ifx_SRC_VADCG',0,4,238,2,3
	.word	31188
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,4,241,2,25,4,12
	.byte	'SRC',0
	.word	634
	.byte	4,2,35,0,0,13
	.word	31216
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,4,244,2,3
	.word	31250
	.byte	16,4
	.word	27793
	.byte	17,0,0,13
	.word	31277
	.byte	9
	.byte	'_Ifx_SRC_GAGBT',0,4,129,3,25,4,12
	.byte	'AGBT',0
	.word	31286
	.byte	4,2,35,0,0,13
	.word	31291
	.byte	32
	.byte	'Ifx_SRC_GAGBT',0,4,132,3,3
	.word	31327
	.byte	16,48
	.word	27851
	.byte	17,3,0,13
	.word	31355
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,4,135,3,25,48,12
	.byte	'ASCLIN',0
	.word	31364
	.byte	48,2,35,0,0,13
	.word	31369
	.byte	32
	.byte	'Ifx_SRC_GASCLIN',0,4,138,3,3
	.word	31409
	.byte	13
	.word	27938
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,4,141,3,25,4,12
	.byte	'SPB',0
	.word	31439
	.byte	4,2,35,0,0,13
	.word	31444
	.byte	32
	.byte	'Ifx_SRC_GBCU',0,4,144,3,3
	.word	31478
	.byte	16,64
	.word	28012
	.byte	17,0,0,13
	.word	31505
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,4,147,3,25,64,12
	.byte	'CAN',0
	.word	31514
	.byte	64,2,35,0,0,13
	.word	31519
	.byte	32
	.byte	'Ifx_SRC_GCAN',0,4,150,3,3
	.word	31553
	.byte	16,32
	.word	28069
	.byte	17,1,0,13
	.word	31580
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,4,153,3,25,32,12
	.byte	'CCU6',0
	.word	31589
	.byte	32,2,35,0,0,13
	.word	31594
	.byte	32
	.byte	'Ifx_SRC_GCCU6',0,4,156,3,3
	.word	31630
	.byte	13
	.word	28176
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,4,159,3,25,8,12
	.byte	'CERBERUS',0
	.word	31658
	.byte	8,2,35,0,0,13
	.word	31663
	.byte	32
	.byte	'Ifx_SRC_GCERBERUS',0,4,162,3,3
	.word	31707
	.byte	16,16
	.word	28242
	.byte	17,0,0,13
	.word	31739
	.byte	9
	.byte	'_Ifx_SRC_GCIF',0,4,165,3,25,16,12
	.byte	'CIF',0
	.word	31748
	.byte	16,2,35,0,0,13
	.word	31753
	.byte	32
	.byte	'Ifx_SRC_GCIF',0,4,168,3,3
	.word	31787
	.byte	16,12
	.word	28342
	.byte	17,2,0,13
	.word	31814
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,4,171,3,25,12,12
	.byte	'CPU',0
	.word	31823
	.byte	12,2,35,0,0,13
	.word	31828
	.byte	32
	.byte	'Ifx_SRC_GCPU',0,4,174,3,3
	.word	31862
	.byte	16,24
	.word	28412
	.byte	17,0,0,13
	.word	31889
	.byte	9
	.byte	'_Ifx_SRC_GDAM',0,4,177,3,25,24,12
	.byte	'DAM',0
	.word	31898
	.byte	24,2,35,0,0,13
	.word	31903
	.byte	32
	.byte	'Ifx_SRC_GDAM',0,4,180,3,3
	.word	31937
	.byte	16,144,2
	.word	28480
	.byte	17,0,0,13
	.word	31964
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,4,183,3,25,144,2,12
	.byte	'DMA',0
	.word	31974
	.byte	144,2,2,35,0,0,13
	.word	31979
	.byte	32
	.byte	'Ifx_SRC_GDMA',0,4,186,3,3
	.word	32015
	.byte	16,48
	.word	28573
	.byte	17,5,0,13
	.word	32042
	.byte	9
	.byte	'_Ifx_SRC_GDSADC',0,4,189,3,25,48,12
	.byte	'DSADC',0
	.word	32051
	.byte	48,2,35,0,0,13
	.word	32056
	.byte	32
	.byte	'Ifx_SRC_GDSADC',0,4,192,3,3
	.word	32094
	.byte	16,4
	.word	28649
	.byte	17,0,0,13
	.word	32123
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,4,195,3,25,4,12
	.byte	'EMEM',0
	.word	32132
	.byte	4,2,35,0,0,13
	.word	32137
	.byte	32
	.byte	'Ifx_SRC_GEMEM',0,4,198,3,3
	.word	32173
	.byte	16,80
	.word	28718
	.byte	17,0,0,13
	.word	32201
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,4,201,3,25,80,12
	.byte	'ERAY',0
	.word	32210
	.byte	80,2,35,0,0,13
	.word	32215
	.byte	32
	.byte	'Ifx_SRC_GERAY',0,4,204,3,3
	.word	32251
	.byte	16,4
	.word	28872
	.byte	17,0,0,13
	.word	32279
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,4,207,3,25,4,12
	.byte	'ETH',0
	.word	32288
	.byte	4,2,35,0,0,13
	.word	32293
	.byte	32
	.byte	'Ifx_SRC_GETH',0,4,210,3,3
	.word	32327
	.byte	16,4
	.word	28930
	.byte	17,0,0,13
	.word	32354
	.byte	9
	.byte	'_Ifx_SRC_GFCE',0,4,213,3,25,4,12
	.byte	'FCE',0
	.word	32363
	.byte	4,2,35,0,0,13
	.word	32368
	.byte	32
	.byte	'Ifx_SRC_GFCE',0,4,216,3,3
	.word	32402
	.byte	16,96
	.word	28997
	.byte	17,2,0,13
	.word	32429
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,4,219,3,25,96,12
	.byte	'GPSR',0
	.word	32438
	.byte	96,2,35,0,0,13
	.word	32443
	.byte	32
	.byte	'Ifx_SRC_GGPSR',0,4,222,3,3
	.word	32479
	.byte	16,48
	.word	29118
	.byte	17,0,0,13
	.word	32507
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,4,225,3,25,48,12
	.byte	'GPT12',0
	.word	32516
	.byte	48,2,35,0,0,13
	.word	32521
	.byte	32
	.byte	'Ifx_SRC_GGPT12',0,4,228,3,3
	.word	32559
	.byte	16,208,18
	.word	29396
	.byte	17,0,0,13
	.word	32588
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,4,231,3,25,208,18,12
	.byte	'GTM',0
	.word	32598
	.byte	208,18,2,35,0,0,13
	.word	32603
	.byte	32
	.byte	'Ifx_SRC_GGTM',0,4,234,3,3
	.word	32639
	.byte	16,4
	.word	29884
	.byte	17,0,0,13
	.word	32666
	.byte	9
	.byte	'_Ifx_SRC_GHSCT',0,4,237,3,25,4,12
	.byte	'HSCT',0
	.word	32675
	.byte	4,2,35,0,0,13
	.word	32680
	.byte	32
	.byte	'Ifx_SRC_GHSCT',0,4,240,3,3
	.word	32716
	.byte	16,8
	.word	29944
	.byte	17,0,0,13
	.word	32744
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,4,243,3,25,8,12
	.byte	'HSM',0
	.word	32753
	.byte	8,2,35,0,0,13
	.word	32758
	.byte	32
	.byte	'Ifx_SRC_GHSM',0,4,246,3,3
	.word	32792
	.byte	16,64
	.word	30003
	.byte	17,3,0,13
	.word	32819
	.byte	9
	.byte	'_Ifx_SRC_GHSSL',0,4,249,3,25,68,12
	.byte	'HSSL',0
	.word	32828
	.byte	64,2,35,0,12
	.byte	'EXI',0
	.word	634
	.byte	4,2,35,64,0,13
	.word	32833
	.byte	32
	.byte	'Ifx_SRC_GHSSL',0,4,253,3,3
	.word	32882
	.byte	16,80
	.word	30112
	.byte	17,0,0,13
	.word	32910
	.byte	9
	.byte	'_Ifx_SRC_GI2C',0,4,128,4,25,80,12
	.byte	'I2C',0
	.word	32919
	.byte	80,2,35,0,0,13
	.word	32924
	.byte	32
	.byte	'Ifx_SRC_GI2C',0,4,131,4,3
	.word	32958
	.byte	16,4
	.word	30261
	.byte	17,0,0,13
	.word	32985
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,4,134,4,25,4,12
	.byte	'LMU',0
	.word	32994
	.byte	4,2,35,0,0,13
	.word	32999
	.byte	32
	.byte	'Ifx_SRC_GLMU',0,4,137,4,3
	.word	33033
	.byte	16,40
	.word	30319
	.byte	17,1,0,13
	.word	33060
	.byte	9
	.byte	'_Ifx_SRC_GMSC',0,4,140,4,25,40,12
	.byte	'MSC',0
	.word	33069
	.byte	40,2,35,0,0,13
	.word	33074
	.byte	32
	.byte	'Ifx_SRC_GMSC',0,4,143,4,3
	.word	33108
	.byte	16,8
	.word	30430
	.byte	17,1,0,13
	.word	33135
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,4,146,4,25,8,12
	.byte	'PMU',0
	.word	33144
	.byte	8,2,35,0,0,13
	.word	33149
	.byte	32
	.byte	'Ifx_SRC_GPMU',0,4,149,4,3
	.word	33183
	.byte	16,32
	.word	30488
	.byte	17,0,0,13
	.word	33210
	.byte	9
	.byte	'_Ifx_SRC_GPSI5',0,4,152,4,25,32,12
	.byte	'PSI5',0
	.word	33219
	.byte	32,2,35,0,0,13
	.word	33224
	.byte	32
	.byte	'Ifx_SRC_GPSI5',0,4,155,4,3
	.word	33260
	.byte	16,32
	.word	30548
	.byte	17,0,0,13
	.word	33288
	.byte	9
	.byte	'_Ifx_SRC_GPSI5S',0,4,158,4,25,32,12
	.byte	'PSI5S',0
	.word	33297
	.byte	32,2,35,0,0,13
	.word	33302
	.byte	32
	.byte	'Ifx_SRC_GPSI5S',0,4,161,4,3
	.word	33340
	.byte	16,96
	.word	30610
	.byte	17,3,0,13
	.word	33369
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,4,164,4,25,96,12
	.byte	'QSPI',0
	.word	33378
	.byte	96,2,35,0,0,13
	.word	33383
	.byte	32
	.byte	'Ifx_SRC_GQSPI',0,4,167,4,3
	.word	33419
	.byte	13
	.word	30739
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,4,170,4,25,20,12
	.byte	'SCU',0
	.word	33447
	.byte	20,2,35,0,0,13
	.word	33452
	.byte	32
	.byte	'Ifx_SRC_GSCU',0,4,173,4,3
	.word	33486
	.byte	16,40
	.word	30820
	.byte	17,0,0,13
	.word	33513
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,4,176,4,25,40,12
	.byte	'SENT',0
	.word	33522
	.byte	40,2,35,0,0,13
	.word	33527
	.byte	32
	.byte	'Ifx_SRC_GSENT',0,4,179,4,3
	.word	33563
	.byte	16,12
	.word	30880
	.byte	17,0,0,13
	.word	33591
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,4,182,4,25,12,12
	.byte	'SMU',0
	.word	33600
	.byte	12,2,35,0,0,13
	.word	33605
	.byte	32
	.byte	'Ifx_SRC_GSMU',0,4,185,4,3
	.word	33639
	.byte	16,24
	.word	30938
	.byte	17,2,0,13
	.word	33666
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,4,188,4,25,24,12
	.byte	'STM',0
	.word	33675
	.byte	24,2,35,0,0,13
	.word	33680
	.byte	32
	.byte	'Ifx_SRC_GSTM',0,4,191,4,3
	.word	33714
	.byte	16,128,1
	.word	31114
	.byte	17,7,0,13
	.word	33741
	.byte	16,160,1
	.word	327
	.byte	17,159,1,0,16,32
	.word	31010
	.byte	17,1,0,13
	.word	33767
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,4,194,4,25,192,2,12
	.byte	'G',0
	.word	33751
	.byte	128,1,2,35,0,12
	.byte	'reserved_80',0
	.word	33756
	.byte	160,1,3,35,128,1,12
	.byte	'CG',0
	.word	33776
	.byte	32,3,35,160,2,0,13
	.word	33781
	.byte	32
	.byte	'Ifx_SRC_GVADC',0,4,199,4,3
	.word	33852
	.byte	13
	.word	31216
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,4,202,4,25,4,12
	.byte	'XBAR',0
	.word	33880
	.byte	4,2,35,0,0,13
	.word	33885
	.byte	32
	.byte	'Ifx_SRC_GXBAR',0,4,205,4,3
	.word	33921
	.byte	14,19,131,11,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,32
	.byte	'IfxScu_CCUCON0_CLKSEL',0,19,135,11,3
	.word	33949
	.byte	14,19,145,11,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,19,150,11,3
	.word	34046
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,10
	.byte	'EN0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	34168
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	34725
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	304
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	34802
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,10
	.byte	'BAUD1DIV',0,1
	.word	327
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	327
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	327
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	327
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	327
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	327
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	327
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	327
	.byte	2,6,2,35,3,10
	.byte	'ADCCLKSEL',0,1
	.word	327
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	327
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	34938
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,10
	.byte	'CANDIV',0,1
	.word	327
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	327
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	327
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	327
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	327
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	327
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	327
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	327
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	35216
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	327
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	35454
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	327
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	327
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	327
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	327
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,150,1,3
	.word	35582
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,153,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	327
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	327
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	327
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	327
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,165,1,3
	.word	35825
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,168,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	327
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,174,1,3
	.word	36060
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,177,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	304
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,181,1,3
	.word	36188
	.byte	9
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,184,1,16,4,10
	.byte	'CPU1DIV',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	304
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,188,1,3
	.word	36288
	.byte	9
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,6,191,1,16,4,10
	.byte	'CPU2DIV',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	304
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8_Bits',0,6,195,1,3
	.word	36388
	.byte	9
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,6,198,1,16,4,10
	.byte	'ADCDIV',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'ADCSEL',0,1
	.word	327
	.byte	2,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	304
	.byte	21,3,2,35,0,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON9_Bits',0,6,206,1,3
	.word	36488
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,209,1,16,4,10
	.byte	'CHREV',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	327
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	327
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	327
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	327
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,220,1,3
	.word	36650
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,223,1,16,4,10
	.byte	'PWD',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	304
	.byte	20,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,231,1,3
	.word	36858
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,234,1,16,4,10
	.byte	'LOWER',0,2
	.word	726
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	327
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	726
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	327
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,243,1,3
	.word	37023
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,246,1,16,4,10
	.byte	'RESULT',0,2
	.word	726
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	327
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,253,1,3
	.word	37206
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,6,128,2,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	327
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	327
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	304
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	327
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	327
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,6,147,2,3
	.word	37360
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,150,2,16,4,10
	.byte	'INTF0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	304
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,6,161,2,3
	.word	37724
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,164,2,16,4,10
	.byte	'POL',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	726
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	327
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	327
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	327
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	327
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,6,177,2,3
	.word	37935
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,180,2,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	726
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	304
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,185,2,3
	.word	38187
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,188,2,16,4,10
	.byte	'ARI',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,193,2,3
	.word	38305
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,196,2,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,203,2,3
	.word	38416
	.byte	9
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,6,206,2,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	28,4,2,35,0,10
	.byte	'EVR33OFF',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'BPEVR33OFF',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR33CON_Bits',0,6,213,2,3
	.word	38579
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,216,2,16,4,10
	.byte	'ADC13V',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'ADC33V',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,223,2,3
	.word	38742
	.byte	9
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,6,226,2,16,4,10
	.byte	'DVS13TRIM',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'DVS33TRIM',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,6,233,2,3
	.word	38900
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,236,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	327
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	327
	.byte	2,0,2,35,0,10
	.byte	'EVR33OVMOD',0,1
	.word	327
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	327
	.byte	2,4,2,35,1,10
	.byte	'EVR33UVMOD',0,1
	.word	327
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'SWDOVMOD',0,1
	.word	327
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	327
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	327
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	726
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,252,2,3
	.word	39065
	.byte	9
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,6,255,2,16,4,10
	.byte	'OSCTRIM',0,2
	.word	726
	.byte	10,6,2,35,0,10
	.byte	'OSCPTAT',0,1
	.word	327
	.byte	6,0,2,35,1,10
	.byte	'OSCANASEL',0,1
	.word	327
	.byte	4,4,2,35,2,10
	.byte	'HPBGTRIM',0,2
	.word	726
	.byte	7,5,2,35,2,10
	.byte	'HPBGCLKEN',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'OSC3V3',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	327
	.byte	2,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,6,137,3,3
	.word	39433
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,140,3,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'EVR33OVVAL',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,148,3,3
	.word	39654
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,151,3,16,4,10
	.byte	'RST13TRIM',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	304
	.byte	16,8,2,35,0,10
	.byte	'RST13OFF',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'BPRST13OFF',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'RST33OFF',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'BPRST33OFF',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'RSTSWDOFF',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,163,3,3
	.word	39833
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,6,166,3,16,4,10
	.byte	'SD5P',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'SD5I',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'SD5D',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,6,173,3,3
	.word	40098
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,176,3,16,4,10
	.byte	'SD33P',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'SD33D',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,183,3,3
	.word	40251
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,6,186,3,16,4,10
	.byte	'CT5REG0',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'CT5REG1',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'CT5REG2',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,6,193,3,3
	.word	40407
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,6,196,3,16,4,10
	.byte	'CT5REG3',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'CT5REG4',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,6,202,3,3
	.word	40569
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,6,205,3,16,4,10
	.byte	'CT33REG0',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'CT33REG1',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'CT33REG2',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,6,212,3,3
	.word	40712
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,6,215,3,16,4,10
	.byte	'CT33REG3',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'CT33REG4',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,6,221,3,3
	.word	40877
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,224,3,16,4,10
	.byte	'SDFREQSPRD',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'SDFREQ',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	327
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	327
	.byte	2,2,2,35,3,10
	.byte	'SDSAMPLE',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,232,3,3
	.word	41022
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,235,3,16,4,10
	.byte	'DRVP',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'SDMINMAXDC',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'DRVN',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	327
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,243,3,3
	.word	41203
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,246,3,16,4,10
	.byte	'SDPWMPRE',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'SDPID',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,253,3,3
	.word	41377
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,6,128,4,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'SYNCDIV',0,1
	.word	327
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	304
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,6,134,4,3
	.word	41537
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,137,4,16,4,10
	.byte	'EVR13',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'EVR33',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'OV33',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'UV33',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'EXTPASS13',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'EXTPASS33',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	304
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,151,4,3
	.word	41681
	.byte	9
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,6,154,4,16,4,10
	.byte	'EVR13TRIM',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'SDVOUTSEL',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	14,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,6,161,4,3
	.word	41955
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,164,4,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'EVR33UVVAL',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	327
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,172,4,3
	.word	42110
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,175,4,16,4,10
	.byte	'EN0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	327
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	726
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	327
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	327
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	327
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,186,4,3
	.word	42289
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,6,189,4,16,4,10
	.byte	'STEP',0,2
	.word	726
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	327
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	726
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	327
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,6,197,4,3
	.word	42507
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,6,200,4,16,4,10
	.byte	'FS0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,6,220,4,3
	.word	42670
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,6,223,4,16,4,10
	.byte	'MODREV',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,6,228,4,3
	.word	43006
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,231,4,16,4,10
	.byte	'IPEN00',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	327
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,6,255,4,3
	.word	43113
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,6,130,5,16,4,10
	.byte	'P0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,6,135,5,3
	.word	43565
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,138,5,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	327
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	327
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,6,145,5,3
	.word	43664
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,148,5,16,4,10
	.byte	'LBISTREQ',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	726
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,154,5,3
	.word	43814
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,157,5,16,4,10
	.byte	'SEED',0,4
	.word	304
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	327
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	327
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,164,5,3
	.word	43963
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,167,5,16,4,10
	.byte	'SIGNATURE',0,4
	.word	304
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,172,5,3
	.word	44124
	.byte	9
	.byte	'_Ifx_SCU_LCLCON_Bits',0,6,175,5,16,4,10
	.byte	'reserved_0',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	726
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON_Bits',0,6,181,5,3
	.word	44254
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,184,5,16,4,10
	.byte	'LCLT0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,189,5,3
	.word	44386
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,6,192,5,16,4,10
	.byte	'DEPT',0,1
	.word	327
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	726
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,6,197,5,3
	.word	44501
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,6,200,5,16,4,10
	.byte	'PS0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	726
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	726
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,6,208,5,3
	.word	44612
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,211,5,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	327
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	327
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	327
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	327
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	327
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'CAP0EN',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'CAP1EN',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'CAP2EN',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'CAP3EN',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	327
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,232,5,3
	.word	44770
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,6,235,5,16,4,10
	.byte	'P0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,6,240,5,3
	.word	45182
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,243,5,16,4,10
	.byte	'CSEL0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	726
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	327
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	327
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,128,6,3
	.word	45283
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,131,6,16,4,10
	.byte	'OVEN0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	304
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,137,6,3
	.word	45550
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,140,6,16,4,10
	.byte	'PDIS0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,6,145,6,3
	.word	45686
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,6,148,6,16,4,10
	.byte	'PD0',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	327
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	304
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,6,155,6,3
	.word	45797
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,158,6,16,4,10
	.byte	'PDR0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	304
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,6,169,6,3
	.word	45930
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,172,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	726
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	327
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	327
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	327
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	327
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,189,6,3
	.word	46133
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,192,6,16,4,10
	.byte	'K2DIV',0,1
	.word	327
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	327
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	327
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	726
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,200,6,3
	.word	46489
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,203,6,16,4,10
	.byte	'MODCFG',0,2
	.word	726
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,207,6,3
	.word	46667
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,210,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	726
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	327
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	327
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	327
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	327
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,227,6,3
	.word	46767
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,230,6,16,4,10
	.byte	'K2DIV',0,1
	.word	327
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	327
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	327
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	327
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	726
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,238,6,3
	.word	47137
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,241,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	304
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,250,6,3
	.word	47323
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,253,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	304
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,136,7,3
	.word	47521
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,139,7,16,4,10
	.byte	'REQSLP',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	327
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	327
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	304
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,146,7,3
	.word	47754
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,149,7,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	327
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	327
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	327
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	327
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	327
	.byte	2,3,2,35,2,10
	.byte	'TRISTEN',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'TRISTREQ',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'BLNKFIL',0,1
	.word	327
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,175,7,3
	.word	47906
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,178,7,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'CPUIDLSEL',0,1
	.word	327
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'IRADIS',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	304
	.byte	11,8,2,35,0,10
	.byte	'CPUSEL',0,1
	.word	327
	.byte	3,5,2,35,3,10
	.byte	'STBYEVEN',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	327
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,189,7,3
	.word	48454
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,192,7,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'PWRWKP',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	327
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	327
	.byte	2,1,2,35,1,10
	.byte	'TRIST',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	327
	.byte	4,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'BLNKFIL',0,1
	.word	327
	.byte	3,5,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	327
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,214,7,3
	.word	48699
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,217,7,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'PWRWKPCLR',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	304
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,228,7,3
	.word	49160
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,231,7,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	726
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,241,7,3
	.word	49430
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,244,7,16,4,10
	.byte	'ESR0',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	327
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	327
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	327
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	327
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	327
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	327
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,255,7,3
	.word	49639
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,130,8,16,4,10
	.byte	'ESR0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	327
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	327
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	327
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,153,8,3
	.word	49850
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,156,8,16,4,10
	.byte	'HBT',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	304
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,160,8,3
	.word	50282
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,163,8,16,4,10
	.byte	'HWCFG',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	327
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	327
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	327
	.byte	7,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,176,8,3
	.word	50378
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,179,8,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,184,8,3
	.word	50638
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,187,8,16,4,10
	.byte	'CCTRIG0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	327
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	327
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	304
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,196,8,3
	.word	50763
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,199,8,16,4,10
	.byte	'ESR0T',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,206,8,3
	.word	50960
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,209,8,16,4,10
	.byte	'ESR0T',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,216,8,3
	.word	51113
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,219,8,16,4,10
	.byte	'ESR0T',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,226,8,3
	.word	51266
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,229,8,16,4,10
	.byte	'ESR0T',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,236,8,3
	.word	51419
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,245,8,3
	.word	748
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,132,9,3
	.word	884
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,148,9,3
	.word	1128
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,151,9,16,4,10
	.byte	'ENDINIT',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	726
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,157,9,3
	.word	51674
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,160,9,16,4,10
	.byte	'CLRIRF',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	327
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,173,9,3
	.word	51800
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,176,9,16,4,10
	.byte	'AE',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	327
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,189,9,3
	.word	52052
	.byte	11,6,197,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34168
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN0',0,6,205,9,3
	.word	52271
	.byte	11,6,208,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34725
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1',0,6,216,9,3
	.word	52335
	.byte	11,6,219,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34802
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,6,227,9,3
	.word	52399
	.byte	11,6,230,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34938
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,6,238,9,3
	.word	52464
	.byte	11,6,241,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35216
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,6,249,9,3
	.word	52529
	.byte	11,6,252,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35454
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,6,132,10,3
	.word	52594
	.byte	11,6,135,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35582
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,6,143,10,3
	.word	52659
	.byte	11,6,146,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35825
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,6,154,10,3
	.word	52724
	.byte	11,6,157,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36060
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,6,165,10,3
	.word	52789
	.byte	11,6,168,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36188
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,6,176,10,3
	.word	52854
	.byte	11,6,179,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36288
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,6,187,10,3
	.word	52919
	.byte	11,6,190,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36388
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8',0,6,198,10,3
	.word	52984
	.byte	11,6,201,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36488
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON9',0,6,209,10,3
	.word	53049
	.byte	11,6,212,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36650
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,6,220,10,3
	.word	53114
	.byte	11,6,223,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36858
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCON',0,6,231,10,3
	.word	53178
	.byte	11,6,234,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37023
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSLIM',0,6,242,10,3
	.word	53242
	.byte	11,6,245,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37206
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSSTAT',0,6,253,10,3
	.word	53306
	.byte	11,6,128,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37360
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,6,136,11,3
	.word	53371
	.byte	11,6,139,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37724
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,6,147,11,3
	.word	53433
	.byte	11,6,150,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37935
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,6,158,11,3
	.word	53495
	.byte	11,6,161,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38187
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG',0,6,169,11,3
	.word	53557
	.byte	11,6,172,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38305
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,6,180,11,3
	.word	53621
	.byte	11,6,183,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38416
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR13CON',0,6,191,11,3
	.word	53686
	.byte	11,6,194,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38579
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR33CON',0,6,202,11,3
	.word	53752
	.byte	11,6,205,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38742
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,213,11,3
	.word	53818
	.byte	11,6,216,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38900
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRDVSTAT',0,6,224,11,3
	.word	53886
	.byte	11,6,227,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39065
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,235,11,3
	.word	53953
	.byte	11,6,238,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39433
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROSCCTRL',0,6,246,11,3
	.word	54021
	.byte	11,6,249,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39654
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROVMON',0,6,129,12,3
	.word	54089
	.byte	11,6,132,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39833
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRRSTCON',0,6,140,12,3
	.word	54155
	.byte	11,6,143,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40098
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,6,151,12,3
	.word	54222
	.byte	11,6,154,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40251
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,162,12,3
	.word	54291
	.byte	11,6,165,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40407
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,6,173,12,3
	.word	54360
	.byte	11,6,176,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40569
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,6,184,12,3
	.word	54429
	.byte	11,6,187,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40712
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,6,195,12,3
	.word	54498
	.byte	11,6,198,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40877
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,6,206,12,3
	.word	54567
	.byte	11,6,209,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41022
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,217,12,3
	.word	54636
	.byte	11,6,220,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41203
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,228,12,3
	.word	54704
	.byte	11,6,231,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41377
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,239,12,3
	.word	54772
	.byte	11,6,242,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41537
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4',0,6,250,12,3
	.word	54840
	.byte	11,6,253,12,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41681
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT',0,6,133,13,3
	.word	54908
	.byte	11,6,136,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41955
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRTRIM',0,6,144,13,3
	.word	54973
	.byte	11,6,147,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42110
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRUVMON',0,6,155,13,3
	.word	55038
	.byte	11,6,158,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42289
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,6,166,13,3
	.word	55104
	.byte	11,6,169,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42507
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,6,177,13,3
	.word	55168
	.byte	11,6,180,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42670
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,6,188,13,3
	.word	55229
	.byte	11,6,191,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43006
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,6,199,13,3
	.word	55290
	.byte	11,6,202,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43113
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,6,210,13,3
	.word	55350
	.byte	11,6,213,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43565
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,6,221,13,3
	.word	55412
	.byte	11,6,224,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43664
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,6,232,13,3
	.word	55472
	.byte	11,6,235,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43814
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,243,13,3
	.word	55534
	.byte	11,6,246,13,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43963
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,254,13,3
	.word	55602
	.byte	11,6,129,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44124
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,137,14,3
	.word	55670
	.byte	11,6,140,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44254
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON',0,6,148,14,3
	.word	55738
	.byte	11,6,151,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44386
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,6,159,14,3
	.word	55802
	.byte	11,6,162,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44501
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,6,170,14,3
	.word	55867
	.byte	11,6,173,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44612
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,6,181,14,3
	.word	55930
	.byte	11,6,184,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44770
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,6,192,14,3
	.word	55991
	.byte	11,6,195,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45182
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,6,203,14,3
	.word	56055
	.byte	11,6,206,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45283
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,6,214,14,3
	.word	56116
	.byte	11,6,217,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45550
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,6,225,14,3
	.word	56180
	.byte	11,6,228,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45686
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,6,236,14,3
	.word	56247
	.byte	11,6,239,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45797
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,6,247,14,3
	.word	56310
	.byte	11,6,250,14,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45930
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,6,130,15,3
	.word	56371
	.byte	11,6,133,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46133
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON0',0,6,141,15,3
	.word	56433
	.byte	11,6,144,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46489
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON1',0,6,152,15,3
	.word	56498
	.byte	11,6,155,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46667
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON2',0,6,163,15,3
	.word	56563
	.byte	11,6,166,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46767
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,174,15,3
	.word	56628
	.byte	11,6,177,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47137
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,185,15,3
	.word	56697
	.byte	11,6,188,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47323
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,196,15,3
	.word	56766
	.byte	11,6,199,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47521
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT',0,6,207,15,3
	.word	56835
	.byte	11,6,210,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47754
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR',0,6,218,15,3
	.word	56900
	.byte	11,6,221,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47906
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR0',0,6,229,15,3
	.word	56963
	.byte	11,6,232,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48454
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,6,240,15,3
	.word	57028
	.byte	11,6,243,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48699
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTAT',0,6,251,15,3
	.word	57093
	.byte	11,6,254,15,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49160
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,134,16,3
	.word	57159
	.byte	11,6,137,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49639
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,6,145,16,3
	.word	57228
	.byte	11,6,148,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49430
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,6,156,16,3
	.word	57292
	.byte	11,6,159,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49850
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,6,167,16,3
	.word	57357
	.byte	11,6,170,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50282
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON',0,6,178,16,3
	.word	57422
	.byte	11,6,181,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50378
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,6,189,16,3
	.word	57487
	.byte	11,6,192,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50638
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,6,200,16,3
	.word	57551
	.byte	11,6,203,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50763
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,6,211,16,3
	.word	57617
	.byte	11,6,214,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50960
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,6,222,16,3
	.word	57681
	.byte	11,6,225,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51113
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS',0,6,233,16,3
	.word	57746
	.byte	11,6,236,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51266
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,6,244,16,3
	.word	57811
	.byte	11,6,247,16,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51419
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,6,255,16,3
	.word	57876
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,138,17,3
	.word	844
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,149,17,3
	.word	1088
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,160,17,3
	.word	1319
	.byte	11,6,163,17,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51674
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,6,171,17,3
	.word	58027
	.byte	11,6,174,17,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51800
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,6,182,17,3
	.word	58094
	.byte	11,6,185,17,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52052
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,6,193,17,3
	.word	58161
	.byte	13
	.word	1359
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,6,209,17,3
	.word	58226
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,6,212,17,25,12,12
	.byte	'CON0',0
	.word	58027
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	58094
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	58161
	.byte	4,2,35,8,0,13
	.word	58255
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,6,217,17,3
	.word	58316
	.byte	16,8
	.word	53557
	.byte	17,1,0,16,12
	.word	56900
	.byte	17,2,0,13
	.word	58255
	.byte	16,36
	.word	1359
	.byte	17,2,0,13
	.word	58366
	.byte	16,16
	.word	53371
	.byte	17,3,0,16,16
	.word	55350
	.byte	17,3,0,16,180,3
	.word	327
	.byte	17,179,3,0,9
	.byte	'_Ifx_SCU',0,6,230,17,25,128,8,12
	.byte	'reserved_0',0
	.word	4888
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	55290
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3069
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	55991
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	56835
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	56433
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	56498
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	56563
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	56766
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	56628
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	56697
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	52464
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	52529
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	55168
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	55104
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	52594
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	52659
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	52724
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	52789
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	57357
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	3069
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	57228
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	52399
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	57551
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	57292
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	3069
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	54155
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	58343
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	53621
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	57617
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	52854
	.byte	4,3,35,128,1,12
	.byte	'CCUCON7',0
	.word	52919
	.byte	4,3,35,132,1,12
	.byte	'CCUCON8',0
	.word	52984
	.byte	4,3,35,136,1,12
	.byte	'CCUCON9',0
	.word	53049
	.byte	4,3,35,140,1,12
	.byte	'reserved_90',0
	.word	5228
	.byte	12,3,35,144,1,12
	.byte	'PDR',0
	.word	56310
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	55472
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	56055
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	55930
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	55412
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	54908
	.byte	4,3,35,176,1,12
	.byte	'EVRDVSTAT',0
	.word	53886
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	53686
	.byte	4,3,35,184,1,12
	.byte	'EVR33CON',0
	.word	53752
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	57487
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	3069
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	56963
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	57093
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	57159
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	58352
	.byte	12,3,35,212,1,12
	.byte	'DTSSTAT',0
	.word	53306
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	53178
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	57028
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	3069
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	58361
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	53495
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	58375
	.byte	36,3,35,128,2,12
	.byte	'TRAPSTAT',0
	.word	57876
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	57811
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	57681
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	57746
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	55738
	.byte	4,3,35,180,2,12
	.byte	'LCLCON1',0
	.word	55738
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	55802
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	53114
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	55867
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4888
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	57422
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	28988
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	55534
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	55602
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	55670
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	10858
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	56247
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	4888
	.byte	8,3,35,144,3,12
	.byte	'EVRTRIM',0
	.word	54973
	.byte	4,3,35,152,3,12
	.byte	'EVRADCSTAT',0
	.word	53818
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	55038
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	54089
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	53953
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	3069
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	54636
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	54704
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	54772
	.byte	4,3,35,184,3,12
	.byte	'EVRSDCTRL4',0
	.word	54840
	.byte	4,3,35,188,3,12
	.byte	'EVRSDCOEFF1',0
	.word	54222
	.byte	4,3,35,192,3,12
	.byte	'EVRSDCOEFF2',0
	.word	54291
	.byte	4,3,35,196,3,12
	.byte	'EVRSDCOEFF3',0
	.word	54360
	.byte	4,3,35,200,3,12
	.byte	'EVRSDCOEFF4',0
	.word	54429
	.byte	4,3,35,204,3,12
	.byte	'EVRSDCOEFF5',0
	.word	54498
	.byte	4,3,35,208,3,12
	.byte	'EVRSDCOEFF6',0
	.word	54567
	.byte	4,3,35,212,3,12
	.byte	'EVROSCCTRL',0
	.word	54021
	.byte	4,3,35,216,3,12
	.byte	'reserved_1DC',0
	.word	3069
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	56180
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	56116
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	28709
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	58380
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	53433
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	55229
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	56371
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	58389
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	3069
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	53242
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	58398
	.byte	180,3,3,35,196,4,12
	.byte	'ACCEN1',0
	.word	52335
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	52271
	.byte	4,3,35,252,7,0,13
	.word	58409
	.byte	32
	.byte	'Ifx_SCU',0,6,210,18,3
	.word	60389
	.byte	4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_CPU_A_Bits',0,20,45,16,4,10
	.byte	'ADDR',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,20,48,3
	.word	60427
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,20,51,16,4,10
	.byte	'VSS',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	60411
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,20,55,3
	.word	60488
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,20,58,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	60411
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,20,62,3
	.word	60567
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,20,65,16,4,10
	.byte	'CountValue',0,4
	.word	60411
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	60411
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,20,69,3
	.word	60653
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,20,72,16,4,10
	.byte	'CM',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	60411
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	60411
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	60411
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	60411
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,20,80,3
	.word	60742
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,20,83,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	60411
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,20,89,3
	.word	60888
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,20,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	60411
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,20,96,3
	.word	61015
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,20,99,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	60411
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,20,103,3
	.word	61113
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,20,106,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	60411
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,20,110,3
	.word	61206
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,20,113,16,4,10
	.byte	'MOD_REV',0,4
	.word	60411
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	60411
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	60411
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,20,118,3
	.word	61299
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,20,121,16,4,10
	.byte	'XE',0,4
	.word	60411
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	60411
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,20,125,3
	.word	61407
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,20,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	60411
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	60411
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	60411
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,20,136,1,3
	.word	61494
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,20,139,1,16,4,10
	.byte	'CID',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	60411
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,20,143,1,3
	.word	61648
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,20,146,1,16,4,10
	.byte	'DATA',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,20,149,1,3
	.word	61742
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,20,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	60411
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	60411
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	60411
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	60411
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	60411
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	60411
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	60411
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,20,163,1,3
	.word	61805
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,20,166,1,16,4,10
	.byte	'DE',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	60411
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	60411
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	60411
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	60411
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	60411
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	60411
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,20,177,1,3
	.word	62023
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,20,180,1,16,4,10
	.byte	'DTA',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	60411
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,20,184,1,3
	.word	62238
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,20,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	60411
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,20,192,1,3
	.word	62332
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,20,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	60411
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	60411
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,20,199,1,3
	.word	62448
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,20,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	60411
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,20,206,1,3
	.word	62549
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,20,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,20,212,1,3
	.word	62642
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,20,215,1,16,4,10
	.byte	'TA',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,20,218,1,3
	.word	62722
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,20,221,1,16,4,10
	.byte	'IED',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	60411
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	60411
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	60411
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	60411
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	60411
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	60411
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,20,233,1,3
	.word	62791
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,20,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	60411
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,20,240,1,3
	.word	63020
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,20,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	60411
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,20,247,1,3
	.word	63113
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,20,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	60411
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,20,254,1,3
	.word	63208
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,20,129,2,16,4,10
	.byte	'RE',0,4
	.word	60411
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	60411
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,20,133,2,3
	.word	63303
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,20,136,2,16,4,10
	.byte	'WE',0,4
	.word	60411
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	60411
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,20,140,2,3
	.word	63393
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,20,143,2,16,4,10
	.byte	'SRE',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	60411
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	60411
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	60411
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	60411
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	60411
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	60411
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	60411
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	60411
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	60411
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	60411
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	60411
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	60411
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	60411
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	60411
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,20,161,2,3
	.word	63483
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,20,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	60411
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	60411
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	60411
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,20,172,2,3
	.word	63807
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,20,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	60411
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	60411
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	60411
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,20,180,2,3
	.word	63961
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,20,183,2,16,4,10
	.byte	'TST',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	60411
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	60411
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	60411
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	60411
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	60411
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	60411
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	60411
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	60411
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	60411
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	60411
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	60411
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	60411
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	60411
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	60411
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	60411
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,20,202,2,3
	.word	64067
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,205,2,16,4,10
	.byte	'OPC',0,4
	.word	60411
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	60411
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	60411
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	60411
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	60411
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,212,2,3
	.word	64416
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,20,215,2,16,4,10
	.byte	'PC',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,20,218,2,3
	.word	64576
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,224,2,3
	.word	64657
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,230,2,3
	.word	64744
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,236,2,3
	.word	64831
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,20,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	60411
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	60411
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,20,243,2,3
	.word	64918
	.byte	9
	.byte	'_Ifx_CPU_ICR_Bits',0,20,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	60411
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	60411
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	60411
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	60411
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	60411
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICR_Bits',0,20,253,2,3
	.word	65009
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,20,128,3,16,4,10
	.byte	'ISP',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,20,131,3,3
	.word	65152
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,20,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	60411
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	60411
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	60411
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,20,139,3,3
	.word	65218
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,20,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	60411
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	60411
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,20,146,3,3
	.word	65324
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,20,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	60411
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	60411
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,20,153,3,3
	.word	65417
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,20,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	60411
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	60411
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,20,160,3,3
	.word	65510
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,20,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	60411
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,20,167,3,3
	.word	65603
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,20,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	60411
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,20,175,3,3
	.word	65688
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,20,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	60411
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,20,183,3,3
	.word	65804
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,20,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	60411
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	60411
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,20,190,3,3
	.word	65915
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,20,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	60411
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	60411
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	60411
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	60411
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	60411
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,20,200,3,3
	.word	66016
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,20,203,3,16,4,10
	.byte	'TA',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,20,206,3,3
	.word	66146
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,20,209,3,16,4,10
	.byte	'IED',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	60411
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	60411
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	60411
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	60411
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	60411
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	60411
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,20,221,3,3
	.word	66215
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,20,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	60411
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	60411
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,20,229,3,3
	.word	66444
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,20,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	60411
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	60411
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	60411
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,20,237,3,3
	.word	66557
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,20,240,3,16,4,10
	.byte	'PSI',0,4
	.word	60411
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	60411
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,20,244,3,3
	.word	66670
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,20,247,3,16,4,10
	.byte	'FRE',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	60411
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	60411
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	60411
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	60411
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	60411
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	60411
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,20,129,4,3
	.word	66761
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,20,132,4,16,4,10
	.byte	'CDC',0,4
	.word	60411
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	60411
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	60411
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	60411
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	60411
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	60411
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	60411
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	60411
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	60411
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	60411
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	60411
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	60411
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	60411
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,20,147,4,3
	.word	66964
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,20,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	60411
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	60411
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	60411
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	60411
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,20,156,4,3
	.word	67207
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,20,159,4,16,4,10
	.byte	'PC',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	60411
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	60411
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	60411
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	60411
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	60411
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	60411
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	60411
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	60411
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,20,171,4,3
	.word	67335
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,20,174,4,16,4,10
	.byte	'EN',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,20,177,4,3
	.word	67576
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,20,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,20,183,4,3
	.word	67659
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,186,4,16,4,10
	.byte	'EN',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,189,4,3
	.word	67750
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,195,4,3
	.word	67841
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,20,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	304
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,20,202,4,3
	.word	67940
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,20,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	304
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,20,209,4,3
	.word	68047
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,20,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	60411
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	60411
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	60411
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,20,220,4,3
	.word	68154
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,20,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	60411
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	60411
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,20,231,4,3
	.word	68308
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,20,234,4,16,4,10
	.byte	'ASI',0,4
	.word	60411
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	60411
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,20,238,4,3
	.word	68469
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,20,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	60411
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	60411
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	60411
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	60411
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,20,249,4,3
	.word	68567
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,20,252,4,16,4,10
	.byte	'Timer',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,20,255,4,3
	.word	68739
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,20,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	60411
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,20,133,5,3
	.word	68819
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,20,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	60411
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	60411
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	60411
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	60411
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	60411
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	60411
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	60411
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	60411
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	60411
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	60411
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	60411
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	60411
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	60411
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,20,153,5,3
	.word	68892
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,20,156,5,16,4,10
	.byte	'T0',0,4
	.word	60411
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	60411
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	60411
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	60411
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	60411
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	60411
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	60411
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	60411
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	60411
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,20,167,5,3
	.word	69210
	.byte	11,20,175,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60427
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,20,183,5,3
	.word	69405
	.byte	11,20,186,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60488
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,20,194,5,3
	.word	69464
	.byte	11,20,197,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60567
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,20,205,5,3
	.word	69525
	.byte	11,20,208,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60653
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,20,216,5,3
	.word	69586
	.byte	11,20,219,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60742
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,20,227,5,3
	.word	69648
	.byte	11,20,230,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60888
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,20,238,5,3
	.word	69711
	.byte	11,20,241,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61015
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID',0,20,249,5,3
	.word	69775
	.byte	11,20,252,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61113
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,20,132,6,3
	.word	69840
	.byte	11,20,135,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61206
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,20,143,6,3
	.word	69903
	.byte	11,20,146,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61299
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,20,154,6,3
	.word	69966
	.byte	11,20,157,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61407
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,20,165,6,3
	.word	70030
	.byte	11,20,168,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61494
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,20,176,6,3
	.word	70092
	.byte	11,20,179,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61648
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,20,187,6,3
	.word	70155
	.byte	11,20,190,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61742
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,20,198,6,3
	.word	70219
	.byte	11,20,201,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61805
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,20,209,6,3
	.word	70278
	.byte	11,20,212,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62023
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,20,220,6,3
	.word	70340
	.byte	11,20,223,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62238
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,20,231,6,3
	.word	70403
	.byte	11,20,234,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62332
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,20,242,6,3
	.word	70467
	.byte	11,20,245,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62448
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,20,253,6,3
	.word	70530
	.byte	11,20,128,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62549
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,20,136,7,3
	.word	70593
	.byte	11,20,139,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62642
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,20,147,7,3
	.word	70654
	.byte	11,20,150,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62722
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,20,158,7,3
	.word	70717
	.byte	11,20,161,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62791
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,20,169,7,3
	.word	70780
	.byte	11,20,172,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63020
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,20,180,7,3
	.word	70843
	.byte	11,20,183,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63113
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,20,191,7,3
	.word	70904
	.byte	11,20,194,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63208
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,20,202,7,3
	.word	70967
	.byte	11,20,205,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63303
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,20,213,7,3
	.word	71030
	.byte	11,20,216,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63393
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,20,224,7,3
	.word	71092
	.byte	11,20,227,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63483
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,20,235,7,3
	.word	71154
	.byte	11,20,238,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63807
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,20,246,7,3
	.word	71216
	.byte	11,20,249,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63961
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,20,129,8,3
	.word	71279
	.byte	11,20,132,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64067
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,20,140,8,3
	.word	71340
	.byte	11,20,143,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64416
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,20,151,8,3
	.word	71410
	.byte	11,20,154,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64576
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,20,162,8,3
	.word	71480
	.byte	11,20,165,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64657
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,20,173,8,3
	.word	71549
	.byte	11,20,176,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64744
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,20,184,8,3
	.word	71620
	.byte	11,20,187,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64831
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,20,195,8,3
	.word	71691
	.byte	11,20,198,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64918
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,20,206,8,3
	.word	71762
	.byte	11,20,209,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65009
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICR',0,20,217,8,3
	.word	71824
	.byte	11,20,220,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65152
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,20,228,8,3
	.word	71885
	.byte	11,20,231,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65218
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,20,239,8,3
	.word	71946
	.byte	11,20,242,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65324
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,20,250,8,3
	.word	72007
	.byte	11,20,253,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65417
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,20,133,9,3
	.word	72070
	.byte	11,20,136,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65510
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,20,144,9,3
	.word	72133
	.byte	11,20,147,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65603
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,20,155,9,3
	.word	72196
	.byte	11,20,158,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65688
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,20,166,9,3
	.word	72256
	.byte	11,20,169,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65804
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,20,177,9,3
	.word	72319
	.byte	11,20,180,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65915
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,20,188,9,3
	.word	72382
	.byte	11,20,191,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66016
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,20,199,9,3
	.word	72445
	.byte	11,20,202,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66146
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,20,210,9,3
	.word	72507
	.byte	11,20,213,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66215
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,20,221,9,3
	.word	72570
	.byte	11,20,224,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66444
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,20,232,9,3
	.word	72633
	.byte	11,20,235,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66557
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,20,243,9,3
	.word	72695
	.byte	11,20,246,9,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66670
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,20,254,9,3
	.word	72757
	.byte	11,20,129,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66761
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,20,137,10,3
	.word	72819
	.byte	11,20,140,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66964
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,20,148,10,3
	.word	72881
	.byte	11,20,151,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67207
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,20,159,10,3
	.word	72942
	.byte	11,20,162,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67335
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,20,170,10,3
	.word	73005
	.byte	11,20,173,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67576
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA',0,20,181,10,3
	.word	73069
	.byte	11,20,184,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67659
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB',0,20,192,10,3
	.word	73139
	.byte	11,20,195,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67750
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,20,203,10,3
	.word	73209
	.byte	11,20,206,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67841
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,20,214,10,3
	.word	73283
	.byte	11,20,217,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67940
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,20,225,10,3
	.word	73357
	.byte	11,20,228,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68047
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,20,236,10,3
	.word	73427
	.byte	11,20,239,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68154
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,20,247,10,3
	.word	73497
	.byte	11,20,250,10,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68308
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,20,130,11,3
	.word	73560
	.byte	11,20,133,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68469
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,20,141,11,3
	.word	73624
	.byte	11,20,144,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68567
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,20,152,11,3
	.word	73690
	.byte	11,20,155,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68739
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,20,163,11,3
	.word	73755
	.byte	11,20,166,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68819
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,20,174,11,3
	.word	73822
	.byte	11,20,177,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68892
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,20,185,11,3
	.word	73886
	.byte	11,20,188,11,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69210
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,20,196,11,3
	.word	73950
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,20,207,11,25,8,12
	.byte	'L',0
	.word	69840
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	69903
	.byte	4,2,35,4,0,13
	.word	74016
	.byte	32
	.byte	'Ifx_CPU_CPR',0,20,211,11,3
	.word	74058
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,20,214,11,25,8,12
	.byte	'L',0
	.word	70904
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	70967
	.byte	4,2,35,4,0,13
	.word	74084
	.byte	32
	.byte	'Ifx_CPU_DPR',0,20,218,11,3
	.word	74126
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,20,221,11,25,16,12
	.byte	'LA',0
	.word	73357
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	73427
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	73209
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	73283
	.byte	4,2,35,12,0,13
	.word	74152
	.byte	32
	.byte	'Ifx_CPU_SPROT_RGN',0,20,227,11,3
	.word	74234
	.byte	16,12
	.word	73755
	.byte	17,2,0,9
	.byte	'_Ifx_CPU_TPS',0,20,230,11,25,16,12
	.byte	'CON',0
	.word	73690
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	74266
	.byte	12,2,35,4,0,13
	.word	74275
	.byte	32
	.byte	'Ifx_CPU_TPS',0,20,234,11,3
	.word	74323
	.byte	9
	.byte	'_Ifx_CPU_TR',0,20,237,11,25,8,12
	.byte	'EVT',0
	.word	73886
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	73822
	.byte	4,2,35,4,0,13
	.word	74349
	.byte	32
	.byte	'Ifx_CPU_TR',0,20,241,11,3
	.word	74394
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,8,89,3
	.word	1657
	.byte	14,7,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,7,122,3
	.word	74446
	.byte	18,7,132,1,9,6,12
	.byte	'counter',0
	.word	1834
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	327
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,7,136,1,3
	.word	74533
	.byte	18,7,144,1,9,32,12
	.byte	'instruction',0
	.word	74533
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	74533
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	74533
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	74533
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	74533
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,7,151,1,3
	.word	74599
	.byte	9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,21,45,16,4,10
	.byte	'EN0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_STM_ACCEN0_Bits',0,21,79,3
	.word	74717
	.byte	9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,21,82,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1_Bits',0,21,85,3
	.word	75274
	.byte	9
	.byte	'_Ifx_STM_CAP_Bits',0,21,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAP_Bits',0,21,91,3
	.word	75351
	.byte	9
	.byte	'_Ifx_STM_CAPSV_Bits',0,21,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV_Bits',0,21,97,3
	.word	75423
	.byte	9
	.byte	'_Ifx_STM_CLC_Bits',0,21,100,16,4,10
	.byte	'DISR',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_CLC_Bits',0,21,107,3
	.word	75499
	.byte	9
	.byte	'_Ifx_STM_CMCON_Bits',0,21,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	327
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	327
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	327
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	327
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	327
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	327
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	327
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	327
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_STM_CMCON_Bits',0,21,120,3
	.word	75640
	.byte	9
	.byte	'_Ifx_STM_CMP_Bits',0,21,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CMP_Bits',0,21,126,3
	.word	75858
	.byte	9
	.byte	'_Ifx_STM_ICR_Bits',0,21,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	304
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_STM_ICR_Bits',0,21,139,1,3
	.word	75925
	.byte	9
	.byte	'_Ifx_STM_ID_Bits',0,21,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_STM_ID_Bits',0,21,147,1,3
	.word	76128
	.byte	9
	.byte	'_Ifx_STM_ISCR_Bits',0,21,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_ISCR_Bits',0,21,157,1,3
	.word	76235
	.byte	9
	.byte	'_Ifx_STM_KRST0_Bits',0,21,160,1,16,4,10
	.byte	'RST',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST0_Bits',0,21,165,1,3
	.word	76386
	.byte	9
	.byte	'_Ifx_STM_KRST1_Bits',0,21,168,1,16,4,10
	.byte	'RST',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	304
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST1_Bits',0,21,172,1,3
	.word	76497
	.byte	9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,21,175,1,16,4,10
	.byte	'CLR',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	304
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,21,179,1,3
	.word	76589
	.byte	9
	.byte	'_Ifx_STM_OCS_Bits',0,21,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	327
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	327
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_STM_OCS_Bits',0,21,189,1,3
	.word	76685
	.byte	9
	.byte	'_Ifx_STM_TIM0_Bits',0,21,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0_Bits',0,21,195,1,3
	.word	76831
	.byte	9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,21,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV_Bits',0,21,201,1,3
	.word	76903
	.byte	9
	.byte	'_Ifx_STM_TIM1_Bits',0,21,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM1_Bits',0,21,207,1,3
	.word	76979
	.byte	9
	.byte	'_Ifx_STM_TIM2_Bits',0,21,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM2_Bits',0,21,213,1,3
	.word	77051
	.byte	9
	.byte	'_Ifx_STM_TIM3_Bits',0,21,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM3_Bits',0,21,219,1,3
	.word	77123
	.byte	9
	.byte	'_Ifx_STM_TIM4_Bits',0,21,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM4_Bits',0,21,225,1,3
	.word	77196
	.byte	9
	.byte	'_Ifx_STM_TIM5_Bits',0,21,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM5_Bits',0,21,231,1,3
	.word	77269
	.byte	9
	.byte	'_Ifx_STM_TIM6_Bits',0,21,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM6_Bits',0,21,237,1,3
	.word	77342
	.byte	11,21,245,1,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74717
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN0',0,21,253,1,3
	.word	77415
	.byte	11,21,128,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75274
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1',0,21,136,2,3
	.word	77479
	.byte	11,21,139,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75351
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAP',0,21,147,2,3
	.word	77543
	.byte	11,21,150,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75423
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV',0,21,158,2,3
	.word	77604
	.byte	11,21,161,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75499
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CLC',0,21,169,2,3
	.word	77667
	.byte	11,21,172,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75640
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMCON',0,21,180,2,3
	.word	77728
	.byte	11,21,183,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75858
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMP',0,21,191,2,3
	.word	77791
	.byte	11,21,194,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75925
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ICR',0,21,202,2,3
	.word	77852
	.byte	11,21,205,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76128
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ID',0,21,213,2,3
	.word	77913
	.byte	11,21,216,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76235
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ISCR',0,21,224,2,3
	.word	77973
	.byte	11,21,227,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76386
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST0',0,21,235,2,3
	.word	78035
	.byte	11,21,238,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76497
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST1',0,21,246,2,3
	.word	78098
	.byte	11,21,249,2,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76589
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR',0,21,129,3,3
	.word	78161
	.byte	11,21,132,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76685
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_OCS',0,21,140,3,3
	.word	78226
	.byte	11,21,143,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76831
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0',0,21,151,3,3
	.word	78287
	.byte	11,21,154,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76903
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV',0,21,162,3,3
	.word	78349
	.byte	11,21,165,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76979
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM1',0,21,173,3,3
	.word	78413
	.byte	11,21,176,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77051
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM2',0,21,184,3,3
	.word	78475
	.byte	11,21,187,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77123
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM3',0,21,195,3,3
	.word	78537
	.byte	11,21,198,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77196
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM4',0,21,206,3,3
	.word	78599
	.byte	11,21,209,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77269
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM5',0,21,217,3,3
	.word	78661
	.byte	11,21,220,3,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77342
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM6',0,21,228,3,3
	.word	78723
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,22,45,16,4,10
	.byte	'EN0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,22,79,3
	.word	78785
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,22,82,16,4,10
	.byte	'reserved_0',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,22,85,3
	.word	79346
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,22,88,16,4,10
	.byte	'SEL',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	327
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	304
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,22,95,3
	.word	79427
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,22,98,16,4,10
	.byte	'VLD0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	304
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,22,111,3
	.word	79580
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,22,114,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	304
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	327
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,22,121,3
	.word	79828
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,22,124,16,4,10
	.byte	'STATUS',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	304
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0_Bits',0,22,128,1,3
	.word	79974
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,22,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM1_Bits',0,22,136,1,3
	.word	80072
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,22,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM2_Bits',0,22,144,1,3
	.word	80188
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,22,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	304
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	726
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRD_Bits',0,22,153,1,3
	.word	80304
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,22,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	304
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	726
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRP_Bits',0,22,162,1,3
	.word	80444
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,22,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	304
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	726
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCW_Bits',0,22,171,1,3
	.word	80584
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,22,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	327
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	327
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	726
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	327
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	327
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	327
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	327
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FCON_Bits',0,22,193,1,3
	.word	80723
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,22,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	327
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	327
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	327
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FPRO_Bits',0,22,218,1,3
	.word	81085
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,22,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'P1BUSY',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	726
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	327
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	327
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FSR_Bits',0,22,254,1,3
	.word	81526
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,22,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	304
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	327
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,22,137,2,3
	.word	82134
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,22,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	327
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	304
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	327
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	327
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,22,156,2,3
	.word	82314
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,22,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	304
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,22,167,2,3
	.word	82636
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,22,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	304
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,22,174,2,3
	.word	82817
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,22,177,2,16,4,10
	.byte	'STRT',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	327
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	327
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,22,188,2,3
	.word	82917
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,22,191,2,16,4,10
	.byte	'DATA',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,22,194,2,3
	.word	83133
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,22,197,2,16,4,10
	.byte	'DATA',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,22,200,2,3
	.word	83212
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,22,203,2,16,4,10
	.byte	'MOD_REV',0,1
	.word	327
	.byte	8,0,2,35,0,10
	.byte	'MOD_TYPE',0,1
	.word	327
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_ID_Bits',0,22,208,2,3
	.word	83291
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,22,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	726
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARD_Bits',0,22,221,2,3
	.word	83404
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,22,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'SELP1',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	726
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARP_Bits',0,22,233,2,3
	.word	83618
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,22,236,2,16,4,10
	.byte	'L',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	327
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	327
	.byte	4,0,2,35,0,10
	.byte	'OSCCFG',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'MODE',0,1
	.word	327
	.byte	2,5,2,35,1,10
	.byte	'APREN',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'CAP0EN',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'CAP1EN',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'CAP2EN',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'CAP3EN',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	726
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	327
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCOND_Bits',0,22,253,2,3
	.word	83805
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,22,128,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	327
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	304
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,22,134,3,3
	.word	84129
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,22,137,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	726
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,22,145,3,3
	.word	84272
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,148,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	726
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	327
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	327
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	327
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	726
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,165,3,3
	.word	84461
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,22,168,3,16,4,10
	.byte	'S0ROM',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	327
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	327
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,22,200,3,3
	.word	84824
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,22,203,3,16,4,10
	.byte	'S0L',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	327
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONP_Bits',0,22,234,3,3
	.word	85419
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,22,237,3,16,4,10
	.byte	'S0WOP',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	327
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	327
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	327
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	327
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	327
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	327
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	327
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	327
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	327
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	327
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	327
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	327
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	327
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	327
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	327
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	327
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	327
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	327
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	327
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	327
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	327
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,22,140,4,3
	.word	85943
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,22,143,4,16,4,10
	.byte	'TAG',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	304
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,22,147,4,3
	.word	86525
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,22,150,4,16,4,10
	.byte	'TAG',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	304
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,22,154,4,3
	.word	86627
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,22,157,4,16,4,10
	.byte	'TAG',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	304
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,22,161,4,3
	.word	86729
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,22,164,4,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	304
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD_Bits',0,22,168,4,3
	.word	86831
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,22,171,4,16,4,10
	.byte	'STRT',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	327
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	327
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	327
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	327
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	327
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	327
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	726
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_RRCT_Bits',0,22,182,4,3
	.word	86925
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,22,185,4,16,4,10
	.byte	'DATA',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0_Bits',0,22,188,4,3
	.word	87135
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,22,191,4,16,4,10
	.byte	'DATA',0,4
	.word	304
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1_Bits',0,22,194,4,3
	.word	87208
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,22,197,4,16,4,10
	.byte	'SEL',0,1
	.word	327
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	327
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	327
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	327
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	304
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,22,204,4,3
	.word	87281
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,22,207,4,16,4,10
	.byte	'VLD0',0,1
	.word	327
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	304
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,22,211,4,3
	.word	87436
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,22,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	327
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	304
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	327
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	327
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	327
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,22,221,4,3
	.word	87541
	.byte	11,22,229,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78785
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN0',0,22,237,4,3
	.word	87689
	.byte	11,22,240,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79346
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1',0,22,248,4,3
	.word	87755
	.byte	11,22,251,4,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79427
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG',0,22,131,5,3
	.word	87821
	.byte	11,22,134,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79580
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT',0,22,142,5,3
	.word	87889
	.byte	11,22,145,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79828
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_TOP',0,22,153,5,3
	.word	87958
	.byte	11,22,156,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79974
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0',0,22,164,5,3
	.word	88026
	.byte	11,22,167,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80072
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM1',0,22,175,5,3
	.word	88091
	.byte	11,22,178,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80188
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM2',0,22,186,5,3
	.word	88156
	.byte	11,22,189,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80304
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRD',0,22,197,5,3
	.word	88221
	.byte	11,22,200,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80444
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRP',0,22,208,5,3
	.word	88286
	.byte	11,22,211,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80584
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCW',0,22,219,5,3
	.word	88351
	.byte	11,22,222,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80723
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FCON',0,22,230,5,3
	.word	88415
	.byte	11,22,233,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81085
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FPRO',0,22,241,5,3
	.word	88479
	.byte	11,22,244,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81526
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FSR',0,22,252,5,3
	.word	88543
	.byte	11,22,255,5,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82134
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMFCON',0,22,135,6,3
	.word	88606
	.byte	11,22,138,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82314
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMFSR',0,22,146,6,3
	.word	88673
	.byte	11,22,149,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82636
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMMARD',0,22,157,6,3
	.word	88739
	.byte	11,22,160,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82817
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMRRAD',0,22,168,6,3
	.word	88806
	.byte	11,22,171,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82917
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMRRCT',0,22,179,6,3
	.word	88873
	.byte	11,22,182,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83133
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMRRD0',0,22,190,6,3
	.word	88940
	.byte	11,22,193,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83212
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_HSMRRD1',0,22,201,6,3
	.word	89007
	.byte	11,22,204,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83291
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ID',0,22,212,6,3
	.word	89074
	.byte	11,22,215,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83404
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARD',0,22,223,6,3
	.word	89136
	.byte	11,22,226,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83618
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARP',0,22,234,6,3
	.word	89200
	.byte	11,22,237,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83805
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCOND',0,22,245,6,3
	.word	89264
	.byte	11,22,248,6,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84129
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG',0,22,128,7,3
	.word	89331
	.byte	11,22,131,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84272
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSM',0,22,139,7,3
	.word	89400
	.byte	11,22,142,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84461
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,22,150,7,3
	.word	89469
	.byte	11,22,153,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84824
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONOTP',0,22,161,7,3
	.word	89542
	.byte	11,22,164,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85419
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONP',0,22,172,7,3
	.word	89611
	.byte	11,22,175,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85943
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONWOP',0,22,183,7,3
	.word	89678
	.byte	11,22,186,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86525
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0',0,22,194,7,3
	.word	89747
	.byte	11,22,197,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86627
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1',0,22,205,7,3
	.word	89815
	.byte	11,22,208,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86729
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2',0,22,216,7,3
	.word	89883
	.byte	11,22,219,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86831
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD',0,22,227,7,3
	.word	89951
	.byte	11,22,230,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86925
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRCT',0,22,238,7,3
	.word	90015
	.byte	11,22,241,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87135
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0',0,22,249,7,3
	.word	90079
	.byte	11,22,252,7,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87208
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1',0,22,132,8,3
	.word	90143
	.byte	11,22,135,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87281
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG',0,22,143,8,3
	.word	90207
	.byte	11,22,146,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87436
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT',0,22,154,8,3
	.word	90275
	.byte	11,22,157,8,9,4,12
	.byte	'U',0
	.word	304
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	320
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87541
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_TOP',0,22,165,8,3
	.word	90344
	.byte	9
	.byte	'_Ifx_FLASH_CBAB',0,22,176,8,25,12,12
	.byte	'CFG',0
	.word	87821
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	87889
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	87958
	.byte	4,2,35,8,0,13
	.word	90412
	.byte	32
	.byte	'Ifx_FLASH_CBAB',0,22,181,8,3
	.word	90475
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,22,184,8,25,12,12
	.byte	'CFG0',0
	.word	89747
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	89815
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	89883
	.byte	4,2,35,8,0,13
	.word	90504
	.byte	32
	.byte	'Ifx_FLASH_RDB',0,22,189,8,3
	.word	90568
	.byte	9
	.byte	'_Ifx_FLASH_UBAB',0,22,192,8,25,12,12
	.byte	'CFG',0
	.word	90207
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	90275
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	90344
	.byte	4,2,35,8,0,13
	.word	90596
	.byte	32
	.byte	'Ifx_FLASH_UBAB',0,22,197,8,3
	.word	90659
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,10,79,3
	.word	8625
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,10,85,3
	.word	8538
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,10,107,3
	.word	4897
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,10,115,3
	.word	2950
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,10,137,1,3
	.word	3945
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,10,150,1,3
	.word	3078
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,10,163,1,3
	.word	3725
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,10,176,1,3
	.word	3293
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,10,189,1,3
	.word	3508
	.byte	32
	.byte	'Ifx_P_LPCR0_Bits',0,10,197,1,3
	.word	7897
	.byte	32
	.byte	'Ifx_P_LPCR1_Bits',0,10,205,1,3
	.word	8021
	.byte	32
	.byte	'Ifx_P_LPCR1_P21_Bits',0,10,215,1,3
	.word	8105
	.byte	32
	.byte	'Ifx_P_LPCR2_Bits',0,10,229,1,3
	.word	8285
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,10,240,1,3
	.word	6536
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,10,250,1,3
	.word	7060
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,10,133,2,3
	.word	6710
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,10,144,2,3
	.word	6884
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,10,166,2,3
	.word	7549
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,10,203,2,3
	.word	2379
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,10,213,2,3
	.word	5873
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,10,224,2,3
	.word	6361
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,10,235,2,3
	.word	6020
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,10,246,2,3
	.word	6189
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,10,140,3,3
	.word	7216
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,10,162,3,3
	.word	2063
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,10,179,3,3
	.word	5603
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,10,201,3,3
	.word	5237
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,10,222,3,3
	.word	4268
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,10,243,3,3
	.word	4572
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,10,131,4,3
	.word	9152
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,10,142,4,3
	.word	8585
	.byte	32
	.byte	'Ifx_P_ESR',0,10,153,4,3
	.word	5188
	.byte	32
	.byte	'Ifx_P_ID',0,10,164,4,3
	.word	3029
	.byte	32
	.byte	'Ifx_P_IN',0,10,175,4,3
	.word	4219
	.byte	32
	.byte	'Ifx_P_IOCR0',0,10,186,4,3
	.word	3253
	.byte	32
	.byte	'Ifx_P_IOCR12',0,10,197,4,3
	.word	3905
	.byte	32
	.byte	'Ifx_P_IOCR4',0,10,208,4,3
	.word	3468
	.byte	32
	.byte	'Ifx_P_IOCR8',0,10,219,4,3
	.word	3685
	.byte	32
	.byte	'Ifx_P_LPCR0',0,10,230,4,3
	.word	7981
	.byte	32
	.byte	'Ifx_P_LPCR1',0,10,243,4,3
	.word	8230
	.byte	32
	.byte	'Ifx_P_LPCR2',0,10,254,4,3
	.word	8489
	.byte	32
	.byte	'Ifx_P_OMCR',0,10,137,5,3
	.word	7857
	.byte	32
	.byte	'Ifx_P_OMCR0',0,10,148,5,3
	.word	6670
	.byte	32
	.byte	'Ifx_P_OMCR12',0,10,159,5,3
	.word	7176
	.byte	32
	.byte	'Ifx_P_OMCR4',0,10,170,5,3
	.word	6844
	.byte	32
	.byte	'Ifx_P_OMCR8',0,10,181,5,3
	.word	7020
	.byte	32
	.byte	'Ifx_P_OMR',0,10,192,5,3
	.word	2910
	.byte	32
	.byte	'Ifx_P_OMSR',0,10,203,5,3
	.word	7509
	.byte	32
	.byte	'Ifx_P_OMSR0',0,10,214,5,3
	.word	5980
	.byte	32
	.byte	'Ifx_P_OMSR12',0,10,225,5,3
	.word	6496
	.byte	32
	.byte	'Ifx_P_OMSR4',0,10,236,5,3
	.word	6149
	.byte	32
	.byte	'Ifx_P_OMSR8',0,10,247,5,3
	.word	6321
	.byte	32
	.byte	'Ifx_P_OUT',0,10,130,6,3
	.word	2339
	.byte	32
	.byte	'Ifx_P_PCSR',0,10,141,6,3
	.word	5833
	.byte	32
	.byte	'Ifx_P_PDISC',0,10,152,6,3
	.word	5563
	.byte	32
	.byte	'Ifx_P_PDR0',0,10,163,6,3
	.word	4532
	.byte	32
	.byte	'Ifx_P_PDR1',0,10,174,6,3
	.word	4848
	.byte	13
	.word	9192
	.byte	32
	.byte	'Ifx_P',0,10,223,6,3
	.word	92006
	.byte	32
	.byte	'IfxPort_InputMode',0,9,69,3
	.word	9805
	.byte	32
	.byte	'IfxPort_Mode',0,9,96,3
	.word	20606
	.byte	32
	.byte	'IfxPort_OutputIdx',0,9,110,3
	.word	10079
	.byte	32
	.byte	'IfxPort_OutputMode',0,9,118,3
	.word	10010
	.byte	32
	.byte	'IfxPort_PadDriver',0,9,138,1,3
	.word	18813
	.byte	32
	.byte	'IfxPort_State',0,9,158,1,3
	.word	10392
	.byte	32
	.byte	'IfxPort_Pin',0,9,174,1,3
	.word	18713
	.byte	34,1,1,6
	.word	92197
	.byte	32
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,23,129,1,16
	.word	92200
	.byte	18,23,197,5,9,8,12
	.byte	'value',0
	.word	1834
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1834
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,23,201,5,3
	.word	92245
	.byte	18,23,206,5,9,8,12
	.byte	'pDivider',0
	.word	327
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	327
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	327
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	21508
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,23,212,5,3
	.word	92316
	.byte	18,23,216,5,9,12,12
	.byte	'k2Step',0
	.word	327
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	21508
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	92205
	.byte	4,2,35,8,0,32
	.byte	'IfxScuCcu_PllStepsConfig',0,23,221,5,3
	.word	92433
	.byte	6
	.word	92197
	.byte	18,23,229,5,9,56,12
	.byte	'ccucon0',0
	.word	92245
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	92245
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	92245
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	92245
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	92245
	.byte	8,2,35,32,12
	.byte	'ccucon7',0
	.word	92245
	.byte	8,2,35,40,12
	.byte	'ccucon8',0
	.word	92245
	.byte	8,2,35,48,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,23,238,5,3
	.word	92535
	.byte	18,23,242,5,9,8,12
	.byte	'value',0
	.word	1834
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1834
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,23,246,5,3
	.word	92704
	.byte	6
	.word	92433
	.byte	18,23,251,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	327
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	92780
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	92316
	.byte	8,2,35,8,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,23,128,6,3
	.word	92785
	.byte	32
	.byte	'Ifx_DSADC_ACCEN0_Bits',0,12,79,3
	.word	11368
	.byte	32
	.byte	'Ifx_DSADC_ACCPROT_Bits',0,12,98,3
	.word	12565
	.byte	32
	.byte	'Ifx_DSADC_CGCFG_Bits',0,12,116,3
	.word	12872
	.byte	32
	.byte	'Ifx_DSADC_CH_BOUNDSEL_Bits',0,12,123,3
	.word	16249
	.byte	32
	.byte	'Ifx_DSADC_CH_CGSYNC_Bits',0,12,132,1,3
	.word	16862
	.byte	32
	.byte	'Ifx_DSADC_CH_DICFG_Bits',0,12,148,1,3
	.word	15092
	.byte	32
	.byte	'Ifx_DSADC_CH_FCFGA_Bits',0,12,162,1,3
	.word	15751
	.byte	32
	.byte	'Ifx_DSADC_CH_FCFGC_Bits',0,12,175,1,3
	.word	15539
	.byte	32
	.byte	'Ifx_DSADC_CH_FCFGM_Bits',0,12,186,1,3
	.word	15363
	.byte	32
	.byte	'Ifx_DSADC_CH_IWCTR_Bits',0,12,201,1,3
	.word	15984
	.byte	32
	.byte	'Ifx_DSADC_CH_MODCFG_Bits',0,12,223,1,3
	.word	14723
	.byte	32
	.byte	'Ifx_DSADC_CH_OFFM_Bits',0,12,230,1,3
	.word	16477
	.byte	32
	.byte	'Ifx_DSADC_CH_RECTCFG_Bits',0,12,243,1,3
	.word	17004
	.byte	32
	.byte	'Ifx_DSADC_CH_RESA_Bits',0,12,250,1,3
	.word	16589
	.byte	32
	.byte	'Ifx_DSADC_CH_RESM_Bits',0,12,129,2,3
	.word	16365
	.byte	32
	.byte	'Ifx_DSADC_CH_TSTMP_Bits',0,12,139,2,3
	.word	16701
	.byte	32
	.byte	'Ifx_DSADC_CLC_Bits',0,12,149,2,3
	.word	10573
	.byte	32
	.byte	'Ifx_DSADC_EVFLAG_Bits',0,12,168,2,3
	.word	14070
	.byte	32
	.byte	'Ifx_DSADC_EVFLAGCLR_Bits',0,12,187,2,3
	.word	14395
	.byte	32
	.byte	'Ifx_DSADC_GLOBCFG_Bits',0,12,204,2,3
	.word	11948
	.byte	32
	.byte	'Ifx_DSADC_GLOBRC_Bits',0,12,223,2,3
	.word	12240
	.byte	32
	.byte	'Ifx_DSADC_GLOBVCMH0_Bits',0,12,250,2,3
	.word	13183
	.byte	32
	.byte	'Ifx_DSADC_GLOBVCMH1_Bits',0,12,135,3,3
	.word	13695
	.byte	32
	.byte	'Ifx_DSADC_GLOBVCMH2_Bits',0,12,143,3,3
	.word	13933
	.byte	32
	.byte	'Ifx_DSADC_ID_Bits',0,12,151,3,3
	.word	10732
	.byte	32
	.byte	'Ifx_DSADC_KRST0_Bits',0,12,159,3,3
	.word	11243
	.byte	32
	.byte	'Ifx_DSADC_KRST1_Bits',0,12,166,3,3
	.word	11137
	.byte	32
	.byte	'Ifx_DSADC_KRSTCLR_Bits',0,12,173,3,3
	.word	11029
	.byte	32
	.byte	'Ifx_DSADC_OCS_Bits',0,12,183,3,3
	.word	10867
	.byte	32
	.byte	'Ifx_DSADC_ACCEN0',0,12,199,3,3
	.word	11899
	.byte	32
	.byte	'Ifx_DSADC_ACCPROT',0,12,210,3,3
	.word	12832
	.byte	32
	.byte	'Ifx_DSADC_CGCFG',0,12,221,3,3
	.word	13143
	.byte	32
	.byte	'Ifx_DSADC_CH_BOUNDSEL',0,12,232,3,3
	.word	16325
	.byte	32
	.byte	'Ifx_DSADC_CH_CGSYNC',0,12,243,3,3
	.word	16964
	.byte	32
	.byte	'Ifx_DSADC_CH_DICFG',0,12,254,3,3
	.word	15323
	.byte	32
	.byte	'Ifx_DSADC_CH_FCFGA',0,12,137,4,3
	.word	15944
	.byte	32
	.byte	'Ifx_DSADC_CH_FCFGC',0,12,148,4,3
	.word	15711
	.byte	32
	.byte	'Ifx_DSADC_CH_FCFGM',0,12,159,4,3
	.word	15499
	.byte	32
	.byte	'Ifx_DSADC_CH_IWCTR',0,12,170,4,3
	.word	16209
	.byte	32
	.byte	'Ifx_DSADC_CH_MODCFG',0,12,181,4,3
	.word	15052
	.byte	32
	.byte	'Ifx_DSADC_CH_OFFM',0,12,192,4,3
	.word	16549
	.byte	32
	.byte	'Ifx_DSADC_CH_RECTCFG',0,12,203,4,3
	.word	17188
	.byte	32
	.byte	'Ifx_DSADC_CH_RESA',0,12,214,4,3
	.word	16661
	.byte	32
	.byte	'Ifx_DSADC_CH_RESM',0,12,225,4,3
	.word	16437
	.byte	32
	.byte	'Ifx_DSADC_CH_TSTMP',0,12,236,4,3
	.word	16822
	.byte	32
	.byte	'Ifx_DSADC_CLC',0,12,247,4,3
	.word	10692
	.byte	32
	.byte	'Ifx_DSADC_EVFLAG',0,12,130,5,3
	.word	14355
	.byte	32
	.byte	'Ifx_DSADC_EVFLAGCLR',0,12,141,5,3
	.word	14683
	.byte	32
	.byte	'Ifx_DSADC_GLOBCFG',0,12,152,5,3
	.word	12200
	.byte	32
	.byte	'Ifx_DSADC_GLOBRC',0,12,163,5,3
	.word	12525
	.byte	32
	.byte	'Ifx_DSADC_GLOBVCMH0',0,12,174,5,3
	.word	13655
	.byte	32
	.byte	'Ifx_DSADC_GLOBVCMH1',0,12,185,5,3
	.word	13893
	.byte	32
	.byte	'Ifx_DSADC_GLOBVCMH2',0,12,196,5,3
	.word	14021
	.byte	32
	.byte	'Ifx_DSADC_ID',0,12,207,5,3
	.word	10818
	.byte	32
	.byte	'Ifx_DSADC_KRST0',0,12,218,5,3
	.word	11328
	.byte	32
	.byte	'Ifx_DSADC_KRST1',0,12,229,5,3
	.word	11203
	.byte	32
	.byte	'Ifx_DSADC_KRSTCLR',0,12,240,5,3
	.word	11097
	.byte	32
	.byte	'Ifx_DSADC_OCS',0,12,251,5,3
	.word	10989
	.byte	13
	.word	17237
	.byte	32
	.byte	'Ifx_DSADC_CH',0,12,160,6,3
	.word	94615
	.byte	13
	.word	17717
	.byte	32
	.byte	'Ifx_DSADC',0,12,203,6,3
	.word	94642
	.byte	19
	.word	19710
	.byte	32
	.byte	'IfxDsadc_Dsn_In',0,13,45,3
	.word	94666
	.byte	19
	.word	19850
	.byte	32
	.byte	'IfxDsadc_Dsp_In',0,13,54,3
	.word	94695
	.byte	19
	.word	19430
	.byte	32
	.byte	'IfxDsadc_Cin_In',0,13,63,3
	.word	94724
	.byte	19
	.word	19570
	.byte	32
	.byte	'IfxDsadc_Din_In',0,13,72,3
	.word	94753
	.byte	19
	.word	19990
	.byte	32
	.byte	'IfxDsadc_Itr_In',0,13,81,3
	.word	94782
	.byte	19
	.word	18752
	.byte	32
	.byte	'IfxDsadc_Cgpwm_Out',0,13,89,3
	.word	94811
	.byte	18,13,92,15,16,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	18713
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	19312
	.byte	1,2,35,12,0,19
	.word	94843
	.byte	32
	.byte	'IfxDsadc_Sg_In',0,13,97,3
	.word	94894
	.byte	18,13,100,15,20,12
	.byte	'module',0
	.word	18260
	.byte	4,2,35,0,12
	.byte	'channel',0
	.word	327
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	18713
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	10079
	.byte	1,2,35,16,0,19
	.word	94922
	.byte	32
	.byte	'IfxDsadc_Cout_Out',0,13,106,3
	.word	94990
	.byte	32
	.byte	'IfxDsadc_AuxCombFilterShift',0,11,65,3
	.word	25973
	.byte	32
	.byte	'IfxDsadc_AuxCombFilterType',0,11,76,3
	.word	25827
	.byte	32
	.byte	'IfxDsadc_AuxEvent',0,11,86,3
	.word	26253
	.byte	32
	.byte	'IfxDsadc_AuxGate',0,11,95,3
	.word	26365
	.byte	32
	.byte	'IfxDsadc_AuxServiceRequest',0,11,105,3
	.word	26134
	.byte	32
	.byte	'IfxDsadc_CarrierWaveformMode',0,11,116,3
	.word	21889
	.byte	32
	.byte	'IfxDsadc_ChannelId',0,11,128,1,3
	.word	18432
	.byte	32
	.byte	'IfxDsadc_CommonModeVoltage',0,11,138,1,3
	.word	22988
	.byte	32
	.byte	'IfxDsadc_FirDataShift',0,11,150,1,3
	.word	25283
	.byte	32
	.byte	'IfxDsadc_FirInternalShift',0,11,160,1,3
	.word	25421
	.byte	32
	.byte	'IfxDsadc_InputConfig',0,11,171,1,3
	.word	22584
	.byte	32
	.byte	'IfxDsadc_InputDataSource',0,11,184,1,3
	.word	23233
	.byte	32
	.byte	'IfxDsadc_InputGain',0,11,196,1,3
	.word	22740
	.byte	32
	.byte	'IfxDsadc_InputPin',0,11,207,1,3
	.word	22893
	.byte	32
	.byte	'IfxDsadc_IntegrationWindowSize',0,11,216,1,3
	.word	25620
	.byte	32
	.byte	'IfxDsadc_IntegratorTrigger',0,11,228,1,3
	.word	23705
	.byte	32
	.byte	'IfxDsadc_LowPowerSupply',0,11,237,1,3
	.word	22352
	.byte	32
	.byte	'IfxDsadc_MainCombFilterShift',0,11,248,1,3
	.word	24796
	.byte	32
	.byte	'IfxDsadc_MainCombFilterType',0,11,131,2,3
	.word	24645
	.byte	32
	.byte	'IfxDsadc_MainServiceRequest',0,11,142,2,3
	.word	24962
	.byte	32
	.byte	'IfxDsadc_ModulatorClock',0,11,153,2,3
	.word	22220
	.byte	32
	.byte	'IfxDsadc_RectifierSignSource',0,11,188,2,3
	.word	26607
	.byte	32
	.byte	'IfxDsadc_SampleClockSource',0,11,199,2,3
	.word	24034
	.byte	32
	.byte	'IfxDsadc_SampleStrobe',0,11,213,2,3
	.word	24187
	.byte	14,11,218,2,9,1,15
	.byte	'IfxDsadc_SleepMode_enable',0,0,15
	.byte	'IfxDsadc_SleepMode_disable',0,1,0,32
	.byte	'IfxDsadc_SleepMode',0,11,222,2,3
	.word	95823
	.byte	32
	.byte	'IfxDsadc_TimestampTrigger',0,11,233,2,3
	.word	23873
	.byte	32
	.byte	'IfxDsadc_TriggerInput',0,11,248,2,3
	.word	23490
	.byte	32
	.byte	'IfxDsadc_Dsadc_AuxFilterConfig',0,15,184,1,3
	.word	26443
	.byte	32
	.byte	'IfxDsadc_Dsadc_ChannelPins',0,15,200,1,3
	.word	26869
	.byte	32
	.byte	'IfxDsadc_Dsadc_CombFilterConfig',0,15,212,1,3
	.word	25139
	.byte	32
	.byte	'IfxDsadc_Dsadc_DemodulatorConfig',0,15,224,1,3
	.word	24488
	.byte	32
	.byte	'IfxDsadc_Dsadc_FirFilterConfig',0,15,235,1,3
	.word	25501
	.byte	32
	.byte	'IfxDsadc_Dsadc_IntegratorConfig',0,15,245,1,3
	.word	25725
	.byte	32
	.byte	'IfxDsadc_Dsadc_ModulatorConfig',0,15,129,2,3
	.word	23088
	.byte	32
	.byte	'IfxDsadc_Dsadc_RectifierConfig',0,15,139,2,3
	.word	26786
	.byte	32
	.byte	'IfxDsadc_Dsadc',0,15,150,2,3
	.word	21862
	.byte	32
	.byte	'IfxDsadc_Dsadc_CarrierGenConfig',0,15,164,2,3
	.word	22048
	.byte	32
	.byte	'IfxDsadc_Dsadc_Channel',0,15,173,2,3
	.word	22520
	.byte	32
	.byte	'IfxDsadc_Dsadc_ChannelConfig',0,15,189,2,3
	.word	27036
	.byte	32
	.byte	'IfxDsadc_Dsadc_Config',0,15,198,2,3
	.word	22419
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L56:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0
	.byte	0,17,33,0,47,15,0,0,18,19,1,58,15,59,15,57,15,11,15,0,0,19,38,0,73,19,0,0,20,11,1,0,0,21,46,1,3,8,54,15
	.byte	39,12,63,12,60,12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19
	.byte	0,0,25,46,1,49,19,0,0,26,5,0,49,19,0,0,27,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,28,46
	.byte	0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,29,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39
	.byte	12,63,12,60,12,0,0,30,29,1,49,19,0,0,31,11,0,49,19,0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,0
	.byte	54,15,0,0,34,21,0,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L57:
	.word	.L399-.L398
.L398:
	.half	3
	.word	.L401-.L400
.L400:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap',0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Src\\Std\\IfxSrc.h',0,0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'IfxCpu_cfg.h',0,2,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Dsadc\\Std\\IfxDsadc.h',0,0,0,0
	.byte	'IfxDsadc_regdef.h',0,1,0,0
	.byte	'IfxDsadc_PinMap.h',0,3,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Ifx_Types.h',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.h',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0
	.byte	'IfxSrc_cfg.h',0,2,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Platform_Types.h',0,0
	.byte	0,0
	.byte	'IfxScu_cfg.h',0,2,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuCcu.h',0,0,0,0,0
.L401:
.L399:
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_info'
.L58:
	.word	637
	.half	3
	.word	.L59
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L61,.L60
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initCarrierGen',0,1,148,1,6,1,1,1
	.word	.L29,.L138,.L28
	.byte	4
	.byte	'dsadc',0,1,148,1,52
	.word	.L139,.L140
	.byte	4
	.byte	'config',0,1,148,1,98
	.word	.L141,.L142
	.byte	5
	.word	.L29,.L138
	.byte	6
	.byte	'cgcfg',0,1,150,1,21
	.word	.L143,.L144
	.byte	5
	.word	.L145,.L138
	.byte	6
	.byte	'sourceFreq',0,1,154,1,21
	.word	.L146,.L147
	.byte	6
	.byte	'targetFreq',0,1,155,1,21
	.word	.L146,.L148
	.byte	7
	.word	.L149
	.byte	6
	.byte	'pinPos',0,1,163,1,31
	.word	.L151,.L152
	.byte	8
	.word	.L153,.L154,.L9
	.byte	9
	.word	.L155,.L156
	.byte	9
	.word	.L157,.L158
	.byte	9
	.word	.L159,.L160
	.byte	10
	.word	.L161,.L154,.L9
	.byte	8
	.word	.L162,.L154,.L163
	.byte	9
	.word	.L164,.L165
	.byte	9
	.word	.L166,.L167
	.byte	9
	.word	.L168,.L169
	.byte	9
	.word	.L170,.L171
	.byte	11
	.word	.L172,.L154,.L163
	.byte	0,0,0,5
	.word	.L9,.L138
	.byte	6
	.byte	'pinNeg',0,1,170,1,31
	.word	.L151,.L173
	.byte	8
	.word	.L153,.L174,.L10
	.byte	9
	.word	.L155,.L156
	.byte	9
	.word	.L157,.L158
	.byte	9
	.word	.L159,.L160
	.byte	10
	.word	.L161,.L174,.L10
	.byte	8
	.word	.L162,.L174,.L175
	.byte	9
	.word	.L164,.L165
	.byte	9
	.word	.L166,.L167
	.byte	9
	.word	.L168,.L169
	.byte	9
	.word	.L170,.L171
	.byte	11
	.word	.L172,.L174,.L175
	.byte	0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_abbrev'
.L59:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0,0,10,11
	.byte	1,49,16,17,1,18,1,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_line'
.L60:
	.word	.L403-.L402
.L402:
	.half	3
	.word	.L405-.L404
.L404:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Dsadc\\Std\\IfxDsadc.h',0,0,0,0
	.byte	0
.L405:
	.byte	5,6,7,0,5,2
	.word	.L29
	.byte	3,147,1,1,5,13,9
	.half	.L351-.L29
	.byte	3,4,1,5,75,3,2,1,5,40,9
	.half	.L346-.L351
	.byte	3,1,1,5,32,9
	.half	.L406-.L346
	.byte	1,5,68,9
	.half	.L407-.L406
	.byte	3,1,1,5,76,1,5,51,9
	.half	.L408-.L407
	.byte	1,5,76,1,5,25,9
	.half	.L347-.L408
	.byte	1,5,34,3,1,1,5,33,9
	.half	.L409-.L347
	.byte	3,2,1,5,34,9
	.half	.L410-.L409
	.byte	3,126,1,5,10,3,4,1,5,25,9
	.half	.L411-.L410
	.byte	3,124,1,5,34,3,1,1,5,25,9
	.half	.L412-.L411
	.byte	1,9
	.half	.L413-.L412
	.byte	3,1,1,9
	.half	.L414-.L413
	.byte	3,2,1,5,46,9
	.half	.L150-.L414
	.byte	3,2,1,5,5,9
	.half	.L349-.L150
	.byte	3,2,1,5,62,7,9
	.half	.L415-.L349
	.byte	3,2,1,4,2,5,40,9
	.half	.L154-.L415
	.byte	3,139,3,1,4,3,5,39,9
	.half	.L163-.L154
	.byte	3,196,0,1,5,56,9
	.half	.L416-.L163
	.byte	1,5,67,9
	.half	.L417-.L416
	.byte	1,4,1,5,46,9
	.half	.L9-.L417
	.byte	3,180,124,1,5,5,9
	.half	.L350-.L9
	.byte	3,2,1,5,62,7,9
	.half	.L418-.L350
	.byte	3,2,1,4,2,5,40,9
	.half	.L174-.L418
	.byte	3,132,3,1,4,3,5,39,9
	.half	.L175-.L174
	.byte	3,196,0,1,5,56,9
	.half	.L419-.L175
	.byte	1,5,67,9
	.half	.L420-.L419
	.byte	1,4,1,5,1,9
	.half	.L10-.L420
	.byte	3,186,124,1,7,9
	.half	.L62-.L10
	.byte	0,1,1
.L403:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_ranges'
.L61:
	.word	-1,.L29,0,.L62-.L29,0,0
.L149:
	.word	-1,.L29,.L150-.L29,.L138-.L29,-1,.L31,0,.L137-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_info'
.L63:
	.word	347
	.half	3
	.word	.L64
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L66,.L65
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initModule',0,1,143,3,6,1,1,1
	.word	.L47,.L176,.L46
	.byte	4
	.byte	'dsadc',0,1,143,3,48
	.word	.L139,.L177
	.byte	4
	.byte	'config',0,1,143,3,84
	.word	.L178,.L179
	.byte	5
	.word	.L47,.L176
	.byte	6
	.byte	'dsadcSFR',0,1,145,3,16
	.word	.L180,.L181
	.byte	5
	.word	.L182,.L183
	.byte	6
	.byte	'passwd',0,1,150,3,16
	.word	.L184,.L185
	.byte	5
	.word	.L186,.L183
	.byte	6
	.byte	'globcfg',0,1,160,3,31
	.word	.L187,.L188
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_abbrev'
.L64:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_line'
.L65:
	.word	.L422-.L421
.L421:
	.half	3
	.word	.L424-.L423
.L423:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L424:
	.byte	5,6,7,0,5,2
	.word	.L47
	.byte	3,142,3,1,5,33,9
	.half	.L389-.L47
	.byte	3,2,1,5,18,9
	.half	.L390-.L389
	.byte	3,2,1,5,57,9
	.half	.L182-.L390
	.byte	3,3,1,5,23,9
	.half	.L388-.L182
	.byte	1,5,35,9
	.half	.L392-.L388
	.byte	3,1,1,5,27,9
	.half	.L391-.L392
	.byte	3,1,1,5,25,1,5,33,9
	.half	.L425-.L391
	.byte	3,5,1,5,26,9
	.half	.L394-.L425
	.byte	3,125,1,5,33,9
	.half	.L426-.L394
	.byte	3,3,1,5,52,9
	.half	.L186-.L426
	.byte	3,4,1,5,41,9
	.half	.L395-.L186
	.byte	3,2,1,5,33,9
	.half	.L393-.L395
	.byte	1,5,22,9
	.half	.L427-.L393
	.byte	3,1,1,5,41,1,5,33,9
	.half	.L428-.L427
	.byte	1,9
	.half	.L429-.L428
	.byte	3,1,1,9
	.half	.L430-.L429
	.byte	3,2,1,5,1,9
	.half	.L183-.L430
	.byte	3,3,1,7,9
	.half	.L67-.L183
	.byte	0,1,1
.L422:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_ranges'
.L66:
	.word	-1,.L47,0,.L67-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_info'
.L68:
	.word	269
	.half	3
	.word	.L69
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L71,.L70
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initModuleConfig',0,1,173,3,6,1,1,1
	.word	.L49,.L189,.L48
	.byte	4
	.byte	'config',0,1,173,3,61
	.word	.L190,.L191
	.byte	4
	.byte	'dsadc',0,1,173,3,80
	.word	.L180,.L192
	.byte	5
	.word	.L49,.L189
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_abbrev'
.L69:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_line'
.L70:
	.word	.L432-.L431
.L431:
	.half	3
	.word	.L434-.L433
.L433:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L434:
	.byte	5,33,7,0,5,2
	.word	.L49
	.byte	3,175,3,1,5,6,3,4,1,5,5,9
	.half	.L435-.L49
	.byte	3,126,1,5,6,3,2,1,5,1,9
	.half	.L436-.L435
	.byte	3,2,1,9
	.half	.L72-.L436
	.byte	0,1,1
.L432:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_ranges'
.L71:
	.word	-1,.L49,0,.L72-.L49,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_info'
.L73:
	.word	1005
	.half	3
	.word	.L74
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L76,.L75
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initChannel',0,1,179,1,6,1,1,1
	.word	.L33,.L193,.L32
	.byte	4
	.byte	'channel',0,1,179,1,57
	.word	.L194,.L195
	.byte	4
	.byte	'config',0,1,179,1,102
	.word	.L196,.L197
	.byte	5
	.word	.L33,.L193
	.byte	6
	.byte	'dsadc',0,1,181,1,16
	.word	.L180,.L198
	.byte	5
	.word	.L199,.L193
	.byte	6
	.byte	'pins',0,1,195,1,39
	.word	.L200,.L201
	.byte	5
	.word	.L202,.L11
	.byte	6
	.byte	'dsn',0,1,199,1,32
	.word	.L203,.L204
	.byte	7
	.word	.L205,.L206,.L207
	.byte	8
	.word	.L208,.L209
	.byte	8
	.word	.L210,.L211
	.byte	9
	.word	.L212,.L213
	.byte	7
	.word	.L215,.L216,.L12
	.byte	8
	.word	.L217,.L218
	.byte	8
	.word	.L219,.L220
	.byte	8
	.word	.L221,.L222
	.byte	10
	.word	.L223,.L216,.L12
	.byte	0,0,0,7
	.word	.L205,.L214,.L12
	.byte	8
	.word	.L208,.L209
	.byte	8
	.word	.L210,.L211
	.byte	0,5
	.word	.L12,.L11
	.byte	6
	.byte	'dsp',0,1,206,1,32
	.word	.L224,.L225
	.byte	7
	.word	.L226,.L227,.L228
	.byte	8
	.word	.L229,.L230
	.byte	8
	.word	.L231,.L232
	.byte	9
	.word	.L233,.L234
	.byte	7
	.word	.L215,.L236,.L14
	.byte	8
	.word	.L217,.L218
	.byte	8
	.word	.L219,.L220
	.byte	8
	.word	.L221,.L222
	.byte	10
	.word	.L223,.L236,.L14
	.byte	0,0,0,7
	.word	.L226,.L235,.L14
	.byte	8
	.word	.L229,.L230
	.byte	8
	.word	.L231,.L232
	.byte	0,5
	.word	.L14,.L11
	.byte	6
	.byte	'cin',0,1,213,1,32
	.word	.L237,.L238
	.byte	7
	.word	.L239,.L240,.L16
	.byte	8
	.word	.L241,.L242
	.byte	8
	.word	.L243,.L244
	.byte	11
	.word	.L245,.L240,.L16
	.byte	7
	.word	.L215,.L240,.L16
	.byte	8
	.word	.L217,.L218
	.byte	8
	.word	.L219,.L220
	.byte	8
	.word	.L221,.L222
	.byte	10
	.word	.L223,.L240,.L16
	.byte	0,0,0,5
	.word	.L16,.L11
	.byte	6
	.byte	'din',0,1,220,1,32
	.word	.L246,.L247
	.byte	7
	.word	.L248,.L249,.L17
	.byte	8
	.word	.L250,.L251
	.byte	8
	.word	.L252,.L253
	.byte	11
	.word	.L254,.L249,.L17
	.byte	7
	.word	.L215,.L249,.L17
	.byte	8
	.word	.L217,.L218
	.byte	8
	.word	.L219,.L220
	.byte	8
	.word	.L221,.L222
	.byte	10
	.word	.L223,.L249,.L17
	.byte	0,0,0,5
	.word	.L17,.L11
	.byte	6
	.byte	'itr',0,1,227,1,32
	.word	.L255,.L256
	.byte	7
	.word	.L257,.L258,.L11
	.byte	8
	.word	.L259,.L260
	.byte	8
	.word	.L261,.L262
	.byte	11
	.word	.L263,.L258,.L11
	.byte	7
	.word	.L215,.L258,.L11
	.byte	8
	.word	.L217,.L218
	.byte	8
	.word	.L219,.L220
	.byte	8
	.word	.L221,.L222
	.byte	10
	.word	.L223,.L258,.L11
	.byte	0,0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_abbrev'
.L74:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0
	.byte	10,11,0,49,16,17,1,18,1,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_line'
.L75:
	.word	.L438-.L437
.L437:
	.half	3
	.word	.L440-.L439
.L439:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Dsadc\\Std\\IfxDsadc.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0,0
.L440:
	.byte	5,6,7,0,5,2
	.word	.L33
	.byte	3,178,1,1,5,32,9
	.half	.L356-.L33
	.byte	3,4,1,5,30,9
	.half	.L441-.L356
	.byte	3,126,1,5,24,9
	.half	.L358-.L441
	.byte	3,2,1,9
	.half	.L442-.L358
	.byte	3,1,1,5,50,9
	.half	.L443-.L442
	.byte	3,3,1,5,59,9
	.half	.L354-.L443
	.byte	3,126,1,5,52,9
	.half	.L444-.L354
	.byte	1,5,24,9
	.half	.L445-.L444
	.byte	1,5,50,9
	.half	.L446-.L445
	.byte	3,2,1,5,52,9
	.half	.L353-.L446
	.byte	3,1,1,5,51,9
	.half	.L361-.L353
	.byte	3,1,1,5,50,9
	.half	.L363-.L361
	.byte	3,1,1,5,51,9
	.half	.L365-.L363
	.byte	3,1,1,5,50,9
	.half	.L367-.L365
	.byte	3,1,1,9
	.half	.L369-.L367
	.byte	3,1,1,5,52,9
	.half	.L199-.L369
	.byte	3,2,1,5,5,9
	.half	.L357-.L199
	.byte	3,2,1,5,42,7,9
	.half	.L202-.L357
	.byte	3,2,1,5,9,9
	.half	.L371-.L202
	.byte	3,2,1,4,2,5,17,7,9
	.half	.L206-.L371
	.byte	3,198,3,1,4,1,5,42,9
	.half	.L207-.L206
	.byte	3,188,124,1,4,2,5,5,9
	.half	.L214-.L207
	.byte	3,196,3,1,5,56,7,9
	.half	.L216-.L214
	.byte	3,2,1,4,3,5,40,9
	.half	.L447-.L216
	.byte	3,155,127,1,4,1,5,42,9
	.half	.L12-.L447
	.byte	3,162,125,1,5,9,9
	.half	.L372-.L12
	.byte	3,2,1,4,2,5,17,7,9
	.half	.L227-.L372
	.byte	3,200,3,1,4,1,5,42,9
	.half	.L228-.L227
	.byte	3,186,124,1,4,2,5,5,9
	.half	.L235-.L228
	.byte	3,198,3,1,5,56,7,9
	.half	.L236-.L235
	.byte	3,2,1,4,3,5,40,9
	.half	.L448-.L236
	.byte	3,146,127,1,4,1,5,42,9
	.half	.L14-.L448
	.byte	3,169,125,1,5,9,9
	.half	.L373-.L14
	.byte	3,2,1,5,42,7,9
	.half	.L240-.L373
	.byte	3,2,1,4,2,5,37,9
	.half	.L449-.L240
	.byte	3,163,3,1,4,3,5,40,9
	.half	.L450-.L449
	.byte	3,176,127,1,4,2,5,52,3,208,0,1,4,3,5,40,9
	.half	.L451-.L450
	.byte	3,176,127,1,4,1,5,42,9
	.half	.L16-.L451
	.byte	3,176,125,1,5,9,9
	.half	.L374-.L16
	.byte	3,2,1,5,42,7,9
	.half	.L249-.L374
	.byte	3,2,1,4,2,5,37,9
	.half	.L452-.L249
	.byte	3,169,3,1,4,3,5,40,9
	.half	.L453-.L452
	.byte	3,163,127,1,4,2,5,52,3,221,0,1,4,3,5,40,9
	.half	.L454-.L453
	.byte	3,163,127,1,4,1,5,42,9
	.half	.L17-.L454
	.byte	3,183,125,1,5,9,9
	.half	.L375-.L17
	.byte	3,2,1,5,42,7,9
	.half	.L258-.L375
	.byte	3,2,1,4,2,5,37,9
	.half	.L455-.L258
	.byte	3,186,3,1,4,3,5,40,9
	.half	.L456-.L455
	.byte	3,139,127,1,4,2,5,52,3,245,0,1,4,3,5,40,9
	.half	.L457-.L456
	.byte	3,139,127,1,4,1,5,1,7,9
	.half	.L11-.L457
	.byte	3,190,125,1,7,9
	.half	.L77-.L11
	.byte	0,1,1
.L438:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_ranges'
.L76:
	.word	-1,.L33,0,.L77-.L33,0,0
.L213:
	.word	-1,.L33,.L206-.L33,.L207-.L33,.L214-.L33,.L12-.L33,0,0
.L234:
	.word	-1,.L33,.L227-.L33,.L228-.L33,.L235-.L33,.L14-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_info'
.L78:
	.word	270
	.half	3
	.word	.L79
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L81,.L80
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initChannelConfig',0,1,237,1,6,1,1,1
	.word	.L35,.L264,.L34
	.byte	4
	.byte	'config',0,1,237,1,69
	.word	.L265,.L266
	.byte	4
	.byte	'dsadc',0,1,237,1,93
	.word	.L139,.L267
	.byte	5
	.word	.L35,.L264
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_abbrev'
.L79:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_line'
.L80:
	.word	.L459-.L458
.L458:
	.half	3
	.word	.L461-.L460
.L460:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L461:
	.byte	5,78,7,0,5,2
	.word	.L35
	.byte	3,238,1,1,5,13,9
	.half	.L462-.L35
	.byte	3,50,1,5,5,9
	.half	.L463-.L462
	.byte	3,2,1,5,31,7,9
	.half	.L464-.L463
	.byte	3,2,1,5,38,9
	.half	.L465-.L464
	.byte	1,5,26,9
	.half	.L20-.L465
	.byte	3,4,1,5,24,9
	.half	.L21-.L20
	.byte	1,5,1,9
	.half	.L377-.L21
	.byte	3,2,1,7,9
	.half	.L82-.L377
	.byte	0,1,1
.L459:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_ranges'
.L81:
	.word	-1,.L35,0,.L82-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_info'
.L83:
	.word	295
	.half	3
	.word	.L84
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L86,.L85
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_getAuxResult',0,1,123,8
	.word	.L268
	.byte	1,1,1
	.word	.L25,.L269,.L24
	.byte	4
	.byte	'channel',0,1,123,60
	.word	.L194,.L270
	.byte	5
	.word	.L25,.L269
	.byte	6
	.word	.L271,.L272,.L269
	.byte	7
	.word	.L273,.L274
	.byte	7
	.word	.L275,.L276
	.byte	8
	.word	.L277,.L272,.L269
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_abbrev'
.L84:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_line'
.L85:
	.word	.L467-.L466
.L466:
	.half	3
	.word	.L469-.L468
.L468:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Dsadc\\Std\\IfxDsadc.h',0,0,0,0
	.byte	0
.L469:
	.byte	5,41,7,0,5,2
	.word	.L25
	.byte	3,252,0,1,5,58,9
	.half	.L470-.L25
	.byte	1,4,2,5,31,9
	.half	.L272-.L470
	.byte	3,230,3,1,5,30,9
	.half	.L471-.L272
	.byte	1,5,46,9
	.half	.L472-.L471
	.byte	1,5,12,9
	.half	.L473-.L472
	.byte	1,4,1,5,1,3,155,124,1,7,9
	.half	.L87-.L473
	.byte	0,1,1
.L467:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_ranges'
.L86:
	.word	-1,.L25,0,.L87-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_info'
.L88:
	.word	254
	.half	3
	.word	.L89
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L91,.L90
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initCarrierGenConfig',0,1,198,3,6,1,1,1
	.word	.L53,.L278,.L52
	.byte	4
	.byte	'config',0,1,198,3,75
	.word	.L279,.L280
	.byte	5
	.word	.L53,.L278
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_abbrev'
.L89:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_line'
.L90:
	.word	.L475-.L474
.L474:
	.half	3
	.word	.L477-.L476
.L476:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L477:
	.byte	5,35,7,0,5,2
	.word	.L53
	.byte	3,199,3,1,5,33,1,5,35,9
	.half	.L478-.L53
	.byte	3,1,1,5,33,1,5,35,9
	.half	.L479-.L478
	.byte	3,5,1,9
	.half	.L480-.L479
	.byte	3,124,1,5,33,9
	.half	.L481-.L480
	.byte	1,9
	.half	.L482-.L481
	.byte	3,1,1,9
	.half	.L483-.L482
	.byte	3,1,1,5,35,9
	.half	.L484-.L483
	.byte	3,1,1,5,33,1,9
	.half	.L485-.L484
	.byte	3,1,1,9
	.half	.L486-.L485
	.byte	3,1,1,5,1,9
	.half	.L487-.L486
	.byte	3,1,1,7,9
	.half	.L92-.L487
	.byte	0,1,1
.L475:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_ranges'
.L91:
	.word	-1,.L53,0,.L92-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_info'
.L93:
	.word	354
	.half	3
	.word	.L94
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L96,.L95
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_calcDIVx',0,1,95,15
	.word	.L281
	.byte	1,1
	.word	.L23,.L282,.L22
	.byte	4
	.byte	'sourceFreq',0,1,95,47
	.word	.L146,.L283
	.byte	4
	.byte	'targetFreq',0,1,95,68
	.word	.L284,.L285
	.byte	5
	.word	.L23,.L282
	.byte	6
	.byte	'bestError',0,1,97,13
	.word	.L146,.L286
	.byte	6
	.byte	'bestDiv',0,1,98,13
	.word	.L281,.L287
	.byte	6
	.byte	'i',0,1,98,28
	.word	.L281,.L288
	.byte	5
	.word	.L289,.L5
	.byte	6
	.byte	'freq',0,1,102,17
	.word	.L146,.L290
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_abbrev'
.L94:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_line'
.L95:
	.word	.L489-.L488
.L488:
	.half	3
	.word	.L491-.L490
.L490:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L491:
	.byte	5,23,7,0,5,2
	.word	.L23
	.byte	3,225,0,1,5,25,3,127,1,5,12,9
	.half	.L339-.L23
	.byte	3,3,1,5,24,1,5,23,9
	.half	.L289-.L339
	.byte	3,125,1,5,38,9
	.half	.L2-.L289
	.byte	3,5,1,5,36,9
	.half	.L492-.L2
	.byte	1,5,25,3,1,1,5,13,9
	.half	.L4-.L492
	.byte	3,2,1,5,23,9
	.half	.L493-.L4
	.byte	3,2,1,5,18,9
	.half	.L494-.L493
	.byte	3,3,1,5,28,9
	.half	.L5-.L494
	.byte	3,118,1,5,24,1,5,32,7,9
	.half	.L6-.L5
	.byte	3,17,1,5,13,9
	.half	.L343-.L6
	.byte	3,2,1,5,30,9
	.half	.L495-.L343
	.byte	3,126,1,5,17,1,5,26,9
	.half	.L496-.L495
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L97-.L496
	.byte	0,1,1
.L489:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_ranges'
.L96:
	.word	-1,.L23,0,.L97-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_info'
.L98:
	.word	287
	.half	3
	.word	.L99
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L101,.L100
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initAuxFilter',0,1,129,1,13,1,1
	.word	.L27,.L291,.L26
	.byte	4
	.byte	'channel',0,1,129,1,66
	.word	.L194,.L292
	.byte	4
	.byte	'config',0,1,129,1,113
	.word	.L293,.L294
	.byte	5
	.word	.L27,.L291
	.byte	6
	.byte	'fcfga',0,1,131,1,24
	.word	.L295,.L296
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_abbrev'
.L99:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_line'
.L100:
	.word	.L498-.L497
.L497:
	.half	3
	.word	.L500-.L499
.L499:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L500:
	.byte	5,39,7,0,5,2
	.word	.L27
	.byte	3,134,1,1,5,31,9
	.half	.L501-.L27
	.byte	3,126,1,5,13,3,11,1,5,58,9
	.half	.L344-.L501
	.byte	3,119,1,5,31,9
	.half	.L502-.L344
	.byte	1,5,39,3,1,1,5,31,9
	.half	.L503-.L502
	.byte	1,5,39,3,2,1,5,31,9
	.half	.L504-.L503
	.byte	1,5,39,3,1,1,5,31,9
	.half	.L505-.L504
	.byte	1,5,39,3,1,1,5,31,9
	.half	.L506-.L505
	.byte	1,5,39,3,2,1,5,31,9
	.half	.L507-.L506
	.byte	1,3,2,1,5,1,9
	.half	.L508-.L507
	.byte	3,1,1,7,9
	.half	.L102-.L508
	.byte	0,1,1
.L498:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_ranges'
.L101:
	.word	-1,.L27,0,.L102-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_info'
.L103:
	.word	288
	.half	3
	.word	.L104
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L106,.L105
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initCombFilter',0,1,174,2,13,1,1
	.word	.L37,.L297,.L36
	.byte	4
	.byte	'channel',0,1,174,2,67
	.word	.L194,.L298
	.byte	4
	.byte	'config',0,1,174,2,115
	.word	.L299,.L300
	.byte	5
	.word	.L37,.L297
	.byte	6
	.byte	'fcfgc',0,1,176,2,24
	.word	.L301,.L302
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_abbrev'
.L104:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_line'
.L105:
	.word	.L510-.L509
.L509:
	.half	3
	.word	.L512-.L511
.L511:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L512:
	.byte	5,39,7,0,5,2
	.word	.L37
	.byte	3,179,2,1,5,31,9
	.half	.L513-.L37
	.byte	3,126,1,5,13,3,11,1,5,58,9
	.half	.L378-.L513
	.byte	3,119,1,5,31,9
	.half	.L514-.L378
	.byte	1,5,39,3,1,1,5,12,9
	.half	.L515-.L514
	.byte	1,5,31,9
	.half	.L516-.L515
	.byte	1,5,40,3,1,1,5,51,9
	.half	.L517-.L516
	.byte	1,5,31,9
	.half	.L518-.L517
	.byte	1,5,39,9
	.half	.L519-.L518
	.byte	3,2,1,5,31,9
	.half	.L520-.L519
	.byte	1,5,39,3,2,1,5,31,9
	.half	.L521-.L520
	.byte	1,5,39,3,1,1,5,52,9
	.half	.L522-.L521
	.byte	1,5,31,9
	.half	.L523-.L522
	.byte	1,3,2,1,5,1,9
	.half	.L524-.L523
	.byte	3,1,1,7,9
	.half	.L107-.L524
	.byte	0,1,1
.L510:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_ranges'
.L106:
	.word	-1,.L37,0,.L107-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_info'
.L108:
	.word	289
	.half	3
	.word	.L109
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L111,.L110
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initDemodulator',0,1,193,2,13,1,1
	.word	.L39,.L303,.L38
	.byte	4
	.byte	'channel',0,1,193,2,68
	.word	.L194,.L304
	.byte	4
	.byte	'config',0,1,193,2,117
	.word	.L305,.L306
	.byte	5
	.word	.L39,.L303
	.byte	6
	.byte	'dicfg',0,1,195,2,24
	.word	.L307,.L308
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_abbrev'
.L109:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_line'
.L110:
	.word	.L526-.L525
.L525:
	.half	3
	.word	.L528-.L527
.L527:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L528:
	.byte	5,31,7,0,5,2
	.word	.L39
	.byte	3,196,2,1,5,39,3,2,1,5,13,9
	.half	.L379-.L39
	.byte	3,12,1,5,31,9
	.half	.L529-.L379
	.byte	3,116,1,9
	.half	.L530-.L529
	.byte	3,1,1,5,39,9
	.half	.L531-.L530
	.byte	3,2,1,5,31,9
	.half	.L532-.L531
	.byte	1,5,39,3,1,1,5,31,9
	.half	.L533-.L532
	.byte	1,5,39,3,1,1,5,12,9
	.half	.L534-.L533
	.byte	1,5,31,9
	.half	.L535-.L534
	.byte	1,9
	.half	.L536-.L535
	.byte	3,1,1,5,39,9
	.half	.L537-.L536
	.byte	3,2,1,5,31,9
	.half	.L538-.L537
	.byte	1,5,39,3,1,1,5,31,9
	.half	.L539-.L538
	.byte	1,9
	.half	.L540-.L539
	.byte	3,1,1,3,2,1,5,1,9
	.half	.L541-.L540
	.byte	3,1,1,7,9
	.half	.L112-.L541
	.byte	0,1,1
.L526:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_ranges'
.L111:
	.word	-1,.L39,0,.L112-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_info'
.L113:
	.word	287
	.half	3
	.word	.L114
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L116,.L115
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initFirFilter',0,1,215,2,13,1,1
	.word	.L41,.L309,.L40
	.byte	4
	.byte	'channel',0,1,215,2,66
	.word	.L194,.L310
	.byte	4
	.byte	'config',0,1,215,2,113
	.word	.L311,.L312
	.byte	5
	.word	.L41,.L309
	.byte	6
	.byte	'fcfgm',0,1,217,2,24
	.word	.L313,.L314
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_abbrev'
.L114:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_line'
.L115:
	.word	.L543-.L542
.L542:
	.half	3
	.word	.L545-.L544
.L544:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L545:
	.byte	5,31,7,0,5,2
	.word	.L41
	.byte	3,218,2,1,5,40,3,2,1,5,13,9
	.half	.L380-.L41
	.byte	3,6,1,5,54,9
	.half	.L546-.L380
	.byte	3,122,1,5,31,9
	.half	.L547-.L546
	.byte	1,5,40,3,1,1,5,54,9
	.half	.L548-.L547
	.byte	1,5,31,9
	.half	.L549-.L548
	.byte	1,5,40,3,1,1,5,61,9
	.half	.L550-.L549
	.byte	1,5,31,9
	.half	.L551-.L550
	.byte	1,5,39,3,1,1,5,31,9
	.half	.L552-.L551
	.byte	1,5,39,3,1,1,5,31,9
	.half	.L553-.L552
	.byte	1,3,2,1,5,1,9
	.half	.L554-.L553
	.byte	3,1,1,7,9
	.half	.L117-.L554
	.byte	0,1,1
.L543:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_ranges'
.L116:
	.word	-1,.L41,0,.L117-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_info'
.L118:
	.word	288
	.half	3
	.word	.L119
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L121,.L120
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initIntegrator',0,1,231,2,13,1,1
	.word	.L43,.L315,.L42
	.byte	4
	.byte	'channel',0,1,231,2,67
	.word	.L194,.L316
	.byte	4
	.byte	'config',0,1,231,2,115
	.word	.L317,.L318
	.byte	5
	.word	.L43,.L315
	.byte	6
	.byte	'iwctr',0,1,233,2,24
	.word	.L319,.L320
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_abbrev'
.L119:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_line'
.L120:
	.word	.L556-.L555
.L555:
	.half	3
	.word	.L558-.L557
.L557:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L558:
	.byte	5,39,7,0,5,2
	.word	.L43
	.byte	3,236,2,1,5,31,9
	.half	.L559-.L43
	.byte	3,126,1,5,39,3,3,1,5,59,9
	.half	.L381-.L559
	.byte	3,127,1,5,13,3,5,1,5,59,9
	.half	.L560-.L381
	.byte	3,123,1,5,31,9
	.half	.L561-.L560
	.byte	1,5,12,9
	.half	.L562-.L561
	.byte	3,1,1,5,31,9
	.half	.L563-.L562
	.byte	1,5,39,3,1,1,5,31,9
	.half	.L564-.L563
	.byte	1,5,39,9
	.half	.L565-.L564
	.byte	3,1,1,5,58,9
	.half	.L566-.L565
	.byte	1,5,31,9
	.half	.L567-.L566
	.byte	1,3,2,1,5,1,9
	.half	.L568-.L567
	.byte	3,1,1,7,9
	.half	.L122-.L568
	.byte	0,1,1
.L556:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_ranges'
.L121:
	.word	-1,.L43,0,.L122-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_info'
.L123:
	.word	342
	.half	3
	.word	.L124
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L126,.L125
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initModulator',0,1,246,2,13,1,1
	.word	.L45,.L321,.L44
	.byte	4
	.byte	'channel',0,1,246,2,66
	.word	.L194,.L322
	.byte	4
	.byte	'config',0,1,246,2,113
	.word	.L323,.L324
	.byte	5
	.word	.L45,.L321
	.byte	6
	.byte	'modcfg',0,1,248,2,25
	.word	.L325,.L326
	.byte	7
	.word	.L327
	.byte	6
	.byte	'targetFreq',0,1,130,3,13
	.word	.L146,.L331
	.byte	6
	.byte	'sourceFreq',0,1,131,3,13
	.word	.L146,.L332
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_abbrev'
.L124:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_line'
.L125:
	.word	.L570-.L569
.L569:
	.half	3
	.word	.L572-.L571
.L571:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L572:
	.byte	5,13,7,0,5,2
	.word	.L45
	.byte	3,245,2,1,5,22,9
	.half	.L384-.L45
	.byte	3,4,1,5,30,3,2,1,5,13,9
	.half	.L386-.L384
	.byte	3,122,1,5,22,9
	.half	.L382-.L386
	.byte	3,6,1,5,30,3,1,1,5,13,9
	.half	.L573-.L382
	.byte	3,121,1,5,69,9
	.half	.L328-.L573
	.byte	3,13,1,5,22,9
	.half	.L329-.L328
	.byte	3,122,1,5,30,3,1,1,5,22,9
	.half	.L574-.L329
	.byte	1,5,30,3,1,1,5,13,9
	.half	.L575-.L574
	.byte	1,5,22,9
	.half	.L576-.L575
	.byte	1,9
	.half	.L577-.L576
	.byte	3,1,1,5,32,9
	.half	.L578-.L577
	.byte	3,2,1,5,24,9
	.half	.L330-.L578
	.byte	1,5,69,9
	.half	.L579-.L330
	.byte	3,1,1,5,71,9
	.half	.L383-.L579
	.byte	3,1,1,5,13,9
	.half	.L387-.L383
	.byte	1,5,32,9
	.half	.L580-.L387
	.byte	1,9
	.half	.L581-.L580
	.byte	3,1,1,5,40,9
	.half	.L582-.L581
	.byte	3,2,1,5,13,9
	.half	.L583-.L582
	.byte	3,4,1,9
	.half	.L385-.L583
	.byte	3,124,1,5,32,9
	.half	.L584-.L385
	.byte	1,9
	.half	.L585-.L584
	.byte	3,1,1,9
	.half	.L586-.L585
	.byte	3,1,1,9
	.half	.L587-.L586
	.byte	3,2,1,5,1,9
	.half	.L588-.L587
	.byte	3,1,1,7,9
	.half	.L127-.L588
	.byte	0,1,1
.L570:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_ranges'
.L126:
	.word	-1,.L45,0,.L127-.L45,0,0
.L327:
	.word	-1,.L45,.L328-.L45,.L329-.L45,.L330-.L45,.L321-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_info'
.L128:
	.word	286
	.half	3
	.word	.L129
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L131,.L130
	.byte	2
	.word	.L54
	.byte	3
	.byte	'IfxDsadc_Dsadc_initRectifier',0,1,185,3,13,1,1
	.word	.L51,.L333,.L50
	.byte	4
	.byte	'channel',0,1,185,3,66
	.word	.L194,.L334
	.byte	4
	.byte	'config',0,1,185,3,113
	.word	.L335,.L336
	.byte	5
	.word	.L51,.L333
	.byte	6
	.byte	'rect',0,1,187,3,26
	.word	.L337,.L338
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_abbrev'
.L129:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_line'
.L130:
	.word	.L590-.L589
.L589:
	.half	3
	.word	.L592-.L591
.L591:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0,0
.L592:
	.byte	5,40,7,0,5,2
	.word	.L51
	.byte	3,188,3,1,5,48,3,1,1,5,13,9
	.half	.L396-.L51
	.byte	3,2,1,5,40,9
	.half	.L593-.L396
	.byte	3,126,1,5,48,3,1,1,5,40,9
	.half	.L594-.L593
	.byte	1,3,1,1,5,13,9
	.half	.L595-.L594
	.byte	3,1,1,5,48,9
	.half	.L596-.L595
	.byte	1,5,40,9
	.half	.L597-.L596
	.byte	1,5,13,9
	.half	.L598-.L597
	.byte	3,1,1,5,69,9
	.half	.L599-.L598
	.byte	1,5,48,9
	.half	.L397-.L599
	.byte	1,5,69,9
	.half	.L600-.L397
	.byte	1,5,60,9
	.half	.L601-.L600
	.byte	1,5,40,1,5,1,9
	.half	.L602-.L601
	.byte	3,1,1,7,9
	.half	.L132-.L602
	.byte	0,1,1
.L590:
	.sdecl	'.debug_ranges',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_ranges'
.L131:
	.word	-1,.L51,0,.L132-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L133:
	.word	197
	.half	3
	.word	.L134
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L136,.L135
	.byte	2
	.word	.L54
	.byte	3
	.byte	'.cocofun_5',0,1,148,1,6,1
	.word	.L31,.L137,.L30
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L134:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L135:
	.word	.L604-.L603
.L603:
	.half	3
	.word	.L606-.L605
.L605:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Dsadc\\Dsadc\\IfxDsadc_Dsadc.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Dsadc\\Std\\IfxDsadc.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0,0
.L606:
	.byte	4,2,5,82,7,0,5,2
	.word	.L31
	.byte	3,244,4,1,4,1,5,45,9
	.half	.L607-.L31
	.byte	3,178,124,1,5,62,9
	.half	.L608-.L607
	.byte	1,4,3,5,61,9
	.half	.L348-.L608
	.byte	3,139,3,1,4,2,5,40,3,195,0,1,5,57,9
	.half	.L609-.L348
	.byte	1,4,3,5,61,9
	.half	.L610-.L609
	.byte	3,189,127,1,7,9
	.half	.L137-.L610
	.byte	0,1,1,4,2,5,82,0,5,2
	.word	.L31
	.byte	3,244,4,1,4,1,5,45,9
	.half	.L607-.L31
	.byte	3,185,124,1,5,62,9
	.half	.L608-.L607
	.byte	1,4,3,5,61,9
	.half	.L348-.L608
	.byte	3,132,3,1,4,2,5,40,3,195,0,1,5,57,9
	.half	.L609-.L348
	.byte	1,4,3,5,61,9
	.half	.L610-.L609
	.byte	3,189,127,1,7,9
	.half	.L137-.L610
	.byte	0,1,1
.L604:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L136:
	.word	-1,.L31,0,.L137-.L31,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L137-.L31
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_loc'
.L22:
	.word	-1,.L23,0,.L282-.L23
	.half	2
	.byte	138,0
	.word	0,0
.L287:
	.word	-1,.L23,.L339-.L23,.L2-.L23
	.half	5
	.byte	144,32,157,32,0
	.word	.L6-.L23,.L343-.L23
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L286:
	.word	-1,.L23,.L339-.L23,.L2-.L23
	.half	1
	.byte	81
	.word	.L4-.L23,.L342-.L23
	.half	1
	.byte	81
	.word	0,0
.L290:
	.word	-1,.L23,.L340-.L23,.L341-.L23
	.half	1
	.byte	95
	.word	0,0
.L288:
	.word	-1,.L23,.L289-.L23,.L282-.L23
	.half	1
	.byte	82
	.word	0,0
.L283:
	.word	-1,.L23,0,.L282-.L23
	.half	1
	.byte	84
	.word	0,0
.L285:
	.word	-1,.L23,0,.L282-.L23
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L269-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L270:
	.word	-1,.L25,0,.L269-.L25
	.half	1
	.byte	100
	.word	0,0
.L276:
	.word	0,0
.L274:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L291-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L292:
	.word	-1,.L27,0,.L291-.L27
	.half	1
	.byte	100
	.word	0,0
.L294:
	.word	-1,.L27,0,.L291-.L27
	.half	1
	.byte	101
	.word	0,0
.L296:
	.word	-1,.L27,.L344-.L27,.L291-.L27
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L345-.L29
	.half	2
	.byte	138,0
	.word	.L345-.L29,.L10-.L29
	.half	2
	.byte	138,8
	.word	.L10-.L29,.L10-.L29
	.half	2
	.byte	138,0
	.word	.L10-.L29,.L138-.L29
	.half	2
	.byte	138,8
	.word	.L138-.L29,.L138-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L156:
	.word	0,0
.L144:
	.word	-1,.L29,.L145-.L29,.L154-.L29
	.half	1
	.byte	88
	.word	.L31-.L29,.L348-.L29
	.half	1
	.byte	88
	.word	0,0
.L142:
	.word	-1,.L29,0,.L346-.L29
	.half	1
	.byte	101
	.word	.L31-.L29,.L137-.L29
	.half	1
	.byte	109
	.word	.L351-.L29,.L138-.L29
	.half	1
	.byte	109
	.word	0,0
.L140:
	.word	-1,.L29,0,.L145-.L29
	.half	1
	.byte	100
	.word	.L31-.L29,.L137-.L29
	.half	1
	.byte	108
	.word	.L352-.L29,.L138-.L29
	.half	1
	.byte	108
	.word	0,0
.L171:
	.word	0,0
.L169:
	.word	0,0
.L160:
	.word	0,0
.L167:
	.word	0,0
.L158:
	.word	0,0
.L173:
	.word	-1,.L29,.L31-.L29,.L137-.L29
	.half	1
	.byte	111
	.word	.L350-.L29,.L138-.L29
	.half	1
	.byte	111
	.word	0,0
.L152:
	.word	-1,.L29,.L31-.L29,.L137-.L29
	.half	1
	.byte	111
	.word	.L349-.L29,.L350-.L29
	.half	1
	.byte	111
	.word	0,0
.L165:
	.word	0,0
.L147:
	.word	-1,.L29,.L346-.L29,.L347-.L29
	.half	1
	.byte	82
	.word	0,0
.L148:
	.word	-1,.L29,.L31-.L29,.L137-.L29
	.half	2
	.byte	145,120
	.word	0,.L138-.L29
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L278-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L280:
	.word	-1,.L53,0,.L278-.L53
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L193-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L242:
	.word	0,0
.L244:
	.word	0,0
.L195:
	.word	-1,.L33,0,.L353-.L33
	.half	1
	.byte	100
	.word	.L356-.L33,.L357-.L33
	.half	1
	.byte	108
	.word	.L360-.L33,.L361-.L33
	.half	1
	.byte	100
	.word	.L362-.L33,.L363-.L33
	.half	1
	.byte	100
	.word	.L364-.L33,.L365-.L33
	.half	1
	.byte	100
	.word	.L366-.L33,.L367-.L33
	.half	1
	.byte	100
	.word	.L368-.L33,.L369-.L33
	.half	1
	.byte	100
	.word	.L370-.L33,.L199-.L33
	.half	1
	.byte	100
	.word	0,0
.L238:
	.word	-1,.L33,.L373-.L33,.L374-.L33
	.half	1
	.byte	111
	.word	0,0
.L197:
	.word	-1,.L33,0,.L354-.L33
	.half	1
	.byte	101
	.word	.L355-.L33,.L193-.L33
	.half	1
	.byte	109
	.word	0,0
.L251:
	.word	0,0
.L253:
	.word	0,0
.L247:
	.word	-1,.L33,.L374-.L33,.L375-.L33
	.half	1
	.byte	111
	.word	0,0
.L198:
	.word	-1,.L33,.L358-.L33,.L359-.L33
	.half	1
	.byte	98
	.word	0,0
.L204:
	.word	-1,.L33,.L371-.L33,.L372-.L33
	.half	1
	.byte	111
	.word	0,0
.L209:
	.word	0,0
.L225:
	.word	-1,.L33,.L372-.L33,.L373-.L33
	.half	1
	.byte	111
	.word	0,0
.L230:
	.word	0,0
.L256:
	.word	-1,.L33,.L375-.L33,.L11-.L33
	.half	1
	.byte	111
	.word	0,0
.L260:
	.word	0,0
.L262:
	.word	0,0
.L222:
	.word	0,0
.L220:
	.word	0,0
.L211:
	.word	0,0
.L232:
	.word	0,0
.L201:
	.word	-1,.L33,.L357-.L33,.L193-.L33
	.half	1
	.byte	108
	.word	0,0
.L218:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L264-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L266:
	.word	-1,.L35,0,.L19-.L35
	.half	1
	.byte	100
	.word	.L376-.L35,.L264-.L35
	.half	1
	.byte	98
	.word	.L21-.L35,.L377-.L35
	.half	1
	.byte	100
	.word	0,0
.L267:
	.word	-1,.L35,0,.L264-.L35
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L297-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L298:
	.word	-1,.L37,0,.L297-.L37
	.half	1
	.byte	100
	.word	0,0
.L300:
	.word	-1,.L37,0,.L297-.L37
	.half	1
	.byte	101
	.word	0,0
.L302:
	.word	-1,.L37,.L378-.L37,.L297-.L37
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L303-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L304:
	.word	-1,.L39,0,.L303-.L39
	.half	1
	.byte	100
	.word	0,0
.L306:
	.word	-1,.L39,0,.L303-.L39
	.half	1
	.byte	101
	.word	0,0
.L308:
	.word	-1,.L39,.L379-.L39,.L303-.L39
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L309-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L310:
	.word	-1,.L41,0,.L309-.L41
	.half	1
	.byte	100
	.word	0,0
.L312:
	.word	-1,.L41,0,.L309-.L41
	.half	1
	.byte	101
	.word	0,0
.L314:
	.word	-1,.L41,.L380-.L41,.L309-.L41
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L315-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L316:
	.word	-1,.L43,0,.L315-.L43
	.half	1
	.byte	100
	.word	0,0
.L318:
	.word	-1,.L43,0,.L315-.L43
	.half	1
	.byte	101
	.word	0,0
.L320:
	.word	-1,.L43,.L381-.L43,.L315-.L43
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_loc'
.L44:
	.word	-1,.L45,0,.L382-.L45
	.half	2
	.byte	138,0
	.word	.L382-.L45,.L321-.L45
	.half	2
	.byte	138,8
	.word	.L321-.L45,.L321-.L45
	.half	2
	.byte	138,0
	.word	0,0
.L322:
	.word	-1,.L45,0,.L329-.L45
	.half	1
	.byte	100
	.word	.L328-.L45,.L321-.L45
	.half	1
	.byte	108
	.word	0,0
.L324:
	.word	-1,.L45,0,.L383-.L45
	.half	1
	.byte	101
	.word	.L384-.L45,.L385-.L45
	.half	1
	.byte	111
	.word	0,0
.L326:
	.word	-1,.L45,.L386-.L45,.L321-.L45
	.half	1
	.byte	88
	.word	0,0
.L332:
	.word	-1,.L45,.L383-.L45,.L387-.L45
	.half	1
	.byte	82
	.word	0,0
.L331:
	.word	-1,.L45,0,.L321-.L45
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L176-.L47
	.half	2
	.byte	138,0
	.word	0,0
.L179:
	.word	-1,.L47,0,.L388-.L47
	.half	1
	.byte	101
	.word	.L389-.L47,.L176-.L47
	.half	1
	.byte	111
	.word	0,0
.L177:
	.word	-1,.L47,0,.L388-.L47
	.half	1
	.byte	100
	.word	0,0
.L181:
	.word	-1,.L47,.L390-.L47,.L176-.L47
	.half	1
	.byte	108
	.word	0,0
.L188:
	.word	-1,.L47,.L395-.L47,.L176-.L47
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L185:
	.word	-1,.L47,.L388-.L47,.L391-.L47
	.half	1
	.byte	82
	.word	.L392-.L47,.L393-.L47
	.half	1
	.byte	95
	.word	.L394-.L47,.L186-.L47
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_loc'
.L48:
	.word	-1,.L49,0,.L189-.L49
	.half	2
	.byte	138,0
	.word	0,0
.L191:
	.word	-1,.L49,0,.L189-.L49
	.half	1
	.byte	100
	.word	0,0
.L192:
	.word	-1,.L49,0,.L189-.L49
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_loc'
.L50:
	.word	-1,.L51,0,.L333-.L51
	.half	2
	.byte	138,0
	.word	0,0
.L334:
	.word	-1,.L51,0,.L333-.L51
	.half	1
	.byte	100
	.word	0,0
.L336:
	.word	-1,.L51,0,.L333-.L51
	.half	1
	.byte	101
	.word	0,0
.L338:
	.word	-1,.L51,.L396-.L51,.L397-.L51
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L611:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_calcDIVx')
	.sect	'.debug_frame'
	.word	24
	.word	.L611,.L23,.L282-.L23
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_getAuxResult')
	.sect	'.debug_frame'
	.word	24
	.word	.L611,.L25,.L269-.L25
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initAuxFilter')
	.sect	'.debug_frame'
	.word	20
	.word	.L611,.L27,.L291-.L27
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initCarrierGen')
	.sect	'.debug_frame'
	.word	52
	.word	.L611,.L29,.L138-.L29
	.byte	4
	.word	(.L345-.L29)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L10-.L345)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L138-.L10)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L611,.L33,.L193-.L33
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initChannelConfig')
	.sect	'.debug_frame'
	.word	16
	.word	.L611,.L35,.L264-.L35
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initCombFilter')
	.sect	'.debug_frame'
	.word	20
	.word	.L611,.L37,.L297-.L37
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initDemodulator')
	.sect	'.debug_frame'
	.word	20
	.word	.L611,.L39,.L303-.L39
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initFirFilter')
	.sect	'.debug_frame'
	.word	20
	.word	.L611,.L41,.L309-.L41
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initIntegrator')
	.sect	'.debug_frame'
	.word	20
	.word	.L611,.L43,.L315-.L43
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initModulator')
	.sect	'.debug_frame'
	.word	36
	.word	.L611,.L45,.L321-.L45
	.byte	4
	.word	(.L382-.L45)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L321-.L382)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L611,.L47,.L176-.L47
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initModuleConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L611,.L49,.L189-.L49
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initRectifier')
	.sect	'.debug_frame'
	.word	20
	.word	.L611,.L51,.L333-.L51
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxDsadc_Dsadc_initCarrierGenConfig')
	.sect	'.debug_frame'
	.word	24
	.word	.L611,.L53,.L278-.L53
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L612:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L612,.L31,.L137-.L31
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
